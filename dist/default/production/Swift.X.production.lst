

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Mar 05 22:06:32 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.10
    57                           ; Generated 31/07/2019 GMT
    58                           ; 
    59                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F877A Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  0081                     	;# 
   126  0085                     	;# 
   127  0086                     	;# 
   128  0087                     	;# 
   129  0088                     	;# 
   130  0089                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  0091                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0098                     	;# 
   139  0099                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  010C                     	;# 
   145  010D                     	;# 
   146  010E                     	;# 
   147  010F                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  0000                     	;# 
   151  0001                     	;# 
   152  0002                     	;# 
   153  0003                     	;# 
   154  0004                     	;# 
   155  0005                     	;# 
   156  0006                     	;# 
   157  0007                     	;# 
   158  0008                     	;# 
   159  0009                     	;# 
   160  000A                     	;# 
   161  000B                     	;# 
   162  000C                     	;# 
   163  000D                     	;# 
   164  000E                     	;# 
   165  000E                     	;# 
   166  000F                     	;# 
   167  0010                     	;# 
   168  0011                     	;# 
   169  0012                     	;# 
   170  0013                     	;# 
   171  0014                     	;# 
   172  0015                     	;# 
   173  0015                     	;# 
   174  0016                     	;# 
   175  0017                     	;# 
   176  0018                     	;# 
   177  0019                     	;# 
   178  001A                     	;# 
   179  001B                     	;# 
   180  001B                     	;# 
   181  001C                     	;# 
   182  001D                     	;# 
   183  001E                     	;# 
   184  001F                     	;# 
   185  0081                     	;# 
   186  0085                     	;# 
   187  0086                     	;# 
   188  0087                     	;# 
   189  0088                     	;# 
   190  0089                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0094                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0098                     	;# 
   259  0099                     	;# 
   260  009C                     	;# 
   261  009D                     	;# 
   262  009E                     	;# 
   263  009F                     	;# 
   264  010C                     	;# 
   265  010D                     	;# 
   266  010E                     	;# 
   267  010F                     	;# 
   268  018C                     	;# 
   269  018D                     	;# 
   270  0000                     	;# 
   271  0001                     	;# 
   272  0002                     	;# 
   273  0003                     	;# 
   274  0004                     	;# 
   275  0005                     	;# 
   276  0006                     	;# 
   277  0007                     	;# 
   278  0008                     	;# 
   279  0009                     	;# 
   280  000A                     	;# 
   281  000B                     	;# 
   282  000C                     	;# 
   283  000D                     	;# 
   284  000E                     	;# 
   285  000E                     	;# 
   286  000F                     	;# 
   287  0010                     	;# 
   288  0011                     	;# 
   289  0012                     	;# 
   290  0013                     	;# 
   291  0014                     	;# 
   292  0015                     	;# 
   293  0015                     	;# 
   294  0016                     	;# 
   295  0017                     	;# 
   296  0018                     	;# 
   297  0019                     	;# 
   298  001A                     	;# 
   299  001B                     	;# 
   300  001B                     	;# 
   301  001C                     	;# 
   302  001D                     	;# 
   303  001E                     	;# 
   304  001F                     	;# 
   305  0081                     	;# 
   306  0085                     	;# 
   307  0086                     	;# 
   308  0087                     	;# 
   309  0088                     	;# 
   310  0089                     	;# 
   311  008C                     	;# 
   312  008D                     	;# 
   313  008E                     	;# 
   314  0091                     	;# 
   315  0092                     	;# 
   316  0093                     	;# 
   317  0094                     	;# 
   318  0098                     	;# 
   319  0099                     	;# 
   320  009C                     	;# 
   321  009D                     	;# 
   322  009E                     	;# 
   323  009F                     	;# 
   324  010C                     	;# 
   325  010D                     	;# 
   326  010E                     	;# 
   327  010F                     	;# 
   328  018C                     	;# 
   329  018D                     	;# 
   330  0000                     	;# 
   331  0001                     	;# 
   332  0002                     	;# 
   333  0003                     	;# 
   334  0004                     	;# 
   335  0005                     	;# 
   336  0006                     	;# 
   337  0007                     	;# 
   338  0008                     	;# 
   339  0009                     	;# 
   340  000A                     	;# 
   341  000B                     	;# 
   342  000C                     	;# 
   343  000D                     	;# 
   344  000E                     	;# 
   345  000E                     	;# 
   346  000F                     	;# 
   347  0010                     	;# 
   348  0011                     	;# 
   349  0012                     	;# 
   350  0013                     	;# 
   351  0014                     	;# 
   352  0015                     	;# 
   353  0015                     	;# 
   354  0016                     	;# 
   355  0017                     	;# 
   356  0018                     	;# 
   357  0019                     	;# 
   358  001A                     	;# 
   359  001B                     	;# 
   360  001B                     	;# 
   361  001C                     	;# 
   362  001D                     	;# 
   363  001E                     	;# 
   364  001F                     	;# 
   365  0081                     	;# 
   366  0085                     	;# 
   367  0086                     	;# 
   368  0087                     	;# 
   369  0088                     	;# 
   370  0089                     	;# 
   371  008C                     	;# 
   372  008D                     	;# 
   373  008E                     	;# 
   374  0091                     	;# 
   375  0092                     	;# 
   376  0093                     	;# 
   377  0094                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009C                     	;# 
   381  009D                     	;# 
   382  009E                     	;# 
   383  009F                     	;# 
   384  010C                     	;# 
   385  010D                     	;# 
   386  010E                     	;# 
   387  010F                     	;# 
   388  018C                     	;# 
   389  018D                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  0008                     	;# 
   399  0009                     	;# 
   400  000A                     	;# 
   401  000B                     	;# 
   402  000C                     	;# 
   403  000D                     	;# 
   404  000E                     	;# 
   405  000E                     	;# 
   406  000F                     	;# 
   407  0010                     	;# 
   408  0011                     	;# 
   409  0012                     	;# 
   410  0013                     	;# 
   411  0014                     	;# 
   412  0015                     	;# 
   413  0015                     	;# 
   414  0016                     	;# 
   415  0017                     	;# 
   416  0018                     	;# 
   417  0019                     	;# 
   418  001A                     	;# 
   419  001B                     	;# 
   420  001B                     	;# 
   421  001C                     	;# 
   422  001D                     	;# 
   423  001E                     	;# 
   424  001F                     	;# 
   425  0081                     	;# 
   426  0085                     	;# 
   427  0086                     	;# 
   428  0087                     	;# 
   429  0088                     	;# 
   430  0089                     	;# 
   431  008C                     	;# 
   432  008D                     	;# 
   433  008E                     	;# 
   434  0091                     	;# 
   435  0092                     	;# 
   436  0093                     	;# 
   437  0094                     	;# 
   438  0098                     	;# 
   439  0099                     	;# 
   440  009C                     	;# 
   441  009D                     	;# 
   442  009E                     	;# 
   443  009F                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  018C                     	;# 
   449  018D                     	;# 
   450  0000                     	;# 
   451  0001                     	;# 
   452  0002                     	;# 
   453  0003                     	;# 
   454  0004                     	;# 
   455  0005                     	;# 
   456  0006                     	;# 
   457  0007                     	;# 
   458  0008                     	;# 
   459  0009                     	;# 
   460  000A                     	;# 
   461  000B                     	;# 
   462  000C                     	;# 
   463  000D                     	;# 
   464  000E                     	;# 
   465  000E                     	;# 
   466  000F                     	;# 
   467  0010                     	;# 
   468  0011                     	;# 
   469  0012                     	;# 
   470  0013                     	;# 
   471  0014                     	;# 
   472  0015                     	;# 
   473  0015                     	;# 
   474  0016                     	;# 
   475  0017                     	;# 
   476  0018                     	;# 
   477  0019                     	;# 
   478  001A                     	;# 
   479  001B                     	;# 
   480  001B                     	;# 
   481  001C                     	;# 
   482  001D                     	;# 
   483  001E                     	;# 
   484  001F                     	;# 
   485  0081                     	;# 
   486  0085                     	;# 
   487  0086                     	;# 
   488  0087                     	;# 
   489  0088                     	;# 
   490  0089                     	;# 
   491  008C                     	;# 
   492  008D                     	;# 
   493  008E                     	;# 
   494  0091                     	;# 
   495  0092                     	;# 
   496  0093                     	;# 
   497  0094                     	;# 
   498  0098                     	;# 
   499  0099                     	;# 
   500  009C                     	;# 
   501  009D                     	;# 
   502  009E                     	;# 
   503  009F                     	;# 
   504  010C                     	;# 
   505  010D                     	;# 
   506  010E                     	;# 
   507  010F                     	;# 
   508  018C                     	;# 
   509  018D                     	;# 
   510                           
   511                           	psect	idataBANK0
   512  07F4                     __pidataBANK0:	
   513                           
   514                           ;initializer for _rows
   515  07F4  3403               	retlw	3
   516  07F5  3402               	retlw	2
   517  07F6  3401               	retlw	1
   518  07F7  3400               	retlw	0
   519                           
   520                           ;initializer for _columns
   521  07F8  3400               	retlw	0
   522  07F9  3401               	retlw	1
   523  07FA  3402               	retlw	2
   524                           
   525                           ;initializer for void_lcd_goto@F869
   526  07FB  3480               	retlw	128
   527  07FC  34C0               	retlw	192
   528                           
   529                           ;initializer for _n
   530  07FD  3404               	retlw	4
   531                           
   532                           	psect	idataBANK1
   533  0EA6                     __pidataBANK1:	
   534                           
   535                           ;initializer for _keypad_map
   536  0EA6  3401               	retlw	1
   537  0EA7  3402               	retlw	2
   538  0EA8  3403               	retlw	3
   539  0EA9  3404               	retlw	4
   540  0EAA  3405               	retlw	5
   541  0EAB  3406               	retlw	6
   542  0EAC  3407               	retlw	7
   543  0EAD  3408               	retlw	8
   544  0EAE  3409               	retlw	9
   545  0EAF  3461               	retlw	97
   546  0EB0  3400               	retlw	0
   547  0EB1  3468               	retlw	104
   548                           
   549                           ;initializer for _text
   550  0EB2  344D               	retlw	77
   551  0EB3  3469               	retlw	105
   552  0EB4  3463               	retlw	99
   553  0EB5  3472               	retlw	114
   554  0EB6  346F               	retlw	111
   555  0EB7  3477               	retlw	119
   556  0EB8  3461               	retlw	97
   557  0EB9  3476               	retlw	118
   558  0EBA  3465               	retlw	101
   559  0EBB  3400               	retlw	0
   560  0EBC  3400               	retlw	0
   561  0EBD  3400               	retlw	0
   562  0EBE  3400               	retlw	0
   563  0EBF  3400               	retlw	0
   564  0EC0  3400               	retlw	0
   565  0EC1  3400               	retlw	0
   566  0EC2  3400               	retlw	0
   567  0EC3  3400               	retlw	0
   568  0EC4  3400               	retlw	0
   569  0EC5  3400               	retlw	0
   570  0EC6  3400               	retlw	0
   571  0EC7  3400               	retlw	0
   572  0EC8  3400               	retlw	0
   573  0EC9  3400               	retlw	0
   574  0ECA  3400               	retlw	0
   575  0ECB  3400               	retlw	0
   576  0ECC  3400               	retlw	0
   577  0ECD  3400               	retlw	0
   578  0ECE  3400               	retlw	0
   579  0ECF  3400               	retlw	0
   580  0ED0  3400               	retlw	0
   581  0ED1  3400               	retlw	0
   582  0ED2  3400               	retlw	0
   583  0ED3  3400               	retlw	0
   584  0ED4  3400               	retlw	0
   585  0ED5  3400               	retlw	0
   586  0ED6  3400               	retlw	0
   587  0ED7  3400               	retlw	0
   588  0ED8  3400               	retlw	0
   589  0ED9  3400               	retlw	0
   590  0EDA  3400               	retlw	0
   591  0EDB  3400               	retlw	0
   592  0EDC  3400               	retlw	0
   593  0EDD  3400               	retlw	0
   594  0EDE  3400               	retlw	0
   595  0EDF  3400               	retlw	0
   596  0EE0  3400               	retlw	0
   597  0EE1  3400               	retlw	0
   598  0EE2  3400               	retlw	0
   599  0EE3  3400               	retlw	0
   600                           
   601                           ;initializer for _text_t
   602  0EE4  3430               	retlw	48
   603  0EE5  3430               	retlw	48
   604  0EE6  343A               	retlw	58
   605  0EE7  3430               	retlw	48
   606  0EE8  3430               	retlw	48
   607  0EE9  3400               	retlw	0
   608  0EEA  3400               	retlw	0
   609  0EEB  3400               	retlw	0
   610  0EEC  3400               	retlw	0
   611  0EED  3400               	retlw	0
   612                           
   613                           	psect	strings
   614  07AB                     __pstrings:	
   615  07AB                     stringtab:	
   616  07AB                     __stringtab:	
   617  07AB                     stringcode:	
   618                           ;	String table - string pointers are 1 byte each
   619                           
   620  07AB                     stringdir:	
   621  07AB  3007               	movlw	high stringdir
   622  07AC  008A               	movwf	10
   623  07AD  0804               	movf	4,w
   624  07AE  0A84               	incf	4,f
   625  07AF  0782               	addwf	2,f
   626  07B0                     __stringbase:	
   627  07B0  3400               	retlw	0
   628  07B1                     __end_of__stringtab:	
   629  07B1                     _dpowers:	
   630  07B1  3401               	retlw	1
   631  07B2  3400               	retlw	0
   632  07B3  340A               	retlw	10
   633  07B4  3400               	retlw	0
   634  07B5  3464               	retlw	100
   635  07B6  3400               	retlw	0
   636  07B7  34E8               	retlw	232
   637  07B8  3403               	retlw	3
   638  07B9  3410               	retlw	16
   639  07BA  3427               	retlw	39
   640  07BB                     __end_of_dpowers:	
   641  0010                     _T1CON	set	16
   642  0009                     _PORTE	set	9
   643  0008                     _PORTD	set	8
   644  0007                     _PORTC	set	7
   645  0006                     _PORTB	set	6
   646  0005                     _PORTA	set	5
   647  000E                     _TMR1L	set	14
   648  000F                     _TMR1H	set	15
   649  005E                     _PEIE	set	94
   650  005F                     _GIE	set	95
   651  0080                     _TMR1ON	set	128
   652  0060                     _TMR1IF	set	96
   653  0089                     _TRISE	set	137
   654  0088                     _TRISD	set	136
   655  0087                     _TRISC	set	135
   656  0086                     _TRISB	set	134
   657  0085                     _TRISA	set	133
   658  0460                     _TMR1IE	set	1120
   659  07BB                     STR_4:	
   660  07BB  3464               	retlw	100	;'d'
   661  07BC  346F               	retlw	111	;'o'
   662  07BD  346F               	retlw	111	;'o'
   663  07BE  3472               	retlw	114	;'r'
   664  07BF  3420               	retlw	32	;' '
   665  07C0  3469               	retlw	105	;'i'
   666  07C1  3473               	retlw	115	;'s'
   667  07C2  3420               	retlw	32	;' '
   668  07C3  346F               	retlw	111	;'o'
   669  07C4  3470               	retlw	112	;'p'
   670  07C5  3465               	retlw	101	;'e'
   671  07C6  346E               	retlw	110	;'n'
   672  07C7  3421               	retlw	33	;'!'
   673  07C8  3400               	retlw	0
   674  07C9                     STR_1:	
   675  07C9  3425               	retlw	37	;'%'
   676  07CA  3464               	retlw	100	;'d'
   677  07CB  3425               	retlw	37	;'%'
   678  07CC  3464               	retlw	100	;'d'
   679  07CD  343A               	retlw	58	;':'
   680  07CE  3425               	retlw	37	;'%'
   681  07CF  3464               	retlw	100	;'d'
   682  07D0  3425               	retlw	37	;'%'
   683  07D1  3464               	retlw	100	;'d'
   684  07D2  3400               	retlw	0
   685  07D3                     STR_5:	
   686  07D3  344D               	retlw	77	;'M'
   687  07D4  3469               	retlw	105	;'i'
   688  07D5  3463               	retlw	99	;'c'
   689  07D6  3472               	retlw	114	;'r'
   690  07D7  346F               	retlw	111	;'o'
   691  07D8  3477               	retlw	119	;'w'
   692  07D9  3461               	retlw	97	;'a'
   693  07DA  3476               	retlw	118	;'v'
   694  07DB  3465               	retlw	101	;'e'
   695  07DC  3400               	retlw	0
   696  07DD                     STR_2:	
   697  07DD  3425               	retlw	37	;'%'
   698  07DE  3464               	retlw	100	;'d'
   699  07DF  3425               	retlw	37	;'%'
   700  07E0  3464               	retlw	100	;'d'
   701  07E1  3425               	retlw	37	;'%'
   702  07E2  3464               	retlw	100	;'d'
   703  07E3  3400               	retlw	0
   704  07E4                     STR_3:	
   705  07E4  3425               	retlw	37	;'%'
   706  07E5  3464               	retlw	100	;'d'
   707  07E6  343A               	retlw	58	;':'
   708  07E7  3425               	retlw	37	;'%'
   709  07E8  3464               	retlw	100	;'d'
   710  07E9  3400               	retlw	0
   711  07EA                     STR_8:	
   712  07EA  3420               	retlw	32	;' '
   713  07EB  3420               	retlw	32	;' '
   714  07EC  3420               	retlw	32	;' '
   715  07ED  3420               	retlw	32	;' '
   716  07EE  3400               	retlw	0
   717  07EF                     STR_7:	
   718  07EF  3444               	retlw	68	;'D'
   719  07F0  346F               	retlw	111	;'o'
   720  07F1  346E               	retlw	110	;'n'
   721  07F2  3465               	retlw	101	;'e'
   722  07F3  3400               	retlw	0
   723  07C9                     
   724                           ; #config settings
   725  0000                     
   726                           	psect	cinit
   727  000F                     start_initialization:	
   728  000F                     __initialization:	
   729                           
   730                           ; Initialize objects allocated to BANK1
   731  000F  1383               	bcf	3,7	;select IRP bank0
   732  0010  30E8               	movlw	low (__pdataBANK1+72)
   733  0011  00FD               	movwf	btemp+-1
   734  0012  300E               	movlw	high __pidataBANK1
   735  0013  00FE               	movwf	btemp
   736  0014  30A6               	movlw	low __pidataBANK1
   737  0015  00FF               	movwf	btemp+1
   738  0016  30A0               	movlw	low __pdataBANK1
   739  0017  0084               	movwf	4
   740  0018  120A  158A  22BD  120A  118A  	fcall	init_ram0
   741                           
   742                           ; Initialize objects allocated to BANK0
   743  001D  3070               	movlw	low (__pdataBANK0+10)
   744  001E  00FD               	movwf	btemp+-1
   745  001F  3007               	movlw	high __pidataBANK0
   746  0020  00FE               	movwf	btemp
   747  0021  30F4               	movlw	low __pidataBANK0
   748  0022  00FF               	movwf	btemp+1
   749  0023  3066               	movlw	low __pdataBANK0
   750  0024  0084               	movwf	4
   751  0025  120A  158A  22BD  120A  118A  	fcall	init_ram0
   752                           
   753                           ; Clear objects allocated to BANK0
   754  002A  3051               	movlw	low __pbssBANK0
   755  002B  0084               	movwf	4
   756  002C  3066               	movlw	low (__pbssBANK0+21)
   757  002D  120A  158A  229E  120A  118A  	fcall	clear_ram0
   758                           
   759                           ; Clear objects allocated to COMMON
   760  0032  01F8               	clrf	__pbssCOMMON& (0+127)
   761  0033  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   762  0034  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   763  0035                     end_of_initialization:	
   764                           ;End of C runtime variable initialization code
   765                           
   766  0035                     __end_of__initialization:	
   767  0035  0183               	clrf	3
   768  0036  120A  118A  2954   	ljmp	_main	;jump to C main() function
   769                           
   770                           	psect	bssCOMMON
   771  0078                     __pbssCOMMON:	
   772  0078                     _pause_flag:	
   773  0078                     	ds	1
   774  0079                     _start_flag:	
   775  0079                     	ds	1
   776  007A                     _door_flag:	
   777  007A                     	ds	1
   778                           
   779                           	psect	bssBANK0
   780  0051                     __pbssBANK0:	
   781  0051                     _k:	
   782  0051                     	ds	2
   783  0053                     _time_s:	
   784  0053                     	ds	2
   785  0055                     _secs:	
   786  0055                     	ds	2
   787  0057                     _mins:	
   788  0057                     	ds	2
   789  0059                     _Done_flag:	
   790  0059                     	ds	1
   791  005A                     _sec:	
   792  005A                     	ds	1
   793  005B                     _count:	
   794  005B                     	ds	1
   795  005C                     _reset_flag:	
   796  005C                     	ds	1
   797  005D                     _text_debug:	
   798  005D                     	ds	5
   799  0062                     _time:	
   800  0062                     	ds	4
   801                           
   802                           	psect	dataBANK0
   803  0066                     __pdataBANK0:	
   804  0066                     _rows:	
   805  0066                     	ds	4
   806  006A                     _columns:	
   807  006A                     	ds	3
   808  006D                     void_lcd_goto@F869:	
   809  006D                     	ds	2
   810  006F                     _n:	
   811  006F                     	ds	1
   812                           
   813                           	psect	dataBANK1
   814  00A0                     __pdataBANK1:	
   815  00A0                     _keypad_map:	
   816  00A0                     	ds	12
   817  00AC                     _text:	
   818  00AC                     	ds	50
   819  00DE                     _text_t:	
   820  00DE                     	ds	10
   821                           
   822                           	psect	inittext
   823  0AB9                     init_fetch0:	
   824                           ;	Called with low address in FSR and high address in W
   825                           
   826  0AB9  087E               	movf	btemp,w
   827  0ABA  008A               	movwf	10
   828  0ABB  087F               	movf	btemp+1,w
   829  0ABC  0082               	movwf	2
   830  0ABD                     init_ram0:	
   831                           ;Called with:
   832                           ;	high address of idata address in btemp 
   833                           ;	low address of idata address in btemp+1 
   834                           ;	low address of data in FSR
   835                           ;	high address + 1 of data in btemp-1
   836                           
   837  0ABD  120A  158A  22B9  120A  158A  	fcall	init_fetch0
   838  0AC2  0080               	movwf	0
   839  0AC3  0A84               	incf	4,f
   840  0AC4  0804               	movf	4,w
   841  0AC5  067D               	xorwf	btemp+-1,w
   842  0AC6  1903               	btfsc	3,2
   843  0AC7  3400               	retlw	0
   844  0AC8  0AFF               	incf	btemp+1,f
   845  0AC9  1903               	btfsc	3,2
   846  0ACA  0AFE               	incf	btemp,f
   847  0ACB  2ABD               	goto	init_ram0
   848                           
   849                           	psect	clrtext
   850  0A9E                     clear_ram0:	
   851                           ;	Called with FSR containing the base address, and
   852                           ;	W with the last address+1
   853                           
   854  0A9E  0064               	clrwdt	;clear the watchdog before getting into this loop
   855  0A9F                     clrloop0:	
   856  0A9F  0180               	clrf	0	;clear RAM location pointed to by FSR
   857  0AA0  0A84               	incf	4,f	;increment pointer
   858  0AA1  0604               	xorwf	4,w	;XOR with final address
   859  0AA2  1903               	btfsc	3,2	;have we reached the end yet?
   860  0AA3  3400               	retlw	0	;all done for this memory range, return
   861  0AA4  0604               	xorwf	4,w	;XOR again to restore value
   862  0AA5  2A9F               	goto	clrloop0	;do the next byte
   863                           
   864                           	psect	cstackCOMMON
   865  0070                     __pcstackCOMMON:	
   866  0070                     ?_void_init_lcd:	
   867  0070                     ?_void_init_keypad:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0070                     ?_void_init_sensors:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0070                     ?_void_init_actuators:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0070                     ?_void_update_status:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0070                     ?_void_door:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  0070                     ?_void_start:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0070                     ?_void_pause:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0070                     ?_void_operation:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0070                     ?_void_lcd_print:	
   892                           ; 1 bytes @ 0x0
   893                           
   894  0070                     ?_void_lcd_clear:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  0070                     ?_void_start_heating:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  0070                     ?_void_stop_heating:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0070                     ?_void_LCD_init_Command:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0070                     ?_void_lcd_send_command:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0070                     ?_void_pulse:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0070                     ?_timer_isr:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0070                     ??_timer_isr:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     ?_void_microwave_timer:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0070                     ?_void_lcd_send_data:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0070                     ?_main:	
   925                           ; 1 bytes @ 0x0
   926                           
   927                           
   928                           ; 2 bytes @ 0x0
   929  0070                     	ds	3
   930  0073                     ?_void_init_timer:	
   931  0073                     ?_delay_ms:	
   932                           ; 1 bytes @ 0x3
   933                           
   934  0073                     ?_delay_msk:	
   935                           ; 1 bytes @ 0x3
   936                           
   937  0073                     ?_void_init_pin:	
   938                           ; 1 bytes @ 0x3
   939                           
   940  0073                     ?_void_write_pin:	
   941                           ; 1 bytes @ 0x3
   942                           
   943  0073                     ?_void_write_port:	
   944                           ; 1 bytes @ 0x3
   945                           
   946  0073                     ?_char_read_pin:	
   947                           ; 1 bytes @ 0x3
   948                           
   949  0073                     ?___bmul:	
   950                           ; 1 bytes @ 0x3
   951                           
   952  0073                     ?___wmul:	
   953                           ; 1 bytes @ 0x3
   954                           
   955  0073                     ?___awdiv:	
   956                           ; 2 bytes @ 0x3
   957                           
   958  0073                     ?___awmod:	
   959                           ; 2 bytes @ 0x3
   960                           
   961  0073                     ?___lwdiv:	
   962                           ; 2 bytes @ 0x3
   963                           
   964  0073                     void_init_pin@pinnumber:	
   965                           ; 2 bytes @ 0x3
   966                           
   967  0073                     void_write_pin@pinnumber:	
   968                           ; 1 bytes @ 0x3
   969                           
   970  0073                     void_write_port@pins_dir:	
   971                           ; 1 bytes @ 0x3
   972                           
   973  0073                     char_read_pin@pinnumber:	
   974                           ; 1 bytes @ 0x3
   975                           
   976  0073                     void_init_timer@I:	
   977                           ; 1 bytes @ 0x3
   978                           
   979  0073                     ___bmul@multiplicand:	
   980                           ; 1 bytes @ 0x3
   981                           
   982  0073                     delay_ms@ms_Count:	
   983                           ; 1 bytes @ 0x3
   984                           
   985  0073                     delay_msk@ms_Count:	
   986                           ; 2 bytes @ 0x3
   987                           
   988  0073                     ___wmul@multiplier:	
   989                           ; 2 bytes @ 0x3
   990                           
   991  0073                     ___awdiv@divisor:	
   992                           ; 2 bytes @ 0x3
   993                           
   994  0073                     ___awmod@divisor:	
   995                           ; 2 bytes @ 0x3
   996                           
   997  0073                     ___lwdiv@divisor:	
   998                           ; 2 bytes @ 0x3
   999                           
  1000                           
  1001                           ; 2 bytes @ 0x3
  1002  0073                     	ds	1
  1003  0074                     ??_void_write_port:	
  1004  0074                     ??_char_read_pin:	
  1005                           ; 1 bytes @ 0x4
  1006                           
  1007  0074                     ??___bmul:	
  1008                           ; 1 bytes @ 0x4
  1009                           
  1010  0074                     void_init_pin@dir:	
  1011                           ; 1 bytes @ 0x4
  1012                           
  1013  0074                     void_write_pin@state:	
  1014                           ; 1 bytes @ 0x4
  1015                           
  1016  0074                     void_init_timer@timer_H_reg:	
  1017                           ; 1 bytes @ 0x4
  1018                           
  1019                           
  1020                           ; 2 bytes @ 0x4
  1021  0074                     	ds	1
  1022  0075                     ??_delay_ms:	
  1023  0075                     ??_delay_msk:	
  1024                           ; 1 bytes @ 0x5
  1025                           
  1026  0075                     ??_void_init_pin:	
  1027                           ; 1 bytes @ 0x5
  1028                           
  1029  0075                     ??_void_write_pin:	
  1030                           ; 1 bytes @ 0x5
  1031                           
  1032  0075                     ___bmul@product:	
  1033                           ; 1 bytes @ 0x5
  1034                           
  1035  0075                     ___wmul@multiplicand:	
  1036                           ; 1 bytes @ 0x5
  1037                           
  1038  0075                     ___awdiv@dividend:	
  1039                           ; 2 bytes @ 0x5
  1040                           
  1041  0075                     ___awmod@dividend:	
  1042                           ; 2 bytes @ 0x5
  1043                           
  1044  0075                     ___lwdiv@dividend:	
  1045                           ; 2 bytes @ 0x5
  1046                           
  1047                           
  1048                           ; 2 bytes @ 0x5
  1049  0075                     	ds	1
  1050  0076                     void_write_port@portname:	
  1051  0076                     char_read_pin@portname:	
  1052                           ; 1 bytes @ 0x6
  1053                           
  1054  0076                     ___bmul@multiplier:	
  1055                           ; 1 bytes @ 0x6
  1056                           
  1057  0076                     void_init_timer@timer_L_reg:	
  1058                           ; 1 bytes @ 0x6
  1059                           
  1060                           
  1061                           ; 2 bytes @ 0x6
  1062  0076                     	ds	1
  1063  0077                     ??_void_door:	
  1064  0077                     ??_void_start:	
  1065                           ; 1 bytes @ 0x7
  1066                           
  1067  0077                     ??_void_pause:	
  1068                           ; 1 bytes @ 0x7
  1069                           
  1070  0077                     ?_void_time_input:	
  1071                           ; 1 bytes @ 0x7
  1072                           
  1073  0077                     ??___wmul:	
  1074                           ; 1 bytes @ 0x7
  1075                           
  1076  0077                     ??___awdiv:	
  1077                           ; 1 bytes @ 0x7
  1078                           
  1079  0077                     ??___awmod:	
  1080                           ; 1 bytes @ 0x7
  1081                           
  1082  0077                     ??___lwdiv:	
  1083                           ; 1 bytes @ 0x7
  1084                           
  1085  0077                     void_time_input@input:	
  1086                           ; 1 bytes @ 0x7
  1087                           
  1088  0077                     void_init_pin@portname:	
  1089                           ; 1 bytes @ 0x7
  1090                           
  1091  0077                     void_write_pin@portname:	
  1092                           ; 1 bytes @ 0x7
  1093                           
  1094                           
  1095                           ; 1 bytes @ 0x7
  1096  0077                     	ds	1
  1097  0078                     ??_void_lcd_goto:	
  1098  0078                     ??_void_lcd_clear:	
  1099                           ; 1 bytes @ 0x8
  1100                           
  1101  0078                     ??_void_pulse:	
  1102                           ; 1 bytes @ 0x8
  1103                           
  1104                           
  1105                           	psect	cstackBANK0
  1106  0020                     __pcstackBANK0:	
  1107                           ; 1 bytes @ 0x8
  1108                           
  1109  0020                     ??_void_init_keypad:	
  1110  0020                     ??_void_init_timer:	
  1111                           ; 1 bytes @ 0x0
  1112                           
  1113  0020                     ??_void_init_sensors:	
  1114                           ; 1 bytes @ 0x0
  1115                           
  1116  0020                     ??_void_init_actuators:	
  1117                           ; 1 bytes @ 0x0
  1118                           
  1119  0020                     ??_void_start_heating:	
  1120                           ; 1 bytes @ 0x0
  1121                           
  1122  0020                     ??_void_stop_heating:	
  1123                           ; 1 bytes @ 0x0
  1124                           
  1125  0020                     ___awdiv@counter:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0020                     ___awmod@counter:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0020                     ___lwdiv@counter:	
  1132                           ; 1 bytes @ 0x0
  1133                           
  1134  0020                     delay_ms@i:	
  1135                           ; 1 bytes @ 0x0
  1136                           
  1137  0020                     delay_msk@i:	
  1138                           ; 2 bytes @ 0x0
  1139                           
  1140  0020                     ___wmul@product:	
  1141                           ; 2 bytes @ 0x0
  1142                           
  1143                           
  1144                           ; 2 bytes @ 0x0
  1145  0020                     	ds	1
  1146  0021                     ___awdiv@sign:	
  1147  0021                     ___awmod@sign:	
  1148                           ; 1 bytes @ 0x1
  1149                           
  1150  0021                     void_init_keypad@x:	
  1151                           ; 1 bytes @ 0x1
  1152                           
  1153  0021                     ___lwdiv@quotient:	
  1154                           ; 2 bytes @ 0x1
  1155                           
  1156                           
  1157                           ; 2 bytes @ 0x1
  1158  0021                     	ds	1
  1159  0022                     ??_void_time_input:	
  1160  0022                     void_init_timer@prescaler:	
  1161                           ; 1 bytes @ 0x2
  1162                           
  1163  0022                     delay_ms@j:	
  1164                           ; 1 bytes @ 0x2
  1165                           
  1166  0022                     delay_msk@j:	
  1167                           ; 2 bytes @ 0x2
  1168                           
  1169  0022                     ___awdiv@quotient:	
  1170                           ; 2 bytes @ 0x2
  1171                           
  1172                           
  1173                           ; 2 bytes @ 0x2
  1174  0022                     	ds	1
  1175  0023                     ?___lwmod:	
  1176  0023                     ___lwmod@divisor:	
  1177                           ; 2 bytes @ 0x3
  1178                           
  1179                           
  1180                           ; 2 bytes @ 0x3
  1181  0023                     	ds	1
  1182  0024                     ??_void_LCD_init_Command:	
  1183  0024                     ??_void_lcd_send_command:	
  1184                           ; 1 bytes @ 0x4
  1185                           
  1186  0024                     ??_void_lcd_send_data:	
  1187                           ; 1 bytes @ 0x4
  1188                           
  1189  0024                     ?_key_read_keypad:	
  1190                           ; 1 bytes @ 0x4
  1191                           
  1192  0024                     void_time_input@arr:	
  1193                           ; 2 bytes @ 0x4
  1194                           
  1195                           
  1196                           ; 1 bytes @ 0x4
  1197  0024                     	ds	1
  1198  0025                     void_LCD_init_Command@command:	
  1199  0025                     ___lwmod@dividend:	
  1200                           ; 1 bytes @ 0x5
  1201                           
  1202                           
  1203                           ; 2 bytes @ 0x5
  1204  0025                     	ds	1
  1205  0026                     ??_key_read_keypad:	
  1206  0026                     void_lcd_send_command@command:	
  1207                           ; 1 bytes @ 0x6
  1208                           
  1209  0026                     void_lcd_send_data@data:	
  1210                           ; 1 bytes @ 0x6
  1211                           
  1212                           
  1213                           ; 1 bytes @ 0x6
  1214  0026                     	ds	1
  1215  0027                     ??_void_init_lcd:	
  1216  0027                     ?_void_lcd_goto:	
  1217                           ; 1 bytes @ 0x7
  1218                           
  1219  0027                     ??_void_lcd_print:	
  1220                           ; 1 bytes @ 0x7
  1221                           
  1222  0027                     ??___lwmod:	
  1223                           ; 1 bytes @ 0x7
  1224                           
  1225  0027                     void_lcd_goto@x:	
  1226                           ; 1 bytes @ 0x7
  1227                           
  1228  0027                     key_read_keypad@r:	
  1229                           ; 1 bytes @ 0x7
  1230                           
  1231                           
  1232                           ; 2 bytes @ 0x7
  1233  0027                     	ds	1
  1234  0028                     ___lwmod@counter:	
  1235  0028                     void_lcd_print@i:	
  1236                           ; 1 bytes @ 0x8
  1237                           
  1238  0028                     void_lcd_goto@lcd_screen_adresses:	
  1239                           ; 2 bytes @ 0x8
  1240                           
  1241                           
  1242                           ; 2 bytes @ 0x8
  1243  0028                     	ds	1
  1244  0029                     ?_sprintf:	
  1245  0029                     sprintf@f:	
  1246                           ; 2 bytes @ 0x9
  1247                           
  1248  0029                     key_read_keypad@c:	
  1249                           ; 1 bytes @ 0x9
  1250                           
  1251                           
  1252                           ; 2 bytes @ 0x9
  1253  0029                     	ds	1
  1254  002A                     void_lcd_print@string:	
  1255  002A                     void_lcd_goto@y:	
  1256                           ; 1 bytes @ 0xA
  1257                           
  1258                           
  1259                           ; 1 bytes @ 0xA
  1260  002A                     	ds	1
  1261  002B                     ??_void_update_status:	
  1262  002B                     key_read_keypad@k:	
  1263                           ; 1 bytes @ 0xB
  1264                           
  1265                           
  1266                           ; 2 bytes @ 0xB
  1267  002B                     	ds	7
  1268  0032                     ??_sprintf:	
  1269                           
  1270                           ; 1 bytes @ 0x12
  1271  0032                     	ds	3
  1272  0035                     sprintf@ap:	
  1273                           
  1274                           ; 1 bytes @ 0x15
  1275  0035                     	ds	1
  1276  0036                     sprintf@flag:	
  1277                           
  1278                           ; 1 bytes @ 0x16
  1279  0036                     	ds	1
  1280  0037                     sprintf@prec:	
  1281                           
  1282                           ; 1 bytes @ 0x17
  1283  0037                     	ds	1
  1284  0038                     sprintf@val:	
  1285                           
  1286                           ; 2 bytes @ 0x18
  1287  0038                     	ds	2
  1288  003A                     sprintf@sp:	
  1289                           
  1290                           ; 1 bytes @ 0x1A
  1291  003A                     	ds	1
  1292  003B                     sprintf@c:	
  1293                           
  1294                           ; 1 bytes @ 0x1B
  1295  003B                     	ds	1
  1296  003C                     ??_void_microwave_timer:	
  1297                           
  1298                           ; 1 bytes @ 0x1C
  1299  003C                     	ds	1
  1300  003D                     ??_void_operation:	
  1301                           
  1302                           ; 1 bytes @ 0x1D
  1303  003D                     	ds	9
  1304  0046                     void_operation@i_161:	
  1305                           
  1306                           ; 1 bytes @ 0x26
  1307  0046                     	ds	1
  1308  0047                     void_operation@i:	
  1309                           
  1310                           ; 1 bytes @ 0x27
  1311  0047                     	ds	1
  1312  0048                     ??_main:	
  1313                           
  1314                           ; 1 bytes @ 0x28
  1315  0048                     	ds	9
  1316                           
  1317                           	psect	maintext
  1318  0154                     __pmaintext:	
  1319 ;;
  1320 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
  1321 ;;
  1322 ;; *************** function _main *****************
  1323 ;; Defined at:
  1324 ;;		line 70 in file "main.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;		None
  1327 ;; Auto vars:     Size  Location     Type
  1328 ;;		None
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  2   88[None  ] int 
  1331 ;; Registers used:
  1332 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : B00/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1338 ;;      Params:         0       0       0       0       0
  1339 ;;      Locals:         0       0       0       0       0
  1340 ;;      Temps:          0       9       0       0       0
  1341 ;;      Totals:         0       9       0       0       0
  1342 ;;Total ram usage:        9 bytes
  1343 ;; Hardware stack levels required when called:    8
  1344 ;; This function calls:
  1345 ;;		___bmul
  1346 ;;		_key_read_keypad
  1347 ;;		_sprintf
  1348 ;;		_void_door
  1349 ;;		_void_init_actuators
  1350 ;;		_void_init_keypad
  1351 ;;		_void_init_lcd
  1352 ;;		_void_init_sensors
  1353 ;;		_void_init_timer
  1354 ;;		_void_lcd_goto
  1355 ;;		_void_lcd_print
  1356 ;;		_void_operation
  1357 ;;		_void_pause
  1358 ;;		_void_start
  1359 ;;		_void_time_input
  1360 ;;		_void_update_status
  1361 ;; This function is called by:
  1362 ;;		Startup code after reset
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           
  1367                           ;psect for function _main
  1368  0154                     _main:	
  1369  0154                     l3147:	
  1370                           ;incstack = 0
  1371                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1372                           
  1373                           
  1374                           ;main.c: 75:     void_init_lcd();
  1375  0154  120A  118A  24FA  120A  118A  	fcall	_void_init_lcd
  1376  0159                     l3149:	
  1377                           
  1378                           ;main.c: 76:     void_init_keypad();
  1379  0159  120A  118A  26C9  120A  118A  	fcall	_void_init_keypad
  1380  015E                     l3151:	
  1381                           
  1382                           ;main.c: 77:     void_init_timer(8,1,0x3C,0xB0);
  1383  015E  01F3               	clrf	void_init_timer@I
  1384  015F  0AF3               	incf	void_init_timer@I,f
  1385  0160  303C               	movlw	60
  1386  0161  00F4               	movwf	void_init_timer@timer_H_reg
  1387  0162  3000               	movlw	0
  1388  0163  00F5               	movwf	void_init_timer@timer_H_reg+1
  1389  0164  30B0               	movlw	176
  1390  0165  00F6               	movwf	void_init_timer@timer_L_reg
  1391  0166  3000               	movlw	0
  1392  0167  00F7               	movwf	void_init_timer@timer_L_reg+1
  1393  0168  3008               	movlw	8
  1394  0169  120A  158A  249E  120A  118A  	fcall	_void_init_timer
  1395  016E                     l3153:	
  1396                           
  1397                           ;main.c: 79:     void_init_sensors();
  1398  016E  120A  158A  23E9  120A  118A  	fcall	_void_init_sensors
  1399  0173                     l3155:	
  1400                           
  1401                           ;main.c: 80:     void_init_actuators();
  1402  0173  120A  158A  24D1  120A  118A  	fcall	_void_init_actuators
  1403  0178                     l3157:	
  1404                           
  1405                           ;main.c: 81:     void_update_status();
  1406  0178  120A  158A  2572  120A  118A  	fcall	_void_update_status
  1407  017D                     l3159:	
  1408                           
  1409                           ;main.c: 85:     {;main.c: 86:         void_door();
  1410  017D  120A  158A  22F7  120A  118A  	fcall	_void_door
  1411  0182                     l3161:	
  1412                           
  1413                           ;main.c: 87:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1414  0182  3082               	movlw	130
  1415  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1416  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1417  0185  00C9               	movwf	??_main+1
  1418  0186  30DD               	movlw	221
  1419  0187  00C8               	movwf	??_main
  1420  0188                     u3187:	
  1421  0188  0BC8               	decfsz	??_main,f
  1422  0189  2988               	goto	u3187
  1423  018A  0BC9               	decfsz	??_main+1,f
  1424  018B  2988               	goto	u3187
  1425  018C                     l3163:	
  1426                           
  1427                           ;main.c: 88:         void_start();
  1428  018C  120A  158A  22A6  120A  118A  	fcall	_void_start
  1429  0191                     l3165:	
  1430                           
  1431                           ;main.c: 89:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1432  0191  3082               	movlw	130
  1433  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0193  1303               	bcf	3,6	;RP1=0, select bank0
  1435  0194  00C9               	movwf	??_main+1
  1436  0195  30DD               	movlw	221
  1437  0196  00C8               	movwf	??_main
  1438  0197                     u3197:	
  1439  0197  0BC8               	decfsz	??_main,f
  1440  0198  2997               	goto	u3197
  1441  0199  0BC9               	decfsz	??_main+1,f
  1442  019A  2997               	goto	u3197
  1443  019B                     l3167:	
  1444                           
  1445                           ;main.c: 90:         void_pause();
  1446  019B  120A  158A  246C  120A  118A  	fcall	_void_pause
  1447  01A0                     l3169:	
  1448                           
  1449                           ;main.c: 91:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1450  01A0  3082               	movlw	130
  1451  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1452  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1453  01A3  00C9               	movwf	??_main+1
  1454  01A4  30DD               	movlw	221
  1455  01A5  00C8               	movwf	??_main
  1456  01A6                     u3207:	
  1457  01A6  0BC8               	decfsz	??_main,f
  1458  01A7  29A6               	goto	u3207
  1459  01A8  0BC9               	decfsz	??_main+1,f
  1460  01A9  29A6               	goto	u3207
  1461  01AA                     l3171:	
  1462                           
  1463                           ;main.c: 92:         void_operation();
  1464  01AA  120A  118A  2039  120A  118A  	fcall	_void_operation
  1465  01AF                     l3173:	
  1466                           
  1467                           ;main.c: 97:         k=key_read_keypad();
  1468  01AF  120A  118A  25B1  120A  118A  	fcall	_key_read_keypad
  1469  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1470  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1471  01B6  0825               	movf	?_key_read_keypad+1,w
  1472  01B7  00D2               	movwf	_k+1
  1473  01B8  0824               	movf	?_key_read_keypad,w
  1474  01B9  00D1               	movwf	_k
  1475  01BA                     l3175:	
  1476                           
  1477                           ;main.c: 98:         if (k.x !=5)
  1478  01BA  3005               	movlw	5
  1479  01BB  0651               	xorwf	_k,w
  1480  01BC  1903               	btfsc	3,2
  1481  01BD  29BF               	goto	u3171
  1482  01BE  29C0               	goto	u3170
  1483  01BF                     u3171:	
  1484  01BF  2A09               	goto	l90
  1485  01C0                     u3170:	
  1486  01C0                     l3177:	
  1487                           
  1488                           ;main.c: 99:         {;main.c: 100:             void_time_input(time,keypad_map[k.x][k.y
      +                          ]);
  1489  01C0  3003               	movlw	3
  1490  01C1  00C8               	movwf	??_main
  1491  01C2  0848               	movf	??_main,w
  1492  01C3  00F3               	movwf	___bmul@multiplicand
  1493  01C4  0851               	movf	_k,w
  1494  01C5  120A  158A  22CC  120A  118A  	fcall	___bmul
  1495  01CA  3EA0               	addlw	(low (_keypad_map| 0))& (0+255)
  1496  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1497  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1498  01CD  0752               	addwf	_k+1,w
  1499  01CE  00C9               	movwf	??_main+1
  1500  01CF  0849               	movf	??_main+1,w
  1501  01D0  0084               	movwf	4
  1502  01D1  1383               	bcf	3,7	;select IRP bank1
  1503  01D2  0800               	movf	0,w
  1504  01D3  00CA               	movwf	??_main+2
  1505  01D4  084A               	movf	??_main+2,w
  1506  01D5  00F7               	movwf	void_time_input@input
  1507  01D6  3062               	movlw	(low (_time| 0))& (0+255)
  1508  01D7  120A  118A  2644  120A  118A  	fcall	_void_time_input
  1509  01DC                     l3179:	
  1510                           
  1511                           ;main.c: 101:             sprintf(text_t,"%d%d:%d%d",time[0],time[1],time[2],time[3]);
  1512  01DC  3019               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1513  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1514  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1515  01DF  00C8               	movwf	??_main
  1516  01E0  0848               	movf	??_main,w
  1517  01E1  00A9               	movwf	sprintf@f
  1518  01E2  0862               	movf	_time,w
  1519  01E3  00C9               	movwf	??_main+1
  1520  01E4  01CA               	clrf	??_main+2
  1521  01E5  0849               	movf	??_main+1,w
  1522  01E6  00AA               	movwf	?_sprintf+1
  1523  01E7  084A               	movf	??_main+2,w
  1524  01E8  00AB               	movwf	?_sprintf+2
  1525  01E9  0863               	movf	_time+1,w
  1526  01EA  00CB               	movwf	??_main+3
  1527  01EB  01CC               	clrf	??_main+4
  1528  01EC  084B               	movf	??_main+3,w
  1529  01ED  00AC               	movwf	?_sprintf+3
  1530  01EE  084C               	movf	??_main+4,w
  1531  01EF  00AD               	movwf	?_sprintf+4
  1532  01F0  0864               	movf	_time+2,w
  1533  01F1  00CD               	movwf	??_main+5
  1534  01F2  01CE               	clrf	??_main+6
  1535  01F3  084D               	movf	??_main+5,w
  1536  01F4  00AE               	movwf	?_sprintf+5
  1537  01F5  084E               	movf	??_main+6,w
  1538  01F6  00AF               	movwf	?_sprintf+6
  1539  01F7  0865               	movf	_time+3,w
  1540  01F8  00CF               	movwf	??_main+7
  1541  01F9  01D0               	clrf	??_main+8
  1542  01FA  084F               	movf	??_main+7,w
  1543  01FB  00B0               	movwf	?_sprintf+7
  1544  01FC  0850               	movf	??_main+8,w
  1545  01FD  00B1               	movwf	?_sprintf+8
  1546  01FE  30DE               	movlw	(low (_text_t| 0))& (0+255)
  1547  01FF  120A  118A  223E  120A  118A  	fcall	_sprintf
  1548  0204                     l3181:	
  1549                           
  1550                           ;main.c: 102:             void_update_status();
  1551  0204  120A  158A  2572  120A  118A  	fcall	_void_update_status
  1552  0209                     l90:	
  1553                           ;main.c: 103:         }
  1554                           
  1555                           
  1556                           ;main.c: 108:         sprintf(text_debug,"%d%d%d",start_flag,pause_flag,door_flag);
  1557  0209  302D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1558  020A  1283               	bcf	3,5	;RP0=0, select bank0
  1559  020B  1303               	bcf	3,6	;RP1=0, select bank0
  1560  020C  00C8               	movwf	??_main
  1561  020D  0848               	movf	??_main,w
  1562  020E  00A9               	movwf	sprintf@f
  1563  020F  0879               	movf	_start_flag,w
  1564  0210  00C9               	movwf	??_main+1
  1565  0211  01CA               	clrf	??_main+2
  1566  0212  0849               	movf	??_main+1,w
  1567  0213  00AA               	movwf	?_sprintf+1
  1568  0214  084A               	movf	??_main+2,w
  1569  0215  00AB               	movwf	?_sprintf+2
  1570  0216  0878               	movf	_pause_flag,w
  1571  0217  00CB               	movwf	??_main+3
  1572  0218  01CC               	clrf	??_main+4
  1573  0219  084B               	movf	??_main+3,w
  1574  021A  00AC               	movwf	?_sprintf+3
  1575  021B  084C               	movf	??_main+4,w
  1576  021C  00AD               	movwf	?_sprintf+4
  1577  021D  087A               	movf	_door_flag,w
  1578  021E  00CD               	movwf	??_main+5
  1579  021F  01CE               	clrf	??_main+6
  1580  0220  084D               	movf	??_main+5,w
  1581  0221  00AE               	movwf	?_sprintf+5
  1582  0222  084E               	movf	??_main+6,w
  1583  0223  00AF               	movwf	?_sprintf+6
  1584  0224  305D               	movlw	(low (_text_debug| 0))& (0+255)
  1585  0225  120A  118A  223E  120A  118A  	fcall	_sprintf
  1586  022A                     l3183:	
  1587                           
  1588                           ;main.c: 109:         void_lcd_goto(2,1);
  1589  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1590  022B  1303               	bcf	3,6	;RP1=0, select bank0
  1591  022C  01A7               	clrf	void_lcd_goto@x
  1592  022D  0AA7               	incf	void_lcd_goto@x,f
  1593  022E  3002               	movlw	2
  1594  022F  120A  158A  2311  120A  118A  	fcall	_void_lcd_goto
  1595  0234                     l3185:	
  1596                           
  1597                           ;main.c: 110:         void_lcd_print(text_debug);
  1598  0234  305D               	movlw	(low (_text_debug| 0))& (0+255)
  1599  0235  120A  158A  2350  120A  118A  	fcall	_void_lcd_print
  1600  023A  297D               	goto	l3159
  1601  023B  120A  118A  280C   	ljmp	start
  1602  023E                     __end_of_main:	
  1603                           
  1604                           	psect	text1
  1605  0644                     __ptext1:	
  1606 ;; *************** function _void_time_input *****************
  1607 ;; Defined at:
  1608 ;;		line 121 in file "main.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;  arr             1    wreg     PTR unsigned char 
  1611 ;;		 -> time(4), 
  1612 ;;  input           1    7[COMMON] unsigned char 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  arr             1    4[BANK0 ] PTR unsigned char 
  1615 ;;		 -> time(4), 
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1625 ;;      Params:         1       0       0       0       0
  1626 ;;      Locals:         0       1       0       0       0
  1627 ;;      Temps:          0       2       0       0       0
  1628 ;;      Totals:         1       3       0       0       0
  1629 ;;Total ram usage:        4 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:    2
  1632 ;; This function calls:
  1633 ;;		___wmul
  1634 ;; This function is called by:
  1635 ;;		_main
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           
  1640                           ;psect for function _void_time_input
  1641  0644                     _void_time_input:	
  1642                           
  1643                           ;incstack = 0
  1644                           ; Regs used in _void_time_input: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1645                           ;void_time_input@arr stored from wreg
  1646  0644  1283               	bcf	3,5	;RP0=0, select bank0
  1647  0645  1303               	bcf	3,6	;RP1=0, select bank0
  1648  0646  00A4               	movwf	void_time_input@arr
  1649  0647                     l3131:	
  1650                           
  1651                           ;main.c: 121: void void_time_input(char * arr,char input);main.c: 122: {;main.c: 123:   
      +                            if (arr[0]==0)
  1652  0647  0824               	movf	void_time_input@arr,w
  1653  0648  0084               	movwf	4
  1654  0649  1383               	bcf	3,7	;select IRP bank0
  1655  064A  0800               	movf	0,w
  1656  064B  1D03               	btfss	3,2
  1657  064C  2E4E               	goto	u3161
  1658  064D  2E4F               	goto	u3160
  1659  064E                     u3161:	
  1660  064E  2E71               	goto	l3141
  1661  064F                     u3160:	
  1662  064F                     l3133:	
  1663                           
  1664                           ;main.c: 124:     {;main.c: 125:         arr[0]=arr[1];
  1665  064F  0A24               	incf	void_time_input@arr,w
  1666  0650  0084               	movwf	4
  1667  0651  0800               	movf	0,w
  1668  0652  00A2               	movwf	??_void_time_input
  1669  0653  0824               	movf	void_time_input@arr,w
  1670  0654  0084               	movwf	4
  1671  0655  0822               	movf	??_void_time_input,w
  1672  0656  0080               	movwf	0
  1673  0657                     l3135:	
  1674                           
  1675                           ;main.c: 126:         arr[1]=arr[2];
  1676  0657  0824               	movf	void_time_input@arr,w
  1677  0658  3E02               	addlw	2
  1678  0659  0084               	movwf	4
  1679  065A  0800               	movf	0,w
  1680  065B  00A2               	movwf	??_void_time_input
  1681  065C  0A24               	incf	void_time_input@arr,w
  1682  065D  0084               	movwf	4
  1683  065E  0822               	movf	??_void_time_input,w
  1684  065F  0080               	movwf	0
  1685  0660                     l3137:	
  1686                           
  1687                           ;main.c: 127:         arr[2]=arr[3];
  1688  0660  0824               	movf	void_time_input@arr,w
  1689  0661  3E03               	addlw	3
  1690  0662  0084               	movwf	4
  1691  0663  0800               	movf	0,w
  1692  0664  00A2               	movwf	??_void_time_input
  1693  0665  0824               	movf	void_time_input@arr,w
  1694  0666  3E02               	addlw	2
  1695  0667  0084               	movwf	4
  1696  0668  0822               	movf	??_void_time_input,w
  1697  0669  0080               	movwf	0
  1698  066A                     l3139:	
  1699                           
  1700                           ;main.c: 128:         arr[3]=input;
  1701  066A  0877               	movf	void_time_input@input,w
  1702  066B  00A2               	movwf	??_void_time_input
  1703  066C  0824               	movf	void_time_input@arr,w
  1704  066D  3E03               	addlw	3
  1705  066E  0084               	movwf	4
  1706  066F  0822               	movf	??_void_time_input,w
  1707  0670  0080               	movwf	0
  1708  0671                     l3141:	
  1709                           
  1710                           ;main.c: 132:     mins = arr[0]*10+arr[1] ;
  1711  0671  0824               	movf	void_time_input@arr,w
  1712  0672  0084               	movwf	4
  1713  0673  0800               	movf	0,w
  1714  0674  00A2               	movwf	??_void_time_input
  1715  0675  01A3               	clrf	??_void_time_input+1
  1716  0676  0822               	movf	??_void_time_input,w
  1717  0677  00F3               	movwf	___wmul@multiplier
  1718  0678  0823               	movf	??_void_time_input+1,w
  1719  0679  00F4               	movwf	___wmul@multiplier+1
  1720  067A  300A               	movlw	10
  1721  067B  00F5               	movwf	___wmul@multiplicand
  1722  067C  3000               	movlw	0
  1723  067D  00F6               	movwf	___wmul@multiplicand+1
  1724  067E  120A  158A  2411  120A  118A  	fcall	___wmul
  1725  0683  1283               	bcf	3,5	;RP0=0, select bank0
  1726  0684  1303               	bcf	3,6	;RP1=0, select bank0
  1727  0685  0A24               	incf	void_time_input@arr,w
  1728  0686  0084               	movwf	4
  1729  0687  1383               	bcf	3,7	;select IRP bank0
  1730  0688  0800               	movf	0,w
  1731  0689  0773               	addwf	?___wmul,w
  1732  068A  00D7               	movwf	_mins
  1733  068B  3000               	movlw	0
  1734  068C  1803               	skipnc
  1735  068D  3001               	movlw	1
  1736  068E  0774               	addwf	?___wmul+1,w
  1737  068F  00D8               	movwf	_mins+1
  1738  0690                     l3143:	
  1739                           
  1740                           ;main.c: 133:     secs = arr[2]*10+arr[3] ;
  1741  0690  0824               	movf	void_time_input@arr,w
  1742  0691  3E02               	addlw	2
  1743  0692  0084               	movwf	4
  1744  0693  0800               	movf	0,w
  1745  0694  00A2               	movwf	??_void_time_input
  1746  0695  01A3               	clrf	??_void_time_input+1
  1747  0696  0822               	movf	??_void_time_input,w
  1748  0697  00F3               	movwf	___wmul@multiplier
  1749  0698  0823               	movf	??_void_time_input+1,w
  1750  0699  00F4               	movwf	___wmul@multiplier+1
  1751  069A  300A               	movlw	10
  1752  069B  00F5               	movwf	___wmul@multiplicand
  1753  069C  3000               	movlw	0
  1754  069D  00F6               	movwf	___wmul@multiplicand+1
  1755  069E  120A  158A  2411  120A  118A  	fcall	___wmul
  1756  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  1757  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  1758  06A5  0824               	movf	void_time_input@arr,w
  1759  06A6  3E03               	addlw	3
  1760  06A7  0084               	movwf	4
  1761  06A8  1383               	bcf	3,7	;select IRP bank0
  1762  06A9  0800               	movf	0,w
  1763  06AA  0773               	addwf	?___wmul,w
  1764  06AB  00D5               	movwf	_secs
  1765  06AC  3000               	movlw	0
  1766  06AD  1803               	skipnc
  1767  06AE  3001               	movlw	1
  1768  06AF  0774               	addwf	?___wmul+1,w
  1769  06B0  00D6               	movwf	_secs+1
  1770  06B1                     l3145:	
  1771                           
  1772                           ;main.c: 134:     time_s =mins*60+secs ;
  1773  06B1  0858               	movf	_mins+1,w
  1774  06B2  00F4               	movwf	___wmul@multiplier+1
  1775  06B3  0857               	movf	_mins,w
  1776  06B4  00F3               	movwf	___wmul@multiplier
  1777  06B5  303C               	movlw	60
  1778  06B6  00F5               	movwf	___wmul@multiplicand
  1779  06B7  3000               	movlw	0
  1780  06B8  00F6               	movwf	___wmul@multiplicand+1
  1781  06B9  120A  158A  2411  120A  118A  	fcall	___wmul
  1782  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  1783  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  1784  06C0  0855               	movf	_secs,w
  1785  06C1  0773               	addwf	?___wmul,w
  1786  06C2  00D3               	movwf	_time_s
  1787  06C3  0856               	movf	_secs+1,w
  1788  06C4  1803               	skipnc
  1789  06C5  0A56               	incf	_secs+1,w
  1790  06C6  0774               	addwf	?___wmul+1,w
  1791  06C7  00D4               	movwf	_time_s+1
  1792  06C8                     l97:	
  1793  06C8  0008               	return
  1794  06C9                     __end_of_void_time_input:	
  1795                           
  1796                           	psect	text2
  1797  0C11                     __ptext2:	
  1798 ;; *************** function ___wmul *****************
  1799 ;; Defined at:
  1800 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  multiplier      2    3[COMMON] unsigned int 
  1803 ;;  multiplicand    2    5[COMMON] unsigned int 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  product         2    0[BANK0 ] unsigned int 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  2    3[COMMON] unsigned int 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1815 ;;      Params:         4       0       0       0       0
  1816 ;;      Locals:         0       2       0       0       0
  1817 ;;      Temps:          0       0       0       0       0
  1818 ;;      Totals:         4       2       0       0       0
  1819 ;;Total ram usage:        6 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    1
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_void_time_input
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           
  1830                           ;psect for function ___wmul
  1831  0C11                     ___wmul:	
  1832  0C11                     l2941:	
  1833                           ;incstack = 0
  1834                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1835                           
  1836  0C11  1283               	bcf	3,5	;RP0=0, select bank0
  1837  0C12  1303               	bcf	3,6	;RP1=0, select bank0
  1838  0C13  01A0               	clrf	___wmul@product
  1839  0C14  01A1               	clrf	___wmul@product+1
  1840  0C15                     l2943:	
  1841  0C15  1C73               	btfss	___wmul@multiplier,0
  1842  0C16  2C18               	goto	u2951
  1843  0C17  2C19               	goto	u2950
  1844  0C18                     u2951:	
  1845  0C18  2C21               	goto	l495
  1846  0C19                     u2950:	
  1847  0C19                     l2945:	
  1848  0C19  0875               	movf	___wmul@multiplicand,w
  1849  0C1A  1283               	bcf	3,5	;RP0=0, select bank0
  1850  0C1B  1303               	bcf	3,6	;RP1=0, select bank0
  1851  0C1C  07A0               	addwf	___wmul@product,f
  1852  0C1D  1803               	skipnc
  1853  0C1E  0AA1               	incf	___wmul@product+1,f
  1854  0C1F  0876               	movf	___wmul@multiplicand+1,w
  1855  0C20  07A1               	addwf	___wmul@product+1,f
  1856  0C21                     l495:	
  1857  0C21  3001               	movlw	1
  1858  0C22                     u2965:	
  1859  0C22  1003               	clrc
  1860  0C23  0DF5               	rlf	___wmul@multiplicand,f
  1861  0C24  0DF6               	rlf	___wmul@multiplicand+1,f
  1862  0C25  3EFF               	addlw	-1
  1863  0C26  1D03               	skipz
  1864  0C27  2C22               	goto	u2965
  1865  0C28                     l2947:	
  1866  0C28  3001               	movlw	1
  1867  0C29                     u2975:	
  1868  0C29  1003               	clrc
  1869  0C2A  0CF4               	rrf	___wmul@multiplier+1,f
  1870  0C2B  0CF3               	rrf	___wmul@multiplier,f
  1871  0C2C  3EFF               	addlw	-1
  1872  0C2D  1D03               	skipz
  1873  0C2E  2C29               	goto	u2975
  1874  0C2F                     l2949:	
  1875  0C2F  0873               	movf	___wmul@multiplier,w
  1876  0C30  0474               	iorwf	___wmul@multiplier+1,w
  1877  0C31  1D03               	btfss	3,2
  1878  0C32  2C34               	goto	u2981
  1879  0C33  2C35               	goto	u2980
  1880  0C34                     u2981:	
  1881  0C34  2C15               	goto	l2943
  1882  0C35                     u2980:	
  1883  0C35                     l2951:	
  1884  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  1885  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  1886  0C37  0821               	movf	___wmul@product+1,w
  1887  0C38  00F4               	movwf	?___wmul+1
  1888  0C39  0820               	movf	___wmul@product,w
  1889  0C3A  00F3               	movwf	?___wmul
  1890  0C3B                     l497:	
  1891  0C3B  0008               	return
  1892  0C3C                     __end_of___wmul:	
  1893                           
  1894                           	psect	text3
  1895  0AA6                     __ptext3:	
  1896 ;; *************** function _void_start *****************
  1897 ;; Defined at:
  1898 ;;		line 53 in file "HAL/sensors_and_actuator.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;		None
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;		None
  1903 ;; Return value:  Size  Location     Type
  1904 ;;                  1    wreg      void 
  1905 ;; Registers used:
  1906 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1912 ;;      Params:         0       0       0       0       0
  1913 ;;      Locals:         0       0       0       0       0
  1914 ;;      Temps:          1       0       0       0       0
  1915 ;;      Totals:         1       0       0       0       0
  1916 ;;Total ram usage:        1 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    2
  1919 ;; This function calls:
  1920 ;;		_char_read_pin
  1921 ;; This function is called by:
  1922 ;;		_main
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           
  1927                           ;psect for function _void_start
  1928  0AA6                     _void_start:	
  1929  0AA6                     l2297:	
  1930                           ;incstack = 0
  1931                           ; Regs used in _void_start: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1932                           
  1933                           
  1934                           ;HAL/sensors_and_actuator.c: 55:     if (!char_read_pin('b',3))
  1935  0AA6  3003               	movlw	3
  1936  0AA7  00F7               	movwf	??_void_start
  1937  0AA8  0877               	movf	??_void_start,w
  1938  0AA9  00F3               	movwf	char_read_pin@pinnumber
  1939  0AAA  3062               	movlw	98
  1940  0AAB  120A  158A  27A2  120A  158A  	fcall	_char_read_pin
  1941  0AB0  3A00               	xorlw	0
  1942  0AB1  1D03               	skipz
  1943  0AB2  2AB4               	goto	u2081
  1944  0AB3  2AB5               	goto	u2080
  1945  0AB4                     u2081:	
  1946  0AB4  2AB8               	goto	l354
  1947  0AB5                     u2080:	
  1948  0AB5                     l2299:	
  1949                           
  1950                           ;HAL/sensors_and_actuator.c: 56:     {;HAL/sensors_and_actuator.c: 57:         start_fla
      +                          g = 1;
  1951  0AB5  01F9               	clrf	_start_flag
  1952  0AB6  0AF9               	incf	_start_flag,f
  1953  0AB7                     l2301:	
  1954                           
  1955                           ;HAL/sensors_and_actuator.c: 58:         pause_flag = 0;
  1956  0AB7  01F8               	clrf	_pause_flag
  1957  0AB8                     l354:	
  1958  0AB8  0008               	return
  1959  0AB9                     __end_of_void_start:	
  1960                           
  1961                           	psect	text4
  1962  0C6C                     __ptext4:	
  1963 ;; *************** function _void_pause *****************
  1964 ;; Defined at:
  1965 ;;		line 63 in file "HAL/sensors_and_actuator.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;		None
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;		None
  1970 ;; Return value:  Size  Location     Type
  1971 ;;                  1    wreg      void 
  1972 ;; Registers used:
  1973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1974 ;; Tracked objects:
  1975 ;;		On entry : 0/0
  1976 ;;		On exit  : 0/0
  1977 ;;		Unchanged: 0/0
  1978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1979 ;;      Params:         0       0       0       0       0
  1980 ;;      Locals:         0       0       0       0       0
  1981 ;;      Temps:          1       0       0       0       0
  1982 ;;      Totals:         1       0       0       0       0
  1983 ;;Total ram usage:        1 bytes
  1984 ;; Hardware stack levels used:    1
  1985 ;; Hardware stack levels required when called:    2
  1986 ;; This function calls:
  1987 ;;		_char_read_pin
  1988 ;; This function is called by:
  1989 ;;		_main
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993                           
  1994                           ;psect for function _void_pause
  1995  0C6C                     _void_pause:	
  1996  0C6C                     l2303:	
  1997                           ;incstack = 0
  1998                           ; Regs used in _void_pause: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1999                           
  2000                           
  2001                           ;HAL/sensors_and_actuator.c: 65:     if (!char_read_pin('b',4) && (pause_flag==0))
  2002  0C6C  3004               	movlw	4
  2003  0C6D  00F7               	movwf	??_void_pause
  2004  0C6E  0877               	movf	??_void_pause,w
  2005  0C6F  00F3               	movwf	char_read_pin@pinnumber
  2006  0C70  3062               	movlw	98
  2007  0C71  120A  158A  27A2  120A  158A  	fcall	_char_read_pin
  2008  0C76  3A00               	xorlw	0
  2009  0C77  1D03               	skipz
  2010  0C78  2C7A               	goto	u2091
  2011  0C79  2C7B               	goto	u2090
  2012  0C7A                     u2091:	
  2013  0C7A  2C83               	goto	l2309
  2014  0C7B                     u2090:	
  2015  0C7B                     l2305:	
  2016  0C7B  0878               	movf	_pause_flag,w
  2017  0C7C  1D03               	btfss	3,2
  2018  0C7D  2C7F               	goto	u2101
  2019  0C7E  2C80               	goto	u2100
  2020  0C7F                     u2101:	
  2021  0C7F  2C83               	goto	l2309
  2022  0C80                     u2100:	
  2023  0C80                     l2307:	
  2024                           
  2025                           ;HAL/sensors_and_actuator.c: 66:     {;HAL/sensors_and_actuator.c: 67:         pause_fla
      +                          g = 1;
  2026  0C80  01F8               	clrf	_pause_flag
  2027  0C81  0AF8               	incf	_pause_flag,f
  2028                           
  2029                           ;HAL/sensors_and_actuator.c: 68:         return ;
  2030  0C82  2C9D               	goto	l358
  2031  0C83                     l2309:	
  2032                           
  2033                           ;HAL/sensors_and_actuator.c: 70:         if (!char_read_pin('b',4) && (pause_flag==1))
  2034  0C83  3004               	movlw	4
  2035  0C84  00F7               	movwf	??_void_pause
  2036  0C85  0877               	movf	??_void_pause,w
  2037  0C86  00F3               	movwf	char_read_pin@pinnumber
  2038  0C87  3062               	movlw	98
  2039  0C88  120A  158A  27A2  120A  158A  	fcall	_char_read_pin
  2040  0C8D  3A00               	xorlw	0
  2041  0C8E  1D03               	skipz
  2042  0C8F  2C91               	goto	u2111
  2043  0C90  2C92               	goto	u2110
  2044  0C91                     u2111:	
  2045  0C91  2C9D               	goto	l358
  2046  0C92                     u2110:	
  2047  0C92                     l2311:	
  2048  0C92  0378               	decf	_pause_flag,w
  2049  0C93  1D03               	btfss	3,2
  2050  0C94  2C96               	goto	u2121
  2051  0C95  2C97               	goto	u2120
  2052  0C96                     u2121:	
  2053  0C96  2C9D               	goto	l358
  2054  0C97                     u2120:	
  2055  0C97                     l2313:	
  2056                           
  2057                           ;HAL/sensors_and_actuator.c: 71:     {;HAL/sensors_and_actuator.c: 72:         pause_fla
      +                          g = 0;
  2058  0C97  01F8               	clrf	_pause_flag
  2059                           
  2060                           ;HAL/sensors_and_actuator.c: 73:         start_flag = 0;
  2061  0C98  01F9               	clrf	_start_flag
  2062  0C99                     l2315:	
  2063                           
  2064                           ;HAL/sensors_and_actuator.c: 74:         reset_flag=1;
  2065  0C99  1283               	bcf	3,5	;RP0=0, select bank0
  2066  0C9A  1303               	bcf	3,6	;RP1=0, select bank0
  2067  0C9B  01DC               	clrf	_reset_flag
  2068  0C9C  0ADC               	incf	_reset_flag,f
  2069  0C9D                     l358:	
  2070  0C9D  0008               	return
  2071  0C9E                     __end_of_void_pause:	
  2072                           
  2073                           	psect	text5
  2074  0039                     __ptext5:	
  2075 ;; *************** function _void_operation *****************
  2076 ;; Defined at:
  2077 ;;		line 168 in file "main.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;		None
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;  i               1   38[BANK0 ] unsigned char 
  2082 ;;  i               1   39[BANK0 ] unsigned char 
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  1    wreg      void 
  2085 ;; Registers used:
  2086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2092 ;;      Params:         0       0       0       0       0
  2093 ;;      Locals:         0       2       0       0       0
  2094 ;;      Temps:          0       9       0       0       0
  2095 ;;      Totals:         0      11       0       0       0
  2096 ;;Total ram usage:       11 bytes
  2097 ;; Hardware stack levels used:    1
  2098 ;; Hardware stack levels required when called:    7
  2099 ;; This function calls:
  2100 ;;		_sprintf
  2101 ;;		_void_lcd_goto
  2102 ;;		_void_lcd_print
  2103 ;;		_void_microwave_timer
  2104 ;;		_void_start_heating
  2105 ;;		_void_stop_heating
  2106 ;;		_void_update_status
  2107 ;; This function is called by:
  2108 ;;		_main
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           
  2113                           ;psect for function _void_operation
  2114  0039                     _void_operation:	
  2115  0039                     l3009:	
  2116                           ;incstack = 0
  2117                           ; Regs used in _void_operation: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2118                           
  2119  0039  087A               	movf	_door_flag,w
  2120  003A  1D03               	btfss	3,2
  2121  003B  283D               	goto	u3011
  2122  003C  283E               	goto	u3010
  2123  003D                     u3011:	
  2124  003D  2862               	goto	l3019
  2125  003E                     u3010:	
  2126  003E                     l3011:	
  2127  003E  0879               	movf	_start_flag,w
  2128  003F  1903               	btfsc	3,2
  2129  0040  2842               	goto	u3021
  2130  0041  2843               	goto	u3020
  2131  0042                     u3021:	
  2132  0042  2862               	goto	l3019
  2133  0043                     u3020:	
  2134  0043                     l3013:	
  2135                           
  2136                           ;main.c: 170:         {;main.c: 171:             sprintf(text,"door is open!");
  2137  0043  300B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2138  0044  1283               	bcf	3,5	;RP0=0, select bank0
  2139  0045  1303               	bcf	3,6	;RP1=0, select bank0
  2140  0046  00BD               	movwf	??_void_operation
  2141  0047  083D               	movf	??_void_operation,w
  2142  0048  00A9               	movwf	sprintf@f
  2143  0049  30AC               	movlw	(low (_text| 0))& (0+255)
  2144  004A  120A  118A  223E  120A  118A  	fcall	_sprintf
  2145  004F                     l3015:	
  2146                           
  2147                           ;main.c: 172:             void_lcd_goto(1,3);
  2148  004F  3003               	movlw	3
  2149  0050  1283               	bcf	3,5	;RP0=0, select bank0
  2150  0051  1303               	bcf	3,6	;RP1=0, select bank0
  2151  0052  00BD               	movwf	??_void_operation
  2152  0053  083D               	movf	??_void_operation,w
  2153  0054  00A7               	movwf	void_lcd_goto@x
  2154  0055  3001               	movlw	1
  2155  0056  120A  158A  2311  120A  118A  	fcall	_void_lcd_goto
  2156  005B                     l3017:	
  2157                           
  2158                           ;main.c: 173:             void_lcd_print(text);
  2159  005B  30AC               	movlw	(low (_text| 0))& (0+255)
  2160  005C  120A  158A  2350  120A  118A  	fcall	_void_lcd_print
  2161                           
  2162                           ;main.c: 174:         }
  2163  0061  286E               	goto	l3021
  2164  0062                     l3019:	
  2165                           
  2166                           ;main.c: 176:         {;main.c: 178:         sprintf(text,"Microwave");
  2167  0062  3023               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2168  0063  1283               	bcf	3,5	;RP0=0, select bank0
  2169  0064  1303               	bcf	3,6	;RP1=0, select bank0
  2170  0065  00BD               	movwf	??_void_operation
  2171  0066  083D               	movf	??_void_operation,w
  2172  0067  00A9               	movwf	sprintf@f
  2173  0068  30AC               	movlw	(low (_text| 0))& (0+255)
  2174  0069  120A  118A  223E  120A  118A  	fcall	_sprintf
  2175  006E                     l3021:	
  2176                           
  2177                           ;main.c: 184:         if (start_flag&&door_flag && !pause_flag)
  2178  006E  0879               	movf	_start_flag,w
  2179  006F  1903               	btfsc	3,2
  2180  0070  2872               	goto	u3031
  2181  0071  2873               	goto	u3030
  2182  0072                     u3031:	
  2183  0072  288A               	goto	l3033
  2184  0073                     u3030:	
  2185  0073                     l3023:	
  2186  0073  087A               	movf	_door_flag,w
  2187  0074  1903               	btfsc	3,2
  2188  0075  2877               	goto	u3041
  2189  0076  2878               	goto	u3040
  2190  0077                     u3041:	
  2191  0077  288A               	goto	l3033
  2192  0078                     u3040:	
  2193  0078                     l3025:	
  2194  0078  0878               	movf	_pause_flag,w
  2195  0079  1D03               	btfss	3,2
  2196  007A  287C               	goto	u3051
  2197  007B  287D               	goto	u3050
  2198  007C                     u3051:	
  2199  007C  288A               	goto	l3033
  2200  007D                     u3050:	
  2201  007D                     l3027:	
  2202                           
  2203                           ;main.c: 185:         {;main.c: 186:             void_start_heating();
  2204  007D  120A  158A  2505  120A  118A  	fcall	_void_start_heating
  2205  0082                     l3029:	
  2206                           
  2207                           ;main.c: 187:             void_microwave_timer();
  2208  0082  120A  158A  26EE  120A  118A  	fcall	_void_microwave_timer
  2209  0087                     l3031:	
  2210                           
  2211                           ;main.c: 188:             TMR1ON = 1;
  2212  0087  1283               	bcf	3,5	;RP0=0, select bank0
  2213  0088  1303               	bcf	3,6	;RP1=0, select bank0
  2214  0089  1410               	bsf	16,0	;volatile
  2215  008A                     l3033:	
  2216                           
  2217                           ;main.c: 192:         if (pause_flag || (!door_flag && start_flag))
  2218  008A  0878               	movf	_pause_flag,w
  2219  008B  1D03               	btfss	3,2
  2220  008C  288E               	goto	u3061
  2221  008D  288F               	goto	u3060
  2222  008E                     u3061:	
  2223  008E  2899               	goto	l3039
  2224  008F                     u3060:	
  2225  008F                     l3035:	
  2226  008F  087A               	movf	_door_flag,w
  2227  0090  1D03               	btfss	3,2
  2228  0091  2893               	goto	u3071
  2229  0092  2894               	goto	u3070
  2230  0093                     u3071:	
  2231  0093  28A1               	goto	l3043
  2232  0094                     u3070:	
  2233  0094                     l3037:	
  2234  0094  0879               	movf	_start_flag,w
  2235  0095  1903               	btfsc	3,2
  2236  0096  2898               	goto	u3081
  2237  0097  2899               	goto	u3080
  2238  0098                     u3081:	
  2239  0098  28A1               	goto	l3043
  2240  0099                     u3080:	
  2241  0099                     l3039:	
  2242                           
  2243                           ;main.c: 193:         {;main.c: 195:             void_stop_heating();
  2244  0099  120A  158A  243C  120A  118A  	fcall	_void_stop_heating
  2245  009E                     l3041:	
  2246                           
  2247                           ;main.c: 196:             TMR1ON = 0;
  2248  009E  1283               	bcf	3,5	;RP0=0, select bank0
  2249  009F  1303               	bcf	3,6	;RP1=0, select bank0
  2250  00A0  1010               	bcf	16,0	;volatile
  2251  00A1                     l3043:	
  2252                           
  2253                           ;main.c: 200:         if (reset_flag)
  2254  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  2255  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  2256  00A3  085C               	movf	_reset_flag,w
  2257  00A4  1903               	btfsc	3,2
  2258  00A5  28A7               	goto	u3091
  2259  00A6  28A8               	goto	u3090
  2260  00A7                     u3091:	
  2261  00A7  28F1               	goto	l3071
  2262  00A8                     u3090:	
  2263  00A8                     l3045:	
  2264                           
  2265                           ;main.c: 201:         {;main.c: 202:             for (char i =0; i<4;i++)
  2266  00A8  01C7               	clrf	void_operation@i
  2267  00A9                     l3051:	
  2268                           
  2269                           ;main.c: 203:             {;main.c: 204:                 time[i]=0;
  2270  00A9  0847               	movf	void_operation@i,w
  2271  00AA  3E62               	addlw	(low (_time| 0))& (0+255)
  2272  00AB  0084               	movwf	4
  2273  00AC  1383               	bcf	3,7	;select IRP bank0
  2274  00AD  0180               	clrf	0
  2275  00AE                     l3053:	
  2276                           
  2277                           ;main.c: 205:             }
  2278  00AE  3001               	movlw	1
  2279  00AF  00BD               	movwf	??_void_operation
  2280  00B0  083D               	movf	??_void_operation,w
  2281  00B1  07C7               	addwf	void_operation@i,f
  2282  00B2                     l3055:	
  2283  00B2  3004               	movlw	4
  2284  00B3  0247               	subwf	void_operation@i,w
  2285  00B4  1C03               	skipc
  2286  00B5  28B7               	goto	u3101
  2287  00B6  28B8               	goto	u3100
  2288  00B7                     u3101:	
  2289  00B7  28A9               	goto	l3051
  2290  00B8                     u3100:	
  2291  00B8                     l3057:	
  2292                           
  2293                           ;main.c: 206:             sprintf(text_t,"%d%d:%d%d",time[0],time[1],time[2],time[3]);
  2294  00B8  3019               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2295  00B9  00BD               	movwf	??_void_operation
  2296  00BA  083D               	movf	??_void_operation,w
  2297  00BB  00A9               	movwf	sprintf@f
  2298  00BC  0862               	movf	_time,w
  2299  00BD  00BE               	movwf	??_void_operation+1
  2300  00BE  01BF               	clrf	??_void_operation+2
  2301  00BF  083E               	movf	??_void_operation+1,w
  2302  00C0  00AA               	movwf	?_sprintf+1
  2303  00C1  083F               	movf	??_void_operation+2,w
  2304  00C2  00AB               	movwf	?_sprintf+2
  2305  00C3  0863               	movf	_time+1,w
  2306  00C4  00C0               	movwf	??_void_operation+3
  2307  00C5  01C1               	clrf	??_void_operation+4
  2308  00C6  0840               	movf	??_void_operation+3,w
  2309  00C7  00AC               	movwf	?_sprintf+3
  2310  00C8  0841               	movf	??_void_operation+4,w
  2311  00C9  00AD               	movwf	?_sprintf+4
  2312  00CA  0864               	movf	_time+2,w
  2313  00CB  00C2               	movwf	??_void_operation+5
  2314  00CC  01C3               	clrf	??_void_operation+6
  2315  00CD  0842               	movf	??_void_operation+5,w
  2316  00CE  00AE               	movwf	?_sprintf+5
  2317  00CF  0843               	movf	??_void_operation+6,w
  2318  00D0  00AF               	movwf	?_sprintf+6
  2319  00D1  0865               	movf	_time+3,w
  2320  00D2  00C4               	movwf	??_void_operation+7
  2321  00D3  01C5               	clrf	??_void_operation+8
  2322  00D4  0844               	movf	??_void_operation+7,w
  2323  00D5  00B0               	movwf	?_sprintf+7
  2324  00D6  0845               	movf	??_void_operation+8,w
  2325  00D7  00B1               	movwf	?_sprintf+8
  2326  00D8  30DE               	movlw	(low (_text_t| 0))& (0+255)
  2327  00D9  120A  118A  223E  120A  118A  	fcall	_sprintf
  2328  00DE                     l3059:	
  2329                           
  2330                           ;main.c: 207:             time_s=0;
  2331  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  2332  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  2333  00E0  01D3               	clrf	_time_s
  2334  00E1  01D4               	clrf	_time_s+1
  2335  00E2                     l3061:	
  2336                           
  2337                           ;main.c: 208:             start_flag=0;
  2338  00E2  01F9               	clrf	_start_flag
  2339  00E3                     l3063:	
  2340                           
  2341                           ;main.c: 209:             void_stop_heating();
  2342  00E3  120A  158A  243C  120A  118A  	fcall	_void_stop_heating
  2343  00E8                     l3065:	
  2344                           
  2345                           ;main.c: 210:             TMR1ON = 0;
  2346  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  2347  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  2348  00EA  1010               	bcf	16,0	;volatile
  2349  00EB                     l3067:	
  2350                           
  2351                           ;main.c: 211:             reset_flag=0;
  2352  00EB  01DC               	clrf	_reset_flag
  2353  00EC                     l3069:	
  2354                           
  2355                           ;main.c: 212:             void_update_status();
  2356  00EC  120A  158A  2572  120A  118A  	fcall	_void_update_status
  2357  00F1                     l3071:	
  2358                           
  2359                           ;main.c: 215:         if (Done_flag)
  2360  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  2361  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  2362  00F3  0859               	movf	_Done_flag,w
  2363  00F4  1903               	btfsc	3,2
  2364  00F5  28F7               	goto	u3111
  2365  00F6  28F8               	goto	u3110
  2366  00F7                     u3111:	
  2367  00F7  2953               	goto	l120
  2368  00F8                     u3110:	
  2369  00F8                     l3073:	
  2370                           
  2371                           ;main.c: 216:         {;main.c: 217:             for (char i =0; i<3;i++)
  2372  00F8  01C6               	clrf	void_operation@i_161
  2373  00F9                     l3079:	
  2374                           
  2375                           ;main.c: 218:             {;main.c: 219:             sprintf(text,"Done");
  2376  00F9  303F               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2377  00FA  00BD               	movwf	??_void_operation
  2378  00FB  083D               	movf	??_void_operation,w
  2379  00FC  00A9               	movwf	sprintf@f
  2380  00FD  30AC               	movlw	(low (_text| 0))& (0+255)
  2381  00FE  120A  118A  223E  120A  118A  	fcall	_sprintf
  2382  0103                     l3081:	
  2383                           
  2384                           ;main.c: 220:             void_update_status();
  2385  0103  120A  158A  2572  120A  118A  	fcall	_void_update_status
  2386  0108                     l3083:	
  2387                           
  2388                           ;main.c: 221:             _delay((unsigned long)((500)*(8000000/4000.0)));
  2389  0108  3006               	movlw	6
  2390  0109  1283               	bcf	3,5	;RP0=0, select bank0
  2391  010A  1303               	bcf	3,6	;RP1=0, select bank0
  2392  010B  00BF               	movwf	??_void_operation+2
  2393  010C  3013               	movlw	19
  2394  010D  00BE               	movwf	??_void_operation+1
  2395  010E  30AD               	movlw	173
  2396  010F  00BD               	movwf	??_void_operation
  2397  0110                     u3217:	
  2398  0110  0BBD               	decfsz	??_void_operation,f
  2399  0111  2910               	goto	u3217
  2400  0112  0BBE               	decfsz	??_void_operation+1,f
  2401  0113  2910               	goto	u3217
  2402  0114  0BBF               	decfsz	??_void_operation+2,f
  2403  0115  2910               	goto	u3217
  2404  0116                     l3085:	
  2405                           
  2406                           ;main.c: 222:             sprintf(text,"    ");
  2407  0116  303A               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2408  0117  1283               	bcf	3,5	;RP0=0, select bank0
  2409  0118  1303               	bcf	3,6	;RP1=0, select bank0
  2410  0119  00BD               	movwf	??_void_operation
  2411  011A  083D               	movf	??_void_operation,w
  2412  011B  00A9               	movwf	sprintf@f
  2413  011C  30AC               	movlw	(low (_text| 0))& (0+255)
  2414  011D  120A  118A  223E  120A  118A  	fcall	_sprintf
  2415  0122                     l3087:	
  2416                           
  2417                           ;main.c: 223:             void_update_status();
  2418  0122  120A  158A  2572  120A  118A  	fcall	_void_update_status
  2419                           
  2420                           ;main.c: 224:             _delay((unsigned long)((500)*(8000000/4000.0)));
  2421  0127  3006               	movlw	6
  2422  0128  1283               	bcf	3,5	;RP0=0, select bank0
  2423  0129  1303               	bcf	3,6	;RP1=0, select bank0
  2424  012A  00BF               	movwf	??_void_operation+2
  2425  012B  3013               	movlw	19
  2426  012C  00BE               	movwf	??_void_operation+1
  2427  012D  30AD               	movlw	173
  2428  012E  00BD               	movwf	??_void_operation
  2429  012F                     u3227:	
  2430  012F  0BBD               	decfsz	??_void_operation,f
  2431  0130  292F               	goto	u3227
  2432  0131  0BBE               	decfsz	??_void_operation+1,f
  2433  0132  292F               	goto	u3227
  2434  0133  0BBF               	decfsz	??_void_operation+2,f
  2435  0134  292F               	goto	u3227
  2436  0135                     l3089:	
  2437                           
  2438                           ;main.c: 225:             }
  2439  0135  3001               	movlw	1
  2440  0136  1283               	bcf	3,5	;RP0=0, select bank0
  2441  0137  1303               	bcf	3,6	;RP1=0, select bank0
  2442  0138  00BD               	movwf	??_void_operation
  2443  0139  083D               	movf	??_void_operation,w
  2444  013A  07C6               	addwf	void_operation@i_161,f
  2445  013B                     l3091:	
  2446  013B  3003               	movlw	3
  2447  013C  0246               	subwf	void_operation@i_161,w
  2448  013D  1C03               	skipc
  2449  013E  2940               	goto	u3121
  2450  013F  2941               	goto	u3120
  2451  0140                     u3121:	
  2452  0140  28F9               	goto	l3079
  2453  0141                     u3120:	
  2454  0141                     l3093:	
  2455                           
  2456                           ;main.c: 226:             sprintf(text,"Microwave");
  2457  0141  3023               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2458  0142  00BD               	movwf	??_void_operation
  2459  0143  083D               	movf	??_void_operation,w
  2460  0144  00A9               	movwf	sprintf@f
  2461  0145  30AC               	movlw	(low (_text| 0))& (0+255)
  2462  0146  120A  118A  223E  120A  118A  	fcall	_sprintf
  2463  014B                     l3095:	
  2464                           
  2465                           ;main.c: 227:             void_update_status();
  2466  014B  120A  158A  2572  120A  118A  	fcall	_void_update_status
  2467  0150                     l3097:	
  2468                           
  2469                           ;main.c: 228:             Done_flag=0;
  2470  0150  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0151  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0152  01D9               	clrf	_Done_flag
  2473  0153                     l120:	
  2474  0153  0008               	return
  2475  0154                     __end_of_void_operation:	
  2476                           
  2477                           	psect	text6
  2478  0C3C                     __ptext6:	
  2479 ;; *************** function _void_stop_heating *****************
  2480 ;; Defined at:
  2481 ;;		line 32 in file "HAL/sensors_and_actuator.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;		None
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2495 ;;      Params:         0       0       0       0       0
  2496 ;;      Locals:         0       0       0       0       0
  2497 ;;      Temps:          0       1       0       0       0
  2498 ;;      Totals:         0       1       0       0       0
  2499 ;;Total ram usage:        1 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    2
  2502 ;; This function calls:
  2503 ;;		_void_write_pin
  2504 ;; This function is called by:
  2505 ;;		_void_operation
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           
  2510                           ;psect for function _void_stop_heating
  2511  0C3C                     _void_stop_heating:	
  2512  0C3C                     l2885:	
  2513                           ;incstack = 0
  2514                           ; Regs used in _void_stop_heating: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2515                           
  2516                           
  2517                           ;HAL/sensors_and_actuator.c: 35:    void_write_pin('c',2,0);
  2518  0C3C  3002               	movlw	2
  2519  0C3D  1283               	bcf	3,5	;RP0=0, select bank0
  2520  0C3E  1303               	bcf	3,6	;RP1=0, select bank0
  2521  0C3F  00A0               	movwf	??_void_stop_heating
  2522  0C40  0820               	movf	??_void_stop_heating,w
  2523  0C41  00F3               	movwf	void_write_pin@pinnumber
  2524  0C42  01F4               	clrf	void_write_pin@state
  2525  0C43  3063               	movlw	99
  2526  0C44  120A  118A  2411  120A  158A  	fcall	_void_write_pin
  2527                           
  2528                           ;HAL/sensors_and_actuator.c: 36:    void_write_pin('c',5,0);
  2529  0C49  3005               	movlw	5
  2530  0C4A  1283               	bcf	3,5	;RP0=0, select bank0
  2531  0C4B  1303               	bcf	3,6	;RP1=0, select bank0
  2532  0C4C  00A0               	movwf	??_void_stop_heating
  2533  0C4D  0820               	movf	??_void_stop_heating,w
  2534  0C4E  00F3               	movwf	void_write_pin@pinnumber
  2535  0C4F  01F4               	clrf	void_write_pin@state
  2536  0C50  3063               	movlw	99
  2537  0C51  120A  118A  2411  120A  158A  	fcall	_void_write_pin
  2538                           
  2539                           ;HAL/sensors_and_actuator.c: 37:    void_write_pin('c',0,0);
  2540  0C56  01F3               	clrf	void_write_pin@pinnumber
  2541  0C57  01F4               	clrf	void_write_pin@state
  2542  0C58  3063               	movlw	99
  2543  0C59  120A  118A  2411  120A  158A  	fcall	_void_write_pin
  2544                           
  2545                           ;HAL/sensors_and_actuator.c: 38:    void_write_pin('b',7,0);
  2546  0C5E  3007               	movlw	7
  2547  0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  2548  0C60  1303               	bcf	3,6	;RP1=0, select bank0
  2549  0C61  00A0               	movwf	??_void_stop_heating
  2550  0C62  0820               	movf	??_void_stop_heating,w
  2551  0C63  00F3               	movwf	void_write_pin@pinnumber
  2552  0C64  01F4               	clrf	void_write_pin@state
  2553  0C65  3062               	movlw	98
  2554  0C66  120A  118A  2411  120A  158A  	fcall	_void_write_pin
  2555  0C6B                     l346:	
  2556  0C6B  0008               	return
  2557  0C6C                     __end_of_void_stop_heating:	
  2558                           
  2559                           	psect	text7
  2560  0D05                     __ptext7:	
  2561 ;; *************** function _void_start_heating *****************
  2562 ;; Defined at:
  2563 ;;		line 20 in file "HAL/sensors_and_actuator.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2577 ;;      Params:         0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0
  2579 ;;      Temps:          0       1       0       0       0
  2580 ;;      Totals:         0       1       0       0       0
  2581 ;;Total ram usage:        1 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    2
  2584 ;; This function calls:
  2585 ;;		_void_write_pin
  2586 ;; This function is called by:
  2587 ;;		_void_operation
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           
  2592                           ;psect for function _void_start_heating
  2593  0D05                     _void_start_heating:	
  2594  0D05                     l2883:	
  2595                           ;incstack = 0
  2596                           ; Regs used in _void_start_heating: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2597                           
  2598                           
  2599                           ;HAL/sensors_and_actuator.c: 23:    void_write_pin('c',2,1);
  2600  0D05  3002               	movlw	2
  2601  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2602  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2603  0D08  00A0               	movwf	??_void_start_heating
  2604  0D09  0820               	movf	??_void_start_heating,w
  2605  0D0A  00F3               	movwf	void_write_pin@pinnumber
  2606  0D0B  01F4               	clrf	void_write_pin@state
  2607  0D0C  0AF4               	incf	void_write_pin@state,f
  2608  0D0D  3063               	movlw	99
  2609  0D0E  120A  118A  2411  120A  158A  	fcall	_void_write_pin
  2610                           
  2611                           ;HAL/sensors_and_actuator.c: 24:    void_write_pin('c',5,1);
  2612  0D13  3005               	movlw	5
  2613  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  2614  0D15  1303               	bcf	3,6	;RP1=0, select bank0
  2615  0D16  00A0               	movwf	??_void_start_heating
  2616  0D17  0820               	movf	??_void_start_heating,w
  2617  0D18  00F3               	movwf	void_write_pin@pinnumber
  2618  0D19  01F4               	clrf	void_write_pin@state
  2619  0D1A  0AF4               	incf	void_write_pin@state,f
  2620  0D1B  3063               	movlw	99
  2621  0D1C  120A  118A  2411  120A  158A  	fcall	_void_write_pin
  2622                           
  2623                           ;HAL/sensors_and_actuator.c: 25:    void_write_pin('c',0,1);
  2624  0D21  01F3               	clrf	void_write_pin@pinnumber
  2625  0D22  01F4               	clrf	void_write_pin@state
  2626  0D23  0AF4               	incf	void_write_pin@state,f
  2627  0D24  3063               	movlw	99
  2628  0D25  120A  118A  2411  120A  158A  	fcall	_void_write_pin
  2629                           
  2630                           ;HAL/sensors_and_actuator.c: 26:    void_write_pin('b',7,1);
  2631  0D2A  3007               	movlw	7
  2632  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  2633  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  2634  0D2D  00A0               	movwf	??_void_start_heating
  2635  0D2E  0820               	movf	??_void_start_heating,w
  2636  0D2F  00F3               	movwf	void_write_pin@pinnumber
  2637  0D30  01F4               	clrf	void_write_pin@state
  2638  0D31  0AF4               	incf	void_write_pin@state,f
  2639  0D32  3062               	movlw	98
  2640  0D33  120A  118A  2411  120A  158A  	fcall	_void_write_pin
  2641  0D38                     l343:	
  2642  0D38  0008               	return
  2643  0D39                     __end_of_void_start_heating:	
  2644                           
  2645                           	psect	text8
  2646  0EEE                     __ptext8:	
  2647 ;; *************** function _void_microwave_timer *****************
  2648 ;; Defined at:
  2649 ;;		line 136 in file "main.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;		None
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2663 ;;      Params:         0       0       0       0       0
  2664 ;;      Locals:         0       0       0       0       0
  2665 ;;      Temps:          0       1       0       0       0
  2666 ;;      Totals:         0       1       0       0       0
  2667 ;;Total ram usage:        1 bytes
  2668 ;; Hardware stack levels used:    1
  2669 ;; Hardware stack levels required when called:    6
  2670 ;; This function calls:
  2671 ;;		___awdiv
  2672 ;;		___awmod
  2673 ;;		_sprintf
  2674 ;;		_void_update_status
  2675 ;; This function is called by:
  2676 ;;		_void_operation
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           
  2681                           ;psect for function _void_microwave_timer
  2682  0EEE                     _void_microwave_timer:	
  2683  0EEE                     l2865:	
  2684                           ;incstack = 0
  2685                           ; Regs used in _void_microwave_timer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  2686                           
  2687  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  2688  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  2689  0EF0  0853               	movf	_time_s,w
  2690  0EF1  0454               	iorwf	_time_s+1,w
  2691  0EF2  1D03               	btfss	3,2
  2692  0EF3  2EF5               	goto	u2761
  2693  0EF4  2EF6               	goto	u2760
  2694  0EF5                     u2761:	
  2695  0EF5  2EFA               	goto	l2869
  2696  0EF6                     u2760:	
  2697  0EF6                     l2867:	
  2698                           
  2699                           ;main.c: 138:     {;main.c: 139:         reset_flag=1;
  2700  0EF6  01DC               	clrf	_reset_flag
  2701  0EF7  0ADC               	incf	_reset_flag,f
  2702                           
  2703                           ;main.c: 140:         Done_flag=1;
  2704  0EF8  01D9               	clrf	_Done_flag
  2705  0EF9  0AD9               	incf	_Done_flag,f
  2706  0EFA                     l2869:	
  2707                           
  2708                           ;main.c: 143:     if (count>=5)
  2709  0EFA  3005               	movlw	5
  2710  0EFB  025B               	subwf	_count,w
  2711  0EFC  1C03               	skipc
  2712  0EFD  2EFF               	goto	u2771
  2713  0EFE  2F00               	goto	u2770
  2714  0EFF                     u2771:	
  2715  0EFF  2F0C               	goto	l2877
  2716  0F00                     u2770:	
  2717  0F00                     l2871:	
  2718                           
  2719                           ;main.c: 144:     {;main.c: 145:         time_s--;
  2720  0F00  30FF               	movlw	255
  2721  0F01  07D3               	addwf	_time_s,f
  2722  0F02  1803               	skipnc
  2723  0F03  0AD4               	incf	_time_s+1,f
  2724  0F04  30FF               	movlw	255
  2725  0F05  07D4               	addwf	_time_s+1,f
  2726  0F06                     l2873:	
  2727                           
  2728                           ;main.c: 146:         count=0;
  2729  0F06  01DB               	clrf	_count
  2730  0F07                     l2875:	
  2731                           
  2732                           ;main.c: 147:         void_update_status();
  2733  0F07  120A  158A  2572  120A  158A  	fcall	_void_update_status
  2734  0F0C                     l2877:	
  2735                           
  2736                           ;main.c: 150:     mins=time_s/60;
  2737  0F0C  303C               	movlw	60
  2738  0F0D  00F3               	movwf	___awdiv@divisor
  2739  0F0E  3000               	movlw	0
  2740  0F0F  00F4               	movwf	___awdiv@divisor+1
  2741  0F10  1283               	bcf	3,5	;RP0=0, select bank0
  2742  0F11  1303               	bcf	3,6	;RP1=0, select bank0
  2743  0F12  0854               	movf	_time_s+1,w
  2744  0F13  00F6               	movwf	___awdiv@dividend+1
  2745  0F14  0853               	movf	_time_s,w
  2746  0F15  00F5               	movwf	___awdiv@dividend
  2747  0F16  120A  118A  2742  120A  158A  	fcall	___awdiv
  2748  0F1B  0874               	movf	?___awdiv+1,w
  2749  0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  2750  0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  2751  0F1E  00D8               	movwf	_mins+1
  2752  0F1F  0873               	movf	?___awdiv,w
  2753  0F20  00D7               	movwf	_mins
  2754  0F21                     l2879:	
  2755                           
  2756                           ;main.c: 151:     secs=time_s%60;
  2757  0F21  303C               	movlw	60
  2758  0F22  00F3               	movwf	___awmod@divisor
  2759  0F23  3000               	movlw	0
  2760  0F24  00F4               	movwf	___awmod@divisor+1
  2761  0F25  0854               	movf	_time_s+1,w
  2762  0F26  00F6               	movwf	___awmod@dividend+1
  2763  0F27  0853               	movf	_time_s,w
  2764  0F28  00F5               	movwf	___awmod@dividend
  2765  0F29  120A  158A  2747  120A  158A  	fcall	___awmod
  2766  0F2E  0874               	movf	?___awmod+1,w
  2767  0F2F  1283               	bcf	3,5	;RP0=0, select bank0
  2768  0F30  1303               	bcf	3,6	;RP1=0, select bank0
  2769  0F31  00D6               	movwf	_secs+1
  2770  0F32  0873               	movf	?___awmod,w
  2771  0F33  00D5               	movwf	_secs
  2772  0F34                     l2881:	
  2773                           
  2774                           ;main.c: 152:     sprintf(text_t,"%d:%d",mins,secs);
  2775  0F34  3034               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2776  0F35  00BC               	movwf	??_void_microwave_timer
  2777  0F36  083C               	movf	??_void_microwave_timer,w
  2778  0F37  00A9               	movwf	sprintf@f
  2779  0F38  0858               	movf	_mins+1,w
  2780  0F39  00AB               	movwf	?_sprintf+2
  2781  0F3A  0857               	movf	_mins,w
  2782  0F3B  00AA               	movwf	?_sprintf+1
  2783  0F3C  0856               	movf	_secs+1,w
  2784  0F3D  00AD               	movwf	?_sprintf+4
  2785  0F3E  0855               	movf	_secs,w
  2786  0F3F  00AC               	movwf	?_sprintf+3
  2787  0F40  30DE               	movlw	(low (_text_t| 0))& (0+255)
  2788  0F41  120A  118A  223E  120A  158A  	fcall	_sprintf
  2789  0F46                     l102:	
  2790  0F46  0008               	return
  2791  0F47                     __end_of_void_microwave_timer:	
  2792                           
  2793                           	psect	text9
  2794  0D72                     __ptext9:	
  2795 ;; *************** function _void_update_status *****************
  2796 ;; Defined at:
  2797 ;;		line 155 in file "main.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;		None
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2811 ;;      Params:         0       0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0
  2813 ;;      Temps:          0       3       0       0       0
  2814 ;;      Totals:         0       3       0       0       0
  2815 ;;Total ram usage:        3 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; Hardware stack levels required when called:    5
  2818 ;; This function calls:
  2819 ;;		_void_lcd_clear
  2820 ;;		_void_lcd_goto
  2821 ;;		_void_lcd_print
  2822 ;; This function is called by:
  2823 ;;		_main
  2824 ;;		_void_microwave_timer
  2825 ;;		_void_operation
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           
  2830                           ;psect for function _void_update_status
  2831  0D72                     _void_update_status:	
  2832  0D72                     l2761:	
  2833                           ;incstack = 0
  2834                           ; Regs used in _void_update_status: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2835                           
  2836                           
  2837                           ;main.c: 158:         void_lcd_clear();
  2838  0D72  120A  158A  2297  120A  158A  	fcall	_void_lcd_clear
  2839                           
  2840                           ;main.c: 159:         void_lcd_goto(2,7);
  2841  0D77  3007               	movlw	7
  2842  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  2843  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  2844  0D7A  00AB               	movwf	??_void_update_status
  2845  0D7B  082B               	movf	??_void_update_status,w
  2846  0D7C  00A7               	movwf	void_lcd_goto@x
  2847  0D7D  3002               	movlw	2
  2848  0D7E  120A  158A  2311  120A  158A  	fcall	_void_lcd_goto
  2849                           
  2850                           ;main.c: 160:         void_lcd_print(text_t);
  2851  0D83  30DE               	movlw	(low (_text_t| 0))& (0+255)
  2852  0D84  120A  158A  2350  120A  158A  	fcall	_void_lcd_print
  2853                           
  2854                           ;main.c: 161:         void_lcd_goto(1,5);
  2855  0D89  3005               	movlw	5
  2856  0D8A  1283               	bcf	3,5	;RP0=0, select bank0
  2857  0D8B  1303               	bcf	3,6	;RP1=0, select bank0
  2858  0D8C  00AB               	movwf	??_void_update_status
  2859  0D8D  082B               	movf	??_void_update_status,w
  2860  0D8E  00A7               	movwf	void_lcd_goto@x
  2861  0D8F  3001               	movlw	1
  2862  0D90  120A  158A  2311  120A  158A  	fcall	_void_lcd_goto
  2863                           
  2864                           ;main.c: 162:         void_lcd_print(text);
  2865  0D95  30AC               	movlw	(low (_text| 0))& (0+255)
  2866  0D96  120A  158A  2350  120A  158A  	fcall	_void_lcd_print
  2867  0D9B                     l2763:	
  2868                           
  2869                           ;main.c: 164:         _delay((unsigned long)((100)*(8000000/4000.0)));
  2870  0D9B  3002               	movlw	2
  2871  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  2872  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  2873  0D9E  00AD               	movwf	??_void_update_status+2
  2874  0D9F  3004               	movlw	4
  2875  0DA0  00AC               	movwf	??_void_update_status+1
  2876  0DA1  30B9               	movlw	185
  2877  0DA2  00AB               	movwf	??_void_update_status
  2878  0DA3                     u3237:	
  2879  0DA3  0BAB               	decfsz	??_void_update_status,f
  2880  0DA4  2DA3               	goto	u3237
  2881  0DA5  0BAC               	decfsz	??_void_update_status+1,f
  2882  0DA6  2DA3               	goto	u3237
  2883  0DA7  0BAD               	decfsz	??_void_update_status+2,f
  2884  0DA8  2DA3               	goto	u3237
  2885  0DA9  2DAA               	nop2
  2886  0DAA                     l105:	
  2887  0DAA  0008               	return
  2888  0DAB                     __end_of_void_update_status:	
  2889                           
  2890                           	psect	text10
  2891  0B50                     __ptext10:	
  2892 ;; *************** function _void_lcd_print *****************
  2893 ;; Defined at:
  2894 ;;		line 63 in file "HAL/LCD.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  string          1    wreg     PTR unsigned char 
  2897 ;;		 -> text(50), text_debug(5), text_t(10), 
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  string          1   10[BANK0 ] PTR unsigned char 
  2900 ;;		 -> text(50), text_debug(5), text_t(10), 
  2901 ;;  i               2    8[BANK0 ] int 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2911 ;;      Params:         0       0       0       0       0
  2912 ;;      Locals:         0       3       0       0       0
  2913 ;;      Temps:          0       1       0       0       0
  2914 ;;      Totals:         0       4       0       0       0
  2915 ;;Total ram usage:        4 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    4
  2918 ;; This function calls:
  2919 ;;		_void_lcd_send_data
  2920 ;; This function is called by:
  2921 ;;		_main
  2922 ;;		_void_update_status
  2923 ;;		_void_operation
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           
  2928                           ;psect for function _void_lcd_print
  2929  0B50                     _void_lcd_print:	
  2930                           
  2931                           ;incstack = 0
  2932                           ; Regs used in _void_lcd_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2933                           ;void_lcd_print@string stored from wreg
  2934  0B50  1283               	bcf	3,5	;RP0=0, select bank0
  2935  0B51  1303               	bcf	3,6	;RP1=0, select bank0
  2936  0B52  00AA               	movwf	void_lcd_print@string
  2937  0B53                     l2725:	
  2938                           
  2939                           ;HAL/LCD.c: 63: void void_lcd_print( char * string);HAL/LCD.c: 64: {;HAL/LCD.c: 65:  int
      +                           i =0;
  2940  0B53  01A8               	clrf	void_lcd_print@i
  2941  0B54  01A9               	clrf	void_lcd_print@i+1
  2942                           
  2943                           ;HAL/LCD.c: 66:  while (string[i] != 0)
  2944  0B55  2B69               	goto	l2731
  2945  0B56                     l2727:	
  2946                           
  2947                           ;HAL/LCD.c: 67:  {;HAL/LCD.c: 68:   void_lcd_send_data(string[i]);
  2948  0B56  0828               	movf	void_lcd_print@i,w
  2949  0B57  072A               	addwf	void_lcd_print@string,w
  2950  0B58  00A7               	movwf	??_void_lcd_print
  2951  0B59  0827               	movf	??_void_lcd_print,w
  2952  0B5A  0084               	movwf	4
  2953  0B5B  0800               	movf	0,w
  2954  0B5C  120A  158A  2623  120A  158A  	fcall	_void_lcd_send_data
  2955  0B61                     l2729:	
  2956                           
  2957                           ;HAL/LCD.c: 69:   i++;
  2958  0B61  3001               	movlw	1
  2959  0B62  1283               	bcf	3,5	;RP0=0, select bank0
  2960  0B63  1303               	bcf	3,6	;RP1=0, select bank0
  2961  0B64  07A8               	addwf	void_lcd_print@i,f
  2962  0B65  1803               	skipnc
  2963  0B66  0AA9               	incf	void_lcd_print@i+1,f
  2964  0B67  3000               	movlw	0
  2965  0B68  07A9               	addwf	void_lcd_print@i+1,f
  2966  0B69                     l2731:	
  2967                           
  2968                           ;HAL/LCD.c: 66:  while (string[i] != 0)
  2969  0B69  0828               	movf	void_lcd_print@i,w
  2970  0B6A  072A               	addwf	void_lcd_print@string,w
  2971  0B6B  00A7               	movwf	??_void_lcd_print
  2972  0B6C  0827               	movf	??_void_lcd_print,w
  2973  0B6D  0084               	movwf	4
  2974  0B6E  1383               	bcf	3,7	;select IRP bank0
  2975  0B6F  0800               	movf	0,w
  2976  0B70  1D03               	btfss	3,2
  2977  0B71  2B73               	goto	u2521
  2978  0B72  2B74               	goto	u2520
  2979  0B73                     u2521:	
  2980  0B73  2B56               	goto	l2727
  2981  0B74                     u2520:	
  2982  0B74                     l258:	
  2983  0B74  0008               	return
  2984  0B75                     __end_of_void_lcd_print:	
  2985                           
  2986                           	psect	text11
  2987  0E23                     __ptext11:	
  2988 ;; *************** function _void_lcd_send_data *****************
  2989 ;; Defined at:
  2990 ;;		line 51 in file "HAL/LCD.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  data            1    wreg     unsigned char 
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;  data            1    6[BANK0 ] unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3004 ;;      Params:         0       0       0       0       0
  3005 ;;      Locals:         0       1       0       0       0
  3006 ;;      Temps:          0       2       0       0       0
  3007 ;;      Totals:         0       3       0       0       0
  3008 ;;Total ram usage:        3 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    3
  3011 ;; This function calls:
  3012 ;;		_void_pulse
  3013 ;;		_void_write_pin
  3014 ;;		_void_write_port
  3015 ;; This function is called by:
  3016 ;;		_void_lcd_print
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           
  3021                           ;psect for function _void_lcd_send_data
  3022  0E23                     _void_lcd_send_data:	
  3023                           
  3024                           ;incstack = 0
  3025                           ; Regs used in _void_lcd_send_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3026                           ;void_lcd_send_data@data stored from wreg
  3027  0E23  1283               	bcf	3,5	;RP0=0, select bank0
  3028  0E24  1303               	bcf	3,6	;RP1=0, select bank0
  3029  0E25  00A6               	movwf	void_lcd_send_data@data
  3030  0E26                     l2717:	
  3031                           
  3032                           ;HAL/LCD.c: 51: void void_lcd_send_data( char data);HAL/LCD.c: 52: {;HAL/LCD.c: 55:  voi
      +                          d_write_pin('e',2,1);
  3033  0E26  3002               	movlw	2
  3034  0E27  00A4               	movwf	??_void_lcd_send_data
  3035  0E28  0824               	movf	??_void_lcd_send_data,w
  3036  0E29  00F3               	movwf	void_write_pin@pinnumber
  3037  0E2A  01F4               	clrf	void_write_pin@state
  3038  0E2B  0AF4               	incf	void_write_pin@state,f
  3039  0E2C  3065               	movlw	101
  3040  0E2D  120A  118A  2411  120A  158A  	fcall	_void_write_pin
  3041                           
  3042                           ;HAL/LCD.c: 56:  void_write_port('d',(data &0xf0));
  3043  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  3044  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  3045  0E34  0826               	movf	void_lcd_send_data@data,w
  3046  0E35  39F0               	andlw	240
  3047  0E36  00A4               	movwf	??_void_lcd_send_data
  3048  0E37  0824               	movf	??_void_lcd_send_data,w
  3049  0E38  00F3               	movwf	void_write_port@pins_dir
  3050  0E39  3064               	movlw	100
  3051  0E3A  120A  158A  2539  120A  158A  	fcall	_void_write_port
  3052                           
  3053                           ;HAL/LCD.c: 57:  void_pulse();
  3054  0E3F  120A  158A  2375  120A  158A  	fcall	_void_pulse
  3055                           
  3056                           ;HAL/LCD.c: 58:  void_write_port('d',((data &0x0f)<<4));
  3057  0E44  1283               	bcf	3,5	;RP0=0, select bank0
  3058  0E45  1303               	bcf	3,6	;RP1=0, select bank0
  3059  0E46  0826               	movf	void_lcd_send_data@data,w
  3060  0E47  390F               	andlw	15
  3061  0E48  00A4               	movwf	??_void_lcd_send_data
  3062  0E49  3003               	movlw	3
  3063  0E4A                     u2515:	
  3064  0E4A  1003               	clrc
  3065  0E4B  0DA4               	rlf	??_void_lcd_send_data,f
  3066  0E4C  3EFF               	addlw	-1
  3067  0E4D  1D03               	skipz
  3068  0E4E  2E4A               	goto	u2515
  3069  0E4F  1003               	clrc
  3070  0E50  0D24               	rlf	??_void_lcd_send_data,w
  3071  0E51  00A5               	movwf	??_void_lcd_send_data+1
  3072  0E52  0825               	movf	??_void_lcd_send_data+1,w
  3073  0E53  00F3               	movwf	void_write_port@pins_dir
  3074  0E54  3064               	movlw	100
  3075  0E55  120A  158A  2539  120A  158A  	fcall	_void_write_port
  3076                           
  3077                           ;HAL/LCD.c: 59:  void_pulse();
  3078  0E5A  120A  158A  2375  120A  158A  	fcall	_void_pulse
  3079  0E5F                     l252:	
  3080  0E5F  0008               	return
  3081  0E60                     __end_of_void_lcd_send_data:	
  3082                           
  3083                           	psect	text12
  3084  0B11                     __ptext12:	
  3085 ;; *************** function _void_lcd_goto *****************
  3086 ;; Defined at:
  3087 ;;		line 79 in file "HAL/LCD.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  y               1    wreg     unsigned char 
  3090 ;;  x               1    7[BANK0 ] unsigned char 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  y               1   10[BANK0 ] unsigned char 
  3093 ;;  lcd_screen_a    2    8[BANK0 ] unsigned char [2]
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3103 ;;      Params:         0       1       0       0       0
  3104 ;;      Locals:         0       3       0       0       0
  3105 ;;      Temps:          0       0       0       0       0
  3106 ;;      Totals:         0       4       0       0       0
  3107 ;;Total ram usage:        4 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    4
  3110 ;; This function calls:
  3111 ;;		_delay_ms
  3112 ;;		_void_lcd_send_command
  3113 ;; This function is called by:
  3114 ;;		_main
  3115 ;;		_void_update_status
  3116 ;;		_void_operation
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           
  3121                           ;psect for function _void_lcd_goto
  3122  0B11                     _void_lcd_goto:	
  3123                           
  3124                           ;incstack = 0
  3125                           ; Regs used in _void_lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3126                           ;void_lcd_goto@y stored from wreg
  3127  0B11  1283               	bcf	3,5	;RP0=0, select bank0
  3128  0B12  1303               	bcf	3,6	;RP1=0, select bank0
  3129  0B13  00AA               	movwf	void_lcd_goto@y
  3130  0B14                     l2719:	
  3131                           
  3132                           ;HAL/LCD.c: 79: void void_lcd_goto(char y ,char x);HAL/LCD.c: 80: {;HAL/LCD.c: 81:  char
      +                           lcd_screen_adresses[]={0x80,0xc0};
  3133  0B14  086E               	movf	void_lcd_goto@F869+1,w
  3134  0B15  00A9               	movwf	void_lcd_goto@lcd_screen_adresses+1
  3135  0B16  086D               	movf	void_lcd_goto@F869,w
  3136  0B17  00A8               	movwf	void_lcd_goto@lcd_screen_adresses
  3137  0B18                     l2721:	
  3138                           
  3139                           ;HAL/LCD.c: 84:  void_lcd_send_command(( lcd_screen_adresses[y-1] + (x-1)) );
  3140  0B18  082A               	movf	void_lcd_goto@y,w
  3141  0B19  3EFF               	addlw	255
  3142  0B1A  3E28               	addlw	(low (void_lcd_goto@lcd_screen_adresses| 0))& (0+255)
  3143  0B1B  0084               	movwf	4
  3144  0B1C  0827               	movf	void_lcd_goto@x,w
  3145  0B1D  1383               	bcf	3,7	;select IRP bank0
  3146  0B1E  0700               	addwf	0,w
  3147  0B1F  3EFF               	addlw	255
  3148  0B20  120A  158A  25AB  120A  158A  	fcall	_void_lcd_send_command
  3149  0B25                     l2723:	
  3150                           
  3151                           ;HAL/LCD.c: 85:  delay_ms(20);
  3152  0B25  3014               	movlw	20
  3153  0B26  00F3               	movwf	delay_ms@ms_Count
  3154  0B27  3000               	movlw	0
  3155  0B28  00F4               	movwf	delay_ms@ms_Count+1
  3156  0B29  120A  158A  23C2  120A  158A  	fcall	_delay_ms
  3157  0B2E                     l266:	
  3158  0B2E  0008               	return
  3159  0B2F                     __end_of_void_lcd_goto:	
  3160                           
  3161                           	psect	text13
  3162  0A97                     __ptext13:	
  3163 ;; *************** function _void_lcd_clear *****************
  3164 ;; Defined at:
  3165 ;;		line 75 in file "HAL/LCD.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;		None
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;		None
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      void 
  3172 ;; Registers used:
  3173 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3179 ;;      Params:         0       0       0       0       0
  3180 ;;      Locals:         0       0       0       0       0
  3181 ;;      Temps:          0       0       0       0       0
  3182 ;;      Totals:         0       0       0       0       0
  3183 ;;Total ram usage:        0 bytes
  3184 ;; Hardware stack levels used:    1
  3185 ;; Hardware stack levels required when called:    4
  3186 ;; This function calls:
  3187 ;;		_void_lcd_send_command
  3188 ;; This function is called by:
  3189 ;;		_void_update_status
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           
  3194                           ;psect for function _void_lcd_clear
  3195  0A97                     _void_lcd_clear:	
  3196  0A97                     l2733:	
  3197                           ;incstack = 0
  3198                           ; Regs used in _void_lcd_clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3199                           
  3200                           
  3201                           ;HAL/LCD.c: 77:  void_lcd_send_command(0x01);
  3202  0A97  3001               	movlw	1
  3203  0A98  120A  158A  25AB  120A  158A  	fcall	_void_lcd_send_command
  3204  0A9D                     l261:	
  3205  0A9D  0008               	return
  3206  0A9E                     __end_of_void_lcd_clear:	
  3207                           
  3208                           	psect	text14
  3209  023E                     __ptext14:	
  3210 ;; *************** function _sprintf *****************
  3211 ;; Defined at:
  3212 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;  sp              1    wreg     PTR unsigned char 
  3215 ;;		 -> text(50), text_debug(5), text_t(10), 
  3216 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  3217 ;;		 -> STR_9(10), STR_8(5), STR_7(5), STR_6(10), 
  3218 ;;		 -> STR_5(10), STR_4(14), STR_3(6), STR_2(7), 
  3219 ;;		 -> STR_1(10), 
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  sp              1   26[BANK0 ] PTR unsigned char 
  3222 ;;		 -> text(50), text_debug(5), text_t(10), 
  3223 ;;  tmpval          4    0        struct .
  3224 ;;  val             2   24[BANK0 ] unsigned int 
  3225 ;;  cp              2    0        PTR const unsigned char 
  3226 ;;  len             2    0        unsigned int 
  3227 ;;  c               1   27[BANK0 ] unsigned char 
  3228 ;;  prec            1   23[BANK0 ] char 
  3229 ;;  flag            1   22[BANK0 ] unsigned char 
  3230 ;;  ap              1   21[BANK0 ] PTR void [1]
  3231 ;;		 -> ?_sprintf(2), 
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  2    9[BANK0 ] int 
  3234 ;; Registers used:
  3235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3241 ;;      Params:         0       9       0       0       0
  3242 ;;      Locals:         0       7       0       0       0
  3243 ;;      Temps:          0       3       0       0       0
  3244 ;;      Totals:         0      19       0       0       0
  3245 ;;Total ram usage:       19 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; Hardware stack levels required when called:    2
  3248 ;; This function calls:
  3249 ;;		___lwdiv
  3250 ;;		___lwmod
  3251 ;; This function is called by:
  3252 ;;		_main
  3253 ;;		_void_microwave_timer
  3254 ;;		_void_operation
  3255 ;; This function uses a non-reentrant model
  3256 ;;
  3257                           
  3258                           
  3259                           ;psect for function _sprintf
  3260  023E                     _sprintf:	
  3261                           
  3262                           ;incstack = 0
  3263                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3264                           ;sprintf@sp stored from wreg
  3265  023E  1283               	bcf	3,5	;RP0=0, select bank0
  3266  023F  1303               	bcf	3,6	;RP1=0, select bank0
  3267  0240  00BA               	movwf	sprintf@sp
  3268  0241                     l2765:	
  3269                           
  3270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
      +                          .10\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;
  3271  0241  302A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3272  0242  00B2               	movwf	??_sprintf
  3273  0243  0832               	movf	??_sprintf,w
  3274  0244  00B5               	movwf	sprintf@ap
  3275                           
  3276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  3277  0245  2B11               	goto	l2817
  3278  0246                     l2767:	
  3279                           
  3280                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  3281  0246  3025               	movlw	37
  3282  0247  063B               	xorwf	sprintf@c,w
  3283  0248  1903               	btfsc	3,2
  3284  0249  2A4B               	goto	u2601
  3285  024A  2A4C               	goto	u2600
  3286  024B                     u2601:	
  3287  024B  2A58               	goto	l2773
  3288  024C                     u2600:	
  3289  024C                     l2769:	
  3290                           
  3291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  3292  024C  083B               	movf	sprintf@c,w
  3293  024D  00B2               	movwf	??_sprintf
  3294  024E  083A               	movf	sprintf@sp,w
  3295  024F  0084               	movwf	4
  3296  0250  0832               	movf	??_sprintf,w
  3297  0251  1383               	bcf	3,7	;select IRP bank0
  3298  0252  0080               	movwf	0
  3299  0253                     l2771:	
  3300  0253  3001               	movlw	1
  3301  0254  00B2               	movwf	??_sprintf
  3302  0255  0832               	movf	??_sprintf,w
  3303  0256  07BA               	addwf	sprintf@sp,f
  3304                           
  3305                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  3306  0257  2B11               	goto	l2817
  3307  0258                     l2773:	
  3308                           
  3309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  3310  0258  01B6               	clrf	sprintf@flag
  3311  0259                     l2777:	
  3312                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 661:   swit
      +                          ch(c = *f++) {
  3313                           
  3314  0259  3001               	movlw	1
  3315  025A  07A9               	addwf	sprintf@f,f
  3316  025B  30FF               	movlw	-1
  3317  025C  0729               	addwf	sprintf@f,w
  3318  025D  0084               	movwf	4
  3319  025E  120A  118A  27AB  120A  118A  	fcall	stringdir
  3320  0263  00BB               	movwf	sprintf@c
  3321  0264  00B2               	movwf	??_sprintf
  3322  0265  01B3               	clrf	??_sprintf+1
  3323                           
  3324                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3325                           ; Switch size 1, requested type "simple"
  3326                           ; Number of cases is 1, Range of values is 0 to 0
  3327                           ; switch strategies available:
  3328                           ; Name         Instructions Cycles
  3329                           ; simple_byte            4     3 (average)
  3330                           ; direct_byte           11     8 (fixed)
  3331                           ; jumptable            260     6 (fixed)
  3332                           ;	Chosen strategy is simple_byte
  3333  0266  0833               	movf	??_sprintf+1,w
  3334  0267  3A00               	xorlw	0	; case 0
  3335  0268  1903               	skipnz
  3336  0269  2A6B               	goto	l3317
  3337  026A  2B11               	goto	l2817
  3338  026B                     l3317:	
  3339                           
  3340                           ; Switch size 1, requested type "simple"
  3341                           ; Number of cases is 3, Range of values is 0 to 105
  3342                           ; switch strategies available:
  3343                           ; Name         Instructions Cycles
  3344                           ; simple_byte           10     6 (average)
  3345                           ; jumptable            260     6 (fixed)
  3346                           ;	Chosen strategy is simple_byte
  3347  026B  0832               	movf	??_sprintf,w
  3348  026C  3A00               	xorlw	0	; case 0
  3349  026D  1903               	skipnz
  3350  026E  2B23               	goto	l2819
  3351  026F  3A64               	xorlw	100	; case 100
  3352  0270  1903               	skipnz
  3353  0271  2A76               	goto	l2779
  3354  0272  3A0D               	xorlw	13	; case 105
  3355  0273  1903               	skipnz
  3356  0274  2A76               	goto	l2779
  3357  0275  2B11               	goto	l2817
  3358  0276                     l2779:	
  3359                           
  3360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3361  0276  0835               	movf	sprintf@ap,w
  3362  0277  0084               	movwf	4
  3363  0278  1383               	bcf	3,7	;select IRP bank0
  3364  0279  0800               	movf	0,w
  3365  027A  00B8               	movwf	sprintf@val
  3366  027B  0A84               	incf	4,f
  3367  027C  0800               	movf	0,w
  3368  027D  00B9               	movwf	sprintf@val+1
  3369  027E                     l2781:	
  3370  027E  3002               	movlw	2
  3371  027F  00B2               	movwf	??_sprintf
  3372  0280  0832               	movf	??_sprintf,w
  3373  0281  07B5               	addwf	sprintf@ap,f
  3374  0282                     l2783:	
  3375                           
  3376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((int)val < 0) {
  3377  0282  1FB9               	btfss	sprintf@val+1,7
  3378  0283  2A85               	goto	u2611
  3379  0284  2A86               	goto	u2610
  3380  0285                     u2611:	
  3381  0285  2A8F               	goto	l2789
  3382  0286                     u2610:	
  3383  0286                     l2785:	
  3384                           
  3385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  3386  0286  3003               	movlw	3
  3387  0287  00B2               	movwf	??_sprintf
  3388  0288  0832               	movf	??_sprintf,w
  3389  0289  04B6               	iorwf	sprintf@flag,f
  3390  028A                     l2787:	
  3391                           
  3392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  3393  028A  09B8               	comf	sprintf@val,f
  3394  028B  09B9               	comf	sprintf@val+1,f
  3395  028C  0AB8               	incf	sprintf@val,f
  3396  028D  1903               	skipnz
  3397  028E  0AB9               	incf	sprintf@val+1,f
  3398  028F                     l2789:	
  3399                           
  3400                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    for(
      +                          c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3401  028F  01BB               	clrf	sprintf@c
  3402  0290  0ABB               	incf	sprintf@c,f
  3403  0291                     l2795:	
  3404                           
  3405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  3406  0291  083B               	movf	sprintf@c,w
  3407  0292  00B2               	movwf	??_sprintf
  3408  0293  0732               	addwf	??_sprintf,w
  3409  0294  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3410  0295  0084               	movwf	4
  3411  0296  120A  118A  27AB  120A  118A  	fcall	stringdir
  3412  029B  00B3               	movwf	??_sprintf+1
  3413  029C  120A  118A  27AB  120A  118A  	fcall	stringdir
  3414  02A1  00B4               	movwf	??_sprintf+2
  3415  02A2  0834               	movf	??_sprintf+2,w
  3416  02A3  0239               	subwf	sprintf@val+1,w
  3417  02A4  1D03               	skipz
  3418  02A5  2AA8               	goto	u2625
  3419  02A6  0833               	movf	??_sprintf+1,w
  3420  02A7  0238               	subwf	sprintf@val,w
  3421  02A8                     u2625:	
  3422  02A8  1803               	skipnc
  3423  02A9  2AAB               	goto	u2621
  3424  02AA  2AAC               	goto	u2620
  3425  02AB                     u2621:	
  3426  02AB  2AAD               	goto	l2799
  3427  02AC                     u2620:	
  3428  02AC  2AB7               	goto	l2801
  3429  02AD                     l2799:	
  3430  02AD  3001               	movlw	1
  3431  02AE  00B2               	movwf	??_sprintf
  3432  02AF  0832               	movf	??_sprintf,w
  3433  02B0  07BB               	addwf	sprintf@c,f
  3434  02B1  3005               	movlw	5
  3435  02B2  063B               	xorwf	sprintf@c,w
  3436  02B3  1D03               	btfss	3,2
  3437  02B4  2AB6               	goto	u2631
  3438  02B5  2AB7               	goto	u2630
  3439  02B6                     u2631:	
  3440  02B6  2A91               	goto	l2795
  3441  02B7                     u2630:	
  3442  02B7                     l2801:	
  3443                           
  3444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  3445  02B7  0836               	movf	sprintf@flag,w
  3446  02B8  3903               	andlw	3
  3447  02B9  1903               	btfsc	3,2
  3448  02BA  2ABC               	goto	u2641
  3449  02BB  2ABD               	goto	u2640
  3450  02BC                     u2641:	
  3451  02BC  2AC8               	goto	l2807
  3452  02BD                     u2640:	
  3453  02BD                     l2803:	
  3454                           
  3455                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  3456  02BD  302D               	movlw	45
  3457  02BE  00B2               	movwf	??_sprintf
  3458  02BF  083A               	movf	sprintf@sp,w
  3459  02C0  0084               	movwf	4
  3460  02C1  0832               	movf	??_sprintf,w
  3461  02C2  1383               	bcf	3,7	;select IRP bank0
  3462  02C3  0080               	movwf	0
  3463  02C4                     l2805:	
  3464  02C4  3001               	movlw	1
  3465  02C5  00B2               	movwf	??_sprintf
  3466  02C6  0832               	movf	??_sprintf,w
  3467  02C7  07BA               	addwf	sprintf@sp,f
  3468  02C8                     l2807:	
  3469                           
  3470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1495:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1498:   prec 
      +                          = c;
  3471  02C8  083B               	movf	sprintf@c,w
  3472  02C9  00B2               	movwf	??_sprintf
  3473  02CA  0832               	movf	??_sprintf,w
  3474  02CB  00B7               	movwf	sprintf@prec
  3475                           
  3476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  3477  02CC  2B08               	goto	l2815
  3478  02CD                     l2809:	
  3479                           
  3480                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  3481  02CD  300A               	movlw	10
  3482  02CE  00A3               	movwf	___lwmod@divisor
  3483  02CF  3000               	movlw	0
  3484  02D0  00A4               	movwf	___lwmod@divisor+1
  3485  02D1  0837               	movf	sprintf@prec,w
  3486  02D2  00B2               	movwf	??_sprintf
  3487  02D3  0732               	addwf	??_sprintf,w
  3488  02D4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3489  02D5  0084               	movwf	4
  3490  02D6  120A  118A  27AB  120A  118A  	fcall	stringdir
  3491  02DB  00F3               	movwf	___lwdiv@divisor
  3492  02DC  120A  118A  27AB  120A  118A  	fcall	stringdir
  3493  02E1  00F4               	movwf	___lwdiv@divisor+1
  3494  02E2  0839               	movf	sprintf@val+1,w
  3495  02E3  00F6               	movwf	___lwdiv@dividend+1
  3496  02E4  0838               	movf	sprintf@val,w
  3497  02E5  00F5               	movwf	___lwdiv@dividend
  3498  02E6  120A  158A  2660  120A  118A  	fcall	___lwdiv
  3499  02EB  0874               	movf	?___lwdiv+1,w
  3500  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  3501  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  3502  02EE  00A6               	movwf	___lwmod@dividend+1
  3503  02EF  0873               	movf	?___lwdiv,w
  3504  02F0  00A5               	movwf	___lwmod@dividend
  3505  02F1  120A  158A  25E7  120A  118A  	fcall	___lwmod
  3506  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  3507  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  3508  02F8  0823               	movf	?___lwmod,w
  3509  02F9  3E30               	addlw	48
  3510  02FA  00B3               	movwf	??_sprintf+1
  3511  02FB  0833               	movf	??_sprintf+1,w
  3512  02FC  00BB               	movwf	sprintf@c
  3513  02FD                     l2811:	
  3514                           
  3515                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  3516  02FD  083B               	movf	sprintf@c,w
  3517  02FE  00B2               	movwf	??_sprintf
  3518  02FF  083A               	movf	sprintf@sp,w
  3519  0300  0084               	movwf	4
  3520  0301  0832               	movf	??_sprintf,w
  3521  0302  1383               	bcf	3,7	;select IRP bank0
  3522  0303  0080               	movwf	0
  3523  0304                     l2813:	
  3524  0304  3001               	movlw	1
  3525  0305  00B2               	movwf	??_sprintf
  3526  0306  0832               	movf	??_sprintf,w
  3527  0307  07BA               	addwf	sprintf@sp,f
  3528  0308                     l2815:	
  3529                           
  3530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  3531  0308  30FF               	movlw	255
  3532  0309  00B2               	movwf	??_sprintf
  3533  030A  0832               	movf	??_sprintf,w
  3534  030B  07B7               	addwf	sprintf@prec,f
  3535  030C  0A37               	incf	sprintf@prec,w
  3536  030D  1D03               	btfss	3,2
  3537  030E  2B10               	goto	u2651
  3538  030F  2B11               	goto	u2650
  3539  0310                     u2651:	
  3540  0310  2ACD               	goto	l2809
  3541  0311                     u2650:	
  3542  0311                     l2817:	
  3543                           
  3544                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  3545  0311  3001               	movlw	1
  3546  0312  07A9               	addwf	sprintf@f,f
  3547  0313  30FF               	movlw	-1
  3548  0314  0729               	addwf	sprintf@f,w
  3549  0315  0084               	movwf	4
  3550  0316  120A  118A  27AB  120A  118A  	fcall	stringdir
  3551  031B  00B2               	movwf	??_sprintf
  3552  031C  0832               	movf	??_sprintf,w
  3553  031D  00BB               	movwf	sprintf@c
  3554  031E  083B               	movf	sprintf@c,w
  3555  031F  1D03               	btfss	3,2
  3556  0320  2B22               	goto	u2661
  3557  0321  2B23               	goto	u2660
  3558  0322                     u2661:	
  3559  0322  2A46               	goto	l2767
  3560  0323                     u2660:	
  3561  0323                     l2819:	
  3562                           
  3563                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  3564  0323  083A               	movf	sprintf@sp,w
  3565  0324  0084               	movwf	4
  3566  0325  1383               	bcf	3,7	;select IRP bank0
  3567  0326  0180               	clrf	0
  3568  0327                     l491:	
  3569  0327  0008               	return
  3570  0328                     __end_of_sprintf:	
  3571                           
  3572                           	psect	text15
  3573  0DE7                     __ptext15:	
  3574 ;; *************** function ___lwmod *****************
  3575 ;; Defined at:
  3576 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;  divisor         2    3[BANK0 ] unsigned int 
  3579 ;;  dividend        2    5[BANK0 ] unsigned int 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  counter         1    8[BANK0 ] unsigned char 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  2    3[BANK0 ] unsigned int 
  3584 ;; Registers used:
  3585 ;;		wreg, status,2, status,0
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3591 ;;      Params:         0       4       0       0       0
  3592 ;;      Locals:         0       1       0       0       0
  3593 ;;      Temps:          0       1       0       0       0
  3594 ;;      Totals:         0       6       0       0       0
  3595 ;;Total ram usage:        6 bytes
  3596 ;; Hardware stack levels used:    1
  3597 ;; Hardware stack levels required when called:    1
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_sprintf
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           
  3606                           ;psect for function ___lwmod
  3607  0DE7                     ___lwmod:	
  3608  0DE7                     l1951:	
  3609                           ;incstack = 0
  3610                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3611                           
  3612  0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  3613  0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  3614  0DE9  0823               	movf	___lwmod@divisor,w
  3615  0DEA  0424               	iorwf	___lwmod@divisor+1,w
  3616  0DEB  1903               	btfsc	3,2
  3617  0DEC  2DEE               	goto	u1441
  3618  0DED  2DEF               	goto	u1440
  3619  0DEE                     u1441:	
  3620  0DEE  2E1E               	goto	l1969
  3621  0DEF                     u1440:	
  3622  0DEF                     l1953:	
  3623  0DEF  01A8               	clrf	___lwmod@counter
  3624  0DF0  0AA8               	incf	___lwmod@counter,f
  3625  0DF1  2DFD               	goto	l1959
  3626  0DF2                     l1955:	
  3627  0DF2  3001               	movlw	1
  3628  0DF3                     u1455:	
  3629  0DF3  1003               	clrc
  3630  0DF4  0DA3               	rlf	___lwmod@divisor,f
  3631  0DF5  0DA4               	rlf	___lwmod@divisor+1,f
  3632  0DF6  3EFF               	addlw	-1
  3633  0DF7  1D03               	skipz
  3634  0DF8  2DF3               	goto	u1455
  3635  0DF9                     l1957:	
  3636  0DF9  3001               	movlw	1
  3637  0DFA  00A7               	movwf	??___lwmod
  3638  0DFB  0827               	movf	??___lwmod,w
  3639  0DFC  07A8               	addwf	___lwmod@counter,f
  3640  0DFD                     l1959:	
  3641  0DFD  1FA4               	btfss	___lwmod@divisor+1,7
  3642  0DFE  2E00               	goto	u1461
  3643  0DFF  2E01               	goto	u1460
  3644  0E00                     u1461:	
  3645  0E00  2DF2               	goto	l1955
  3646  0E01                     u1460:	
  3647  0E01                     l1961:	
  3648  0E01  0824               	movf	___lwmod@divisor+1,w
  3649  0E02  0226               	subwf	___lwmod@dividend+1,w
  3650  0E03  1D03               	skipz
  3651  0E04  2E07               	goto	u1475
  3652  0E05  0823               	movf	___lwmod@divisor,w
  3653  0E06  0225               	subwf	___lwmod@dividend,w
  3654  0E07                     u1475:	
  3655  0E07  1C03               	skipc
  3656  0E08  2E0A               	goto	u1471
  3657  0E09  2E0B               	goto	u1470
  3658  0E0A                     u1471:	
  3659  0E0A  2E11               	goto	l1965
  3660  0E0B                     u1470:	
  3661  0E0B                     l1963:	
  3662  0E0B  0823               	movf	___lwmod@divisor,w
  3663  0E0C  02A5               	subwf	___lwmod@dividend,f
  3664  0E0D  0824               	movf	___lwmod@divisor+1,w
  3665  0E0E  1C03               	skipc
  3666  0E0F  03A6               	decf	___lwmod@dividend+1,f
  3667  0E10  02A6               	subwf	___lwmod@dividend+1,f
  3668  0E11                     l1965:	
  3669  0E11  3001               	movlw	1
  3670  0E12                     u1485:	
  3671  0E12  1003               	clrc
  3672  0E13  0CA4               	rrf	___lwmod@divisor+1,f
  3673  0E14  0CA3               	rrf	___lwmod@divisor,f
  3674  0E15  3EFF               	addlw	-1
  3675  0E16  1D03               	skipz
  3676  0E17  2E12               	goto	u1485
  3677  0E18                     l1967:	
  3678  0E18  3001               	movlw	1
  3679  0E19  02A8               	subwf	___lwmod@counter,f
  3680  0E1A  1D03               	btfss	3,2
  3681  0E1B  2E1D               	goto	u1491
  3682  0E1C  2E1E               	goto	u1490
  3683  0E1D                     u1491:	
  3684  0E1D  2E01               	goto	l1961
  3685  0E1E                     u1490:	
  3686  0E1E                     l1969:	
  3687  0E1E  0826               	movf	___lwmod@dividend+1,w
  3688  0E1F  00A4               	movwf	?___lwmod+1
  3689  0E20  0825               	movf	___lwmod@dividend,w
  3690  0E21  00A3               	movwf	?___lwmod
  3691  0E22                     l777:	
  3692  0E22  0008               	return
  3693  0E23                     __end_of___lwmod:	
  3694                           
  3695                           	psect	text16
  3696  0E60                     __ptext16:	
  3697 ;; *************** function ___lwdiv *****************
  3698 ;; Defined at:
  3699 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;  divisor         2    3[COMMON] unsigned int 
  3702 ;;  dividend        2    5[COMMON] unsigned int 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  quotient        2    1[BANK0 ] unsigned int 
  3705 ;;  counter         1    0[BANK0 ] unsigned char 
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  2    3[COMMON] unsigned int 
  3708 ;; Registers used:
  3709 ;;		wreg, status,2, status,0
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3715 ;;      Params:         4       0       0       0       0
  3716 ;;      Locals:         0       3       0       0       0
  3717 ;;      Temps:          1       0       0       0       0
  3718 ;;      Totals:         5       3       0       0       0
  3719 ;;Total ram usage:        8 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; Hardware stack levels required when called:    1
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_sprintf
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           
  3730                           ;psect for function ___lwdiv
  3731  0E60                     ___lwdiv:	
  3732  0E60                     l2735:	
  3733                           ;incstack = 0
  3734                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3735                           
  3736  0E60  1283               	bcf	3,5	;RP0=0, select bank0
  3737  0E61  1303               	bcf	3,6	;RP1=0, select bank0
  3738  0E62  01A1               	clrf	___lwdiv@quotient
  3739  0E63  01A2               	clrf	___lwdiv@quotient+1
  3740  0E64                     l2737:	
  3741  0E64  0873               	movf	___lwdiv@divisor,w
  3742  0E65  0474               	iorwf	___lwdiv@divisor+1,w
  3743  0E66  1903               	btfsc	3,2
  3744  0E67  2E69               	goto	u2531
  3745  0E68  2E6A               	goto	u2530
  3746  0E69                     u2531:	
  3747  0E69  2EA1               	goto	l2757
  3748  0E6A                     u2530:	
  3749  0E6A                     l2739:	
  3750  0E6A  01A0               	clrf	___lwdiv@counter
  3751  0E6B  0AA0               	incf	___lwdiv@counter,f
  3752  0E6C  2E78               	goto	l2745
  3753  0E6D                     l2741:	
  3754  0E6D  3001               	movlw	1
  3755  0E6E                     u2545:	
  3756  0E6E  1003               	clrc
  3757  0E6F  0DF3               	rlf	___lwdiv@divisor,f
  3758  0E70  0DF4               	rlf	___lwdiv@divisor+1,f
  3759  0E71  3EFF               	addlw	-1
  3760  0E72  1D03               	skipz
  3761  0E73  2E6E               	goto	u2545
  3762  0E74                     l2743:	
  3763  0E74  3001               	movlw	1
  3764  0E75  00F7               	movwf	??___lwdiv
  3765  0E76  0877               	movf	??___lwdiv,w
  3766  0E77  07A0               	addwf	___lwdiv@counter,f
  3767  0E78                     l2745:	
  3768  0E78  1FF4               	btfss	___lwdiv@divisor+1,7
  3769  0E79  2E7B               	goto	u2551
  3770  0E7A  2E7C               	goto	u2550
  3771  0E7B                     u2551:	
  3772  0E7B  2E6D               	goto	l2741
  3773  0E7C                     u2550:	
  3774  0E7C                     l2747:	
  3775  0E7C  3001               	movlw	1
  3776  0E7D                     u2565:	
  3777  0E7D  1003               	clrc
  3778  0E7E  0DA1               	rlf	___lwdiv@quotient,f
  3779  0E7F  0DA2               	rlf	___lwdiv@quotient+1,f
  3780  0E80  3EFF               	addlw	-1
  3781  0E81  1D03               	skipz
  3782  0E82  2E7D               	goto	u2565
  3783  0E83  0874               	movf	___lwdiv@divisor+1,w
  3784  0E84  0276               	subwf	___lwdiv@dividend+1,w
  3785  0E85  1D03               	skipz
  3786  0E86  2E89               	goto	u2575
  3787  0E87  0873               	movf	___lwdiv@divisor,w
  3788  0E88  0275               	subwf	___lwdiv@dividend,w
  3789  0E89                     u2575:	
  3790  0E89  1C03               	skipc
  3791  0E8A  2E8C               	goto	u2571
  3792  0E8B  2E8D               	goto	u2570
  3793  0E8C                     u2571:	
  3794  0E8C  2E94               	goto	l2753
  3795  0E8D                     u2570:	
  3796  0E8D                     l2749:	
  3797  0E8D  0873               	movf	___lwdiv@divisor,w
  3798  0E8E  02F5               	subwf	___lwdiv@dividend,f
  3799  0E8F  0874               	movf	___lwdiv@divisor+1,w
  3800  0E90  1C03               	skipc
  3801  0E91  03F6               	decf	___lwdiv@dividend+1,f
  3802  0E92  02F6               	subwf	___lwdiv@dividend+1,f
  3803  0E93                     l2751:	
  3804  0E93  1421               	bsf	___lwdiv@quotient,0
  3805  0E94                     l2753:	
  3806  0E94  3001               	movlw	1
  3807  0E95                     u2585:	
  3808  0E95  1003               	clrc
  3809  0E96  0CF4               	rrf	___lwdiv@divisor+1,f
  3810  0E97  0CF3               	rrf	___lwdiv@divisor,f
  3811  0E98  3EFF               	addlw	-1
  3812  0E99  1D03               	skipz
  3813  0E9A  2E95               	goto	u2585
  3814  0E9B                     l2755:	
  3815  0E9B  3001               	movlw	1
  3816  0E9C  02A0               	subwf	___lwdiv@counter,f
  3817  0E9D  1D03               	btfss	3,2
  3818  0E9E  2EA0               	goto	u2591
  3819  0E9F  2EA1               	goto	u2590
  3820  0EA0                     u2591:	
  3821  0EA0  2E7C               	goto	l2747
  3822  0EA1                     u2590:	
  3823  0EA1                     l2757:	
  3824  0EA1  0822               	movf	___lwdiv@quotient+1,w
  3825  0EA2  00F4               	movwf	?___lwdiv+1
  3826  0EA3  0821               	movf	___lwdiv@quotient,w
  3827  0EA4  00F3               	movwf	?___lwdiv
  3828  0EA5                     l767:	
  3829  0EA5  0008               	return
  3830  0EA6                     __end_of___lwdiv:	
  3831                           
  3832                           	psect	text17
  3833  0F47                     __ptext17:	
  3834 ;; *************** function ___awmod *****************
  3835 ;; Defined at:
  3836 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  divisor         2    3[COMMON] int 
  3839 ;;  dividend        2    5[COMMON] int 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  sign            1    1[BANK0 ] unsigned char 
  3842 ;;  counter         1    0[BANK0 ] unsigned char 
  3843 ;; Return value:  Size  Location     Type
  3844 ;;                  2    3[COMMON] int 
  3845 ;; Registers used:
  3846 ;;		wreg, status,2, status,0
  3847 ;; Tracked objects:
  3848 ;;		On entry : 0/0
  3849 ;;		On exit  : 0/0
  3850 ;;		Unchanged: 0/0
  3851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3852 ;;      Params:         4       0       0       0       0
  3853 ;;      Locals:         0       2       0       0       0
  3854 ;;      Temps:          1       0       0       0       0
  3855 ;;      Totals:         5       2       0       0       0
  3856 ;;Total ram usage:        7 bytes
  3857 ;; Hardware stack levels used:    1
  3858 ;; Hardware stack levels required when called:    1
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		_void_microwave_timer
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           
  3867                           ;psect for function ___awmod
  3868  0F47                     ___awmod:	
  3869  0F47                     l2827:	
  3870                           ;incstack = 0
  3871                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3872                           
  3873  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  3874  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  3875  0F49  01A1               	clrf	___awmod@sign
  3876  0F4A                     l2829:	
  3877  0F4A  1FF6               	btfss	___awmod@dividend+1,7
  3878  0F4B  2F4D               	goto	u2671
  3879  0F4C  2F4E               	goto	u2670
  3880  0F4D                     u2671:	
  3881  0F4D  2F55               	goto	l2835
  3882  0F4E                     u2670:	
  3883  0F4E                     l2831:	
  3884  0F4E  09F5               	comf	___awmod@dividend,f
  3885  0F4F  09F6               	comf	___awmod@dividend+1,f
  3886  0F50  0AF5               	incf	___awmod@dividend,f
  3887  0F51  1903               	skipnz
  3888  0F52  0AF6               	incf	___awmod@dividend+1,f
  3889  0F53                     l2833:	
  3890  0F53  01A1               	clrf	___awmod@sign
  3891  0F54  0AA1               	incf	___awmod@sign,f
  3892  0F55                     l2835:	
  3893  0F55  1FF4               	btfss	___awmod@divisor+1,7
  3894  0F56  2F58               	goto	u2681
  3895  0F57  2F59               	goto	u2680
  3896  0F58                     u2681:	
  3897  0F58  2F5E               	goto	l2839
  3898  0F59                     u2680:	
  3899  0F59                     l2837:	
  3900  0F59  09F3               	comf	___awmod@divisor,f
  3901  0F5A  09F4               	comf	___awmod@divisor+1,f
  3902  0F5B  0AF3               	incf	___awmod@divisor,f
  3903  0F5C  1903               	skipnz
  3904  0F5D  0AF4               	incf	___awmod@divisor+1,f
  3905  0F5E                     l2839:	
  3906  0F5E  0873               	movf	___awmod@divisor,w
  3907  0F5F  0474               	iorwf	___awmod@divisor+1,w
  3908  0F60  1903               	btfsc	3,2
  3909  0F61  2F63               	goto	u2691
  3910  0F62  2F64               	goto	u2690
  3911  0F63                     u2691:	
  3912  0F63  2F93               	goto	l2857
  3913  0F64                     u2690:	
  3914  0F64                     l2841:	
  3915  0F64  01A0               	clrf	___awmod@counter
  3916  0F65  0AA0               	incf	___awmod@counter,f
  3917  0F66  2F72               	goto	l2847
  3918  0F67                     l2843:	
  3919  0F67  3001               	movlw	1
  3920  0F68                     u2705:	
  3921  0F68  1003               	clrc
  3922  0F69  0DF3               	rlf	___awmod@divisor,f
  3923  0F6A  0DF4               	rlf	___awmod@divisor+1,f
  3924  0F6B  3EFF               	addlw	-1
  3925  0F6C  1D03               	skipz
  3926  0F6D  2F68               	goto	u2705
  3927  0F6E                     l2845:	
  3928  0F6E  3001               	movlw	1
  3929  0F6F  00F7               	movwf	??___awmod
  3930  0F70  0877               	movf	??___awmod,w
  3931  0F71  07A0               	addwf	___awmod@counter,f
  3932  0F72                     l2847:	
  3933  0F72  1FF4               	btfss	___awmod@divisor+1,7
  3934  0F73  2F75               	goto	u2711
  3935  0F74  2F76               	goto	u2710
  3936  0F75                     u2711:	
  3937  0F75  2F67               	goto	l2843
  3938  0F76                     u2710:	
  3939  0F76                     l2849:	
  3940  0F76  0874               	movf	___awmod@divisor+1,w
  3941  0F77  0276               	subwf	___awmod@dividend+1,w
  3942  0F78  1D03               	skipz
  3943  0F79  2F7C               	goto	u2725
  3944  0F7A  0873               	movf	___awmod@divisor,w
  3945  0F7B  0275               	subwf	___awmod@dividend,w
  3946  0F7C                     u2725:	
  3947  0F7C  1C03               	skipc
  3948  0F7D  2F7F               	goto	u2721
  3949  0F7E  2F80               	goto	u2720
  3950  0F7F                     u2721:	
  3951  0F7F  2F86               	goto	l2853
  3952  0F80                     u2720:	
  3953  0F80                     l2851:	
  3954  0F80  0873               	movf	___awmod@divisor,w
  3955  0F81  02F5               	subwf	___awmod@dividend,f
  3956  0F82  0874               	movf	___awmod@divisor+1,w
  3957  0F83  1C03               	skipc
  3958  0F84  03F6               	decf	___awmod@dividend+1,f
  3959  0F85  02F6               	subwf	___awmod@dividend+1,f
  3960  0F86                     l2853:	
  3961  0F86  3001               	movlw	1
  3962  0F87                     u2735:	
  3963  0F87  1003               	clrc
  3964  0F88  0CF4               	rrf	___awmod@divisor+1,f
  3965  0F89  0CF3               	rrf	___awmod@divisor,f
  3966  0F8A  3EFF               	addlw	-1
  3967  0F8B  1D03               	skipz
  3968  0F8C  2F87               	goto	u2735
  3969  0F8D                     l2855:	
  3970  0F8D  3001               	movlw	1
  3971  0F8E  02A0               	subwf	___awmod@counter,f
  3972  0F8F  1D03               	btfss	3,2
  3973  0F90  2F92               	goto	u2741
  3974  0F91  2F93               	goto	u2740
  3975  0F92                     u2741:	
  3976  0F92  2F76               	goto	l2849
  3977  0F93                     u2740:	
  3978  0F93                     l2857:	
  3979  0F93  0821               	movf	___awmod@sign,w
  3980  0F94  1903               	btfsc	3,2
  3981  0F95  2F97               	goto	u2751
  3982  0F96  2F98               	goto	u2750
  3983  0F97                     u2751:	
  3984  0F97  2F9D               	goto	l2861
  3985  0F98                     u2750:	
  3986  0F98                     l2859:	
  3987  0F98  09F5               	comf	___awmod@dividend,f
  3988  0F99  09F6               	comf	___awmod@dividend+1,f
  3989  0F9A  0AF5               	incf	___awmod@dividend,f
  3990  0F9B  1903               	skipnz
  3991  0F9C  0AF6               	incf	___awmod@dividend+1,f
  3992  0F9D                     l2861:	
  3993  0F9D  0876               	movf	___awmod@dividend+1,w
  3994  0F9E  00F4               	movwf	?___awmod+1
  3995  0F9F  0875               	movf	___awmod@dividend,w
  3996  0FA0  00F3               	movwf	?___awmod
  3997  0FA1                     l661:	
  3998  0FA1  0008               	return
  3999  0FA2                     __end_of___awmod:	
  4000                           
  4001                           	psect	text18
  4002  0742                     __ptext18:	
  4003 ;; *************** function ___awdiv *****************
  4004 ;; Defined at:
  4005 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;  divisor         2    3[COMMON] int 
  4008 ;;  dividend        2    5[COMMON] int 
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;  quotient        2    2[BANK0 ] int 
  4011 ;;  sign            1    1[BANK0 ] unsigned char 
  4012 ;;  counter         1    0[BANK0 ] unsigned char 
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  2    3[COMMON] int 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4022 ;;      Params:         4       0       0       0       0
  4023 ;;      Locals:         0       4       0       0       0
  4024 ;;      Temps:          1       0       0       0       0
  4025 ;;      Totals:         5       4       0       0       0
  4026 ;;Total ram usage:        9 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; Hardware stack levels required when called:    1
  4029 ;; This function calls:
  4030 ;;		Nothing
  4031 ;; This function is called by:
  4032 ;;		_void_microwave_timer
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           
  4037                           ;psect for function ___awdiv
  4038  0742                     ___awdiv:	
  4039  0742                     l2039:	
  4040                           ;incstack = 0
  4041                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4042                           
  4043  0742  1283               	bcf	3,5	;RP0=0, select bank0
  4044  0743  1303               	bcf	3,6	;RP1=0, select bank0
  4045  0744  01A1               	clrf	___awdiv@sign
  4046  0745                     l2041:	
  4047  0745  1FF4               	btfss	___awdiv@divisor+1,7
  4048  0746  2F48               	goto	u1571
  4049  0747  2F49               	goto	u1570
  4050  0748                     u1571:	
  4051  0748  2F50               	goto	l2047
  4052  0749                     u1570:	
  4053  0749                     l2043:	
  4054  0749  09F3               	comf	___awdiv@divisor,f
  4055  074A  09F4               	comf	___awdiv@divisor+1,f
  4056  074B  0AF3               	incf	___awdiv@divisor,f
  4057  074C  1903               	skipnz
  4058  074D  0AF4               	incf	___awdiv@divisor+1,f
  4059  074E                     l2045:	
  4060  074E  01A1               	clrf	___awdiv@sign
  4061  074F  0AA1               	incf	___awdiv@sign,f
  4062  0750                     l2047:	
  4063  0750  1FF6               	btfss	___awdiv@dividend+1,7
  4064  0751  2F53               	goto	u1581
  4065  0752  2F54               	goto	u1580
  4066  0753                     u1581:	
  4067  0753  2F5D               	goto	l2053
  4068  0754                     u1580:	
  4069  0754                     l2049:	
  4070  0754  09F5               	comf	___awdiv@dividend,f
  4071  0755  09F6               	comf	___awdiv@dividend+1,f
  4072  0756  0AF5               	incf	___awdiv@dividend,f
  4073  0757  1903               	skipnz
  4074  0758  0AF6               	incf	___awdiv@dividend+1,f
  4075  0759                     l2051:	
  4076  0759  3001               	movlw	1
  4077  075A  00F7               	movwf	??___awdiv
  4078  075B  0877               	movf	??___awdiv,w
  4079  075C  06A1               	xorwf	___awdiv@sign,f
  4080  075D                     l2053:	
  4081  075D  01A2               	clrf	___awdiv@quotient
  4082  075E  01A3               	clrf	___awdiv@quotient+1
  4083  075F                     l2055:	
  4084  075F  0873               	movf	___awdiv@divisor,w
  4085  0760  0474               	iorwf	___awdiv@divisor+1,w
  4086  0761  1903               	btfsc	3,2
  4087  0762  2F64               	goto	u1591
  4088  0763  2F65               	goto	u1590
  4089  0764                     u1591:	
  4090  0764  2F9C               	goto	l2075
  4091  0765                     u1590:	
  4092  0765                     l2057:	
  4093  0765  01A0               	clrf	___awdiv@counter
  4094  0766  0AA0               	incf	___awdiv@counter,f
  4095  0767  2F73               	goto	l2063
  4096  0768                     l2059:	
  4097  0768  3001               	movlw	1
  4098  0769                     u1605:	
  4099  0769  1003               	clrc
  4100  076A  0DF3               	rlf	___awdiv@divisor,f
  4101  076B  0DF4               	rlf	___awdiv@divisor+1,f
  4102  076C  3EFF               	addlw	-1
  4103  076D  1D03               	skipz
  4104  076E  2F69               	goto	u1605
  4105  076F                     l2061:	
  4106  076F  3001               	movlw	1
  4107  0770  00F7               	movwf	??___awdiv
  4108  0771  0877               	movf	??___awdiv,w
  4109  0772  07A0               	addwf	___awdiv@counter,f
  4110  0773                     l2063:	
  4111  0773  1FF4               	btfss	___awdiv@divisor+1,7
  4112  0774  2F76               	goto	u1611
  4113  0775  2F77               	goto	u1610
  4114  0776                     u1611:	
  4115  0776  2F68               	goto	l2059
  4116  0777                     u1610:	
  4117  0777                     l2065:	
  4118  0777  3001               	movlw	1
  4119  0778                     u1625:	
  4120  0778  1003               	clrc
  4121  0779  0DA2               	rlf	___awdiv@quotient,f
  4122  077A  0DA3               	rlf	___awdiv@quotient+1,f
  4123  077B  3EFF               	addlw	-1
  4124  077C  1D03               	skipz
  4125  077D  2F78               	goto	u1625
  4126  077E  0874               	movf	___awdiv@divisor+1,w
  4127  077F  0276               	subwf	___awdiv@dividend+1,w
  4128  0780  1D03               	skipz
  4129  0781  2F84               	goto	u1635
  4130  0782  0873               	movf	___awdiv@divisor,w
  4131  0783  0275               	subwf	___awdiv@dividend,w
  4132  0784                     u1635:	
  4133  0784  1C03               	skipc
  4134  0785  2F87               	goto	u1631
  4135  0786  2F88               	goto	u1630
  4136  0787                     u1631:	
  4137  0787  2F8F               	goto	l2071
  4138  0788                     u1630:	
  4139  0788                     l2067:	
  4140  0788  0873               	movf	___awdiv@divisor,w
  4141  0789  02F5               	subwf	___awdiv@dividend,f
  4142  078A  0874               	movf	___awdiv@divisor+1,w
  4143  078B  1C03               	skipc
  4144  078C  03F6               	decf	___awdiv@dividend+1,f
  4145  078D  02F6               	subwf	___awdiv@dividend+1,f
  4146  078E                     l2069:	
  4147  078E  1422               	bsf	___awdiv@quotient,0
  4148  078F                     l2071:	
  4149  078F  3001               	movlw	1
  4150  0790                     u1645:	
  4151  0790  1003               	clrc
  4152  0791  0CF4               	rrf	___awdiv@divisor+1,f
  4153  0792  0CF3               	rrf	___awdiv@divisor,f
  4154  0793  3EFF               	addlw	-1
  4155  0794  1D03               	skipz
  4156  0795  2F90               	goto	u1645
  4157  0796                     l2073:	
  4158  0796  3001               	movlw	1
  4159  0797  02A0               	subwf	___awdiv@counter,f
  4160  0798  1D03               	btfss	3,2
  4161  0799  2F9B               	goto	u1651
  4162  079A  2F9C               	goto	u1650
  4163  079B                     u1651:	
  4164  079B  2F77               	goto	l2065
  4165  079C                     u1650:	
  4166  079C                     l2075:	
  4167  079C  0821               	movf	___awdiv@sign,w
  4168  079D  1903               	btfsc	3,2
  4169  079E  2FA0               	goto	u1661
  4170  079F  2FA1               	goto	u1660
  4171  07A0                     u1661:	
  4172  07A0  2FA6               	goto	l2079
  4173  07A1                     u1660:	
  4174  07A1                     l2077:	
  4175  07A1  09A2               	comf	___awdiv@quotient,f
  4176  07A2  09A3               	comf	___awdiv@quotient+1,f
  4177  07A3  0AA2               	incf	___awdiv@quotient,f
  4178  07A4  1903               	skipnz
  4179  07A5  0AA3               	incf	___awdiv@quotient+1,f
  4180  07A6                     l2079:	
  4181  07A6  0823               	movf	___awdiv@quotient+1,w
  4182  07A7  00F4               	movwf	?___awdiv+1
  4183  07A8  0822               	movf	___awdiv@quotient,w
  4184  07A9  00F3               	movwf	?___awdiv
  4185  07AA                     l648:	
  4186  07AA  0008               	return
  4187  07AB                     __end_of___awdiv:	
  4188                           
  4189                           	psect	text19
  4190  0C9E                     __ptext19:	
  4191 ;; *************** function _void_init_timer *****************
  4192 ;; Defined at:
  4193 ;;		line 8 in file "MCAL/TIMER1.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  prescaler       1    wreg     unsigned char 
  4196 ;;  I               1    3[COMMON] unsigned char 
  4197 ;;  timer_H_reg     2    4[COMMON] int 
  4198 ;;  timer_L_reg     2    6[COMMON] int 
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;  prescaler       1    2[BANK0 ] unsigned char 
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      void 
  4203 ;; Registers used:
  4204 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4210 ;;      Params:         5       0       0       0       0
  4211 ;;      Locals:         0       1       0       0       0
  4212 ;;      Temps:          0       2       0       0       0
  4213 ;;      Totals:         5       3       0       0       0
  4214 ;;Total ram usage:        8 bytes
  4215 ;; Hardware stack levels used:    1
  4216 ;; Hardware stack levels required when called:    1
  4217 ;; This function calls:
  4218 ;;		Nothing
  4219 ;; This function is called by:
  4220 ;;		_main
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           
  4225                           ;psect for function _void_init_timer
  4226  0C9E                     _void_init_timer:	
  4227                           
  4228                           ;incstack = 0
  4229                           ; Regs used in _void_init_timer: [wreg-fsr0h+status,2+status,0]
  4230                           ;void_init_timer@prescaler stored from wreg
  4231  0C9E  1283               	bcf	3,5	;RP0=0, select bank0
  4232  0C9F  1303               	bcf	3,6	;RP1=0, select bank0
  4233  0CA0  00A2               	movwf	void_init_timer@prescaler
  4234  0CA1                     l2981:	
  4235                           
  4236                           ;MCAL/TIMER1.c: 8: void void_init_timer(char prescaler , char I,int timer_H_reg,int time
      +                          r_L_reg);MCAL/TIMER1.c: 9: {;MCAL/TIMER1.c: 10:     switch (prescaler)
  4237  0CA1  2CAB               	goto	l2991
  4238  0CA2                     l2983:	
  4239                           
  4240                           ;MCAL/TIMER1.c: 15:             T1CON = (1<<4);
  4241  0CA2  3010               	movlw	16
  4242  0CA3  0090               	movwf	16	;volatile
  4243                           
  4244                           ;MCAL/TIMER1.c: 16:             break;
  4245  0CA4  2CC1               	goto	l2993
  4246  0CA5                     l2985:	
  4247                           
  4248                           ;MCAL/TIMER1.c: 18:             T1CON = (1<<5) ;
  4249  0CA5  3020               	movlw	32
  4250  0CA6  0090               	movwf	16	;volatile
  4251                           
  4252                           ;MCAL/TIMER1.c: 19:             break ;
  4253  0CA7  2CC1               	goto	l2993
  4254  0CA8                     l2987:	
  4255                           
  4256                           ;MCAL/TIMER1.c: 21:             T1CON = (1<<5) | (1<<4);
  4257  0CA8  3030               	movlw	48
  4258  0CA9  0090               	movwf	16	;volatile
  4259                           
  4260                           ;MCAL/TIMER1.c: 22:             break;
  4261  0CAA  2CC1               	goto	l2993
  4262  0CAB                     l2991:	
  4263  0CAB  0822               	movf	void_init_timer@prescaler,w
  4264  0CAC  00A0               	movwf	??_void_init_timer
  4265  0CAD  01A1               	clrf	??_void_init_timer+1
  4266                           
  4267                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4268                           ; Switch size 1, requested type "simple"
  4269                           ; Number of cases is 1, Range of values is 0 to 0
  4270                           ; switch strategies available:
  4271                           ; Name         Instructions Cycles
  4272                           ; simple_byte            4     3 (average)
  4273                           ; direct_byte           11     8 (fixed)
  4274                           ; jumptable            260     6 (fixed)
  4275                           ;	Chosen strategy is simple_byte
  4276  0CAE  0821               	movf	??_void_init_timer+1,w
  4277  0CAF  3A00               	xorlw	0	; case 0
  4278  0CB0  1903               	skipnz
  4279  0CB1  2CB3               	goto	l3319
  4280  0CB2  2CC1               	goto	l2993
  4281  0CB3                     l3319:	
  4282                           
  4283                           ; Switch size 1, requested type "simple"
  4284                           ; Number of cases is 4, Range of values is 1 to 8
  4285                           ; switch strategies available:
  4286                           ; Name         Instructions Cycles
  4287                           ; simple_byte           13     7 (average)
  4288                           ; direct_byte           35    11 (fixed)
  4289                           ; jumptable            263     9 (fixed)
  4290                           ;	Chosen strategy is simple_byte
  4291  0CB3  0820               	movf	??_void_init_timer,w
  4292  0CB4  3A01               	xorlw	1	; case 1
  4293  0CB5  1903               	skipnz
  4294  0CB6  2CC1               	goto	l2993
  4295  0CB7  3A03               	xorlw	3	; case 2
  4296  0CB8  1903               	skipnz
  4297  0CB9  2CA2               	goto	l2983
  4298  0CBA  3A06               	xorlw	6	; case 4
  4299  0CBB  1903               	skipnz
  4300  0CBC  2CA5               	goto	l2985
  4301  0CBD  3A0C               	xorlw	12	; case 8
  4302  0CBE  1903               	skipnz
  4303  0CBF  2CA8               	goto	l2987
  4304  0CC0  2CC1               	goto	l2993
  4305  0CC1                     l2993:	
  4306                           
  4307                           ;MCAL/TIMER1.c: 24:     if(I)
  4308  0CC1  0873               	movf	void_init_timer@I,w
  4309  0CC2  1903               	btfsc	3,2
  4310  0CC3  2CC5               	goto	u3001
  4311  0CC4  2CC6               	goto	u3000
  4312  0CC5                     u3001:	
  4313  0CC5  2CCB               	goto	l2997
  4314  0CC6                     u3000:	
  4315  0CC6                     l2995:	
  4316                           
  4317                           ;MCAL/TIMER1.c: 25:     {;MCAL/TIMER1.c: 27:     TMR1IE=1;
  4318  0CC6  1683               	bsf	3,5	;RP0=1, select bank1
  4319  0CC7  1303               	bcf	3,6	;RP1=0, select bank1
  4320  0CC8  140C               	bsf	12,0	;volatile
  4321                           
  4322                           ;MCAL/TIMER1.c: 28:     GIE=1;
  4323  0CC9  178B               	bsf	11,7	;volatile
  4324                           
  4325                           ;MCAL/TIMER1.c: 29:     PEIE=1;
  4326  0CCA  170B               	bsf	11,6	;volatile
  4327  0CCB                     l2997:	
  4328                           
  4329                           ;MCAL/TIMER1.c: 32:     TMR1H=timer_H_reg;
  4330  0CCB  0874               	movf	void_init_timer@timer_H_reg,w
  4331  0CCC  1283               	bcf	3,5	;RP0=0, select bank0
  4332  0CCD  008F               	movwf	15	;volatile
  4333                           
  4334                           ;MCAL/TIMER1.c: 33:     TMR1L=timer_L_reg;
  4335  0CCE  0876               	movf	void_init_timer@timer_L_reg,w
  4336  0CCF  008E               	movwf	14	;volatile
  4337  0CD0                     l381:	
  4338  0CD0  0008               	return
  4339  0CD1                     __end_of_void_init_timer:	
  4340                           
  4341                           	psect	text20
  4342  0BE9                     __ptext20:	
  4343 ;; *************** function _void_init_sensors *****************
  4344 ;; Defined at:
  4345 ;;		line 3 in file "HAL/sensors_and_actuator.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;		None
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;		None
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  1    wreg      void 
  4352 ;; Registers used:
  4353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4359 ;;      Params:         0       0       0       0       0
  4360 ;;      Locals:         0       0       0       0       0
  4361 ;;      Temps:          0       1       0       0       0
  4362 ;;      Totals:         0       1       0       0       0
  4363 ;;Total ram usage:        1 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; Hardware stack levels required when called:    2
  4366 ;; This function calls:
  4367 ;;		_void_init_pin
  4368 ;; This function is called by:
  4369 ;;		_main
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           
  4374                           ;psect for function _void_init_sensors
  4375  0BE9                     _void_init_sensors:	
  4376  0BE9                     l3005:	
  4377                           ;incstack = 0
  4378                           ; Regs used in _void_init_sensors: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4379                           
  4380                           
  4381                           ;HAL/sensors_and_actuator.c: 5:     void_init_pin('b',3,0);
  4382  0BE9  3003               	movlw	3
  4383  0BEA  1283               	bcf	3,5	;RP0=0, select bank0
  4384  0BEB  1303               	bcf	3,6	;RP1=0, select bank0
  4385  0BEC  00A0               	movwf	??_void_init_sensors
  4386  0BED  0820               	movf	??_void_init_sensors,w
  4387  0BEE  00F3               	movwf	void_init_pin@pinnumber
  4388  0BEF  01F4               	clrf	void_init_pin@dir
  4389  0BF0  3062               	movlw	98
  4390  0BF1  120A  118A  2328  120A  158A  	fcall	_void_init_pin
  4391                           
  4392                           ;HAL/sensors_and_actuator.c: 6:     void_init_pin('b',4,0);
  4393  0BF6  3004               	movlw	4
  4394  0BF7  1283               	bcf	3,5	;RP0=0, select bank0
  4395  0BF8  1303               	bcf	3,6	;RP1=0, select bank0
  4396  0BF9  00A0               	movwf	??_void_init_sensors
  4397  0BFA  0820               	movf	??_void_init_sensors,w
  4398  0BFB  00F3               	movwf	void_init_pin@pinnumber
  4399  0BFC  01F4               	clrf	void_init_pin@dir
  4400  0BFD  3062               	movlw	98
  4401  0BFE  120A  118A  2328  120A  158A  	fcall	_void_init_pin
  4402                           
  4403                           ;HAL/sensors_and_actuator.c: 7:     void_init_pin('b',5,0);
  4404  0C03  3005               	movlw	5
  4405  0C04  1283               	bcf	3,5	;RP0=0, select bank0
  4406  0C05  1303               	bcf	3,6	;RP1=0, select bank0
  4407  0C06  00A0               	movwf	??_void_init_sensors
  4408  0C07  0820               	movf	??_void_init_sensors,w
  4409  0C08  00F3               	movwf	void_init_pin@pinnumber
  4410  0C09  01F4               	clrf	void_init_pin@dir
  4411  0C0A  3062               	movlw	98
  4412  0C0B  120A  118A  2328  120A  158A  	fcall	_void_init_pin
  4413  0C10                     l337:	
  4414  0C10  0008               	return
  4415  0C11                     __end_of_void_init_sensors:	
  4416                           
  4417                           	psect	text21
  4418  04FA                     __ptext21:	
  4419 ;; *************** function _void_init_lcd *****************
  4420 ;; Defined at:
  4421 ;;		line 13 in file "HAL/LCD.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;		None
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;		None
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      void 
  4428 ;; Registers used:
  4429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4435 ;;      Params:         0       0       0       0       0
  4436 ;;      Locals:         0       0       0       0       0
  4437 ;;      Temps:          0       1       0       0       0
  4438 ;;      Totals:         0       1       0       0       0
  4439 ;;Total ram usage:        1 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:    4
  4442 ;; This function calls:
  4443 ;;		_delay_ms
  4444 ;;		_void_LCD_init_Command
  4445 ;;		_void_init_pin
  4446 ;;		_void_lcd_send_command
  4447 ;; This function is called by:
  4448 ;;		_main
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           
  4453                           ;psect for function _void_init_lcd
  4454  04FA                     _void_init_lcd:	
  4455  04FA                     l2955:	
  4456                           ;incstack = 0
  4457                           ; Regs used in _void_init_lcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4458                           
  4459                           
  4460                           ;HAL/LCD.c: 17: void_init_pin('d',4,1);
  4461  04FA  3004               	movlw	4
  4462  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  4463  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  4464  04FD  00A7               	movwf	??_void_init_lcd
  4465  04FE  0827               	movf	??_void_init_lcd,w
  4466  04FF  00F3               	movwf	void_init_pin@pinnumber
  4467  0500  01F4               	clrf	void_init_pin@dir
  4468  0501  0AF4               	incf	void_init_pin@dir,f
  4469  0502  3064               	movlw	100
  4470  0503  120A  118A  2328  120A  118A  	fcall	_void_init_pin
  4471                           
  4472                           ;HAL/LCD.c: 18: void_init_pin('d',5,1);
  4473  0508  3005               	movlw	5
  4474  0509  1283               	bcf	3,5	;RP0=0, select bank0
  4475  050A  1303               	bcf	3,6	;RP1=0, select bank0
  4476  050B  00A7               	movwf	??_void_init_lcd
  4477  050C  0827               	movf	??_void_init_lcd,w
  4478  050D  00F3               	movwf	void_init_pin@pinnumber
  4479  050E  01F4               	clrf	void_init_pin@dir
  4480  050F  0AF4               	incf	void_init_pin@dir,f
  4481  0510  3064               	movlw	100
  4482  0511  120A  118A  2328  120A  118A  	fcall	_void_init_pin
  4483                           
  4484                           ;HAL/LCD.c: 19: void_init_pin('d',6,1);
  4485  0516  3006               	movlw	6
  4486  0517  1283               	bcf	3,5	;RP0=0, select bank0
  4487  0518  1303               	bcf	3,6	;RP1=0, select bank0
  4488  0519  00A7               	movwf	??_void_init_lcd
  4489  051A  0827               	movf	??_void_init_lcd,w
  4490  051B  00F3               	movwf	void_init_pin@pinnumber
  4491  051C  01F4               	clrf	void_init_pin@dir
  4492  051D  0AF4               	incf	void_init_pin@dir,f
  4493  051E  3064               	movlw	100
  4494  051F  120A  118A  2328  120A  118A  	fcall	_void_init_pin
  4495                           
  4496                           ;HAL/LCD.c: 20: void_init_pin('d',7,1);
  4497  0524  3007               	movlw	7
  4498  0525  1283               	bcf	3,5	;RP0=0, select bank0
  4499  0526  1303               	bcf	3,6	;RP1=0, select bank0
  4500  0527  00A7               	movwf	??_void_init_lcd
  4501  0528  0827               	movf	??_void_init_lcd,w
  4502  0529  00F3               	movwf	void_init_pin@pinnumber
  4503  052A  01F4               	clrf	void_init_pin@dir
  4504  052B  0AF4               	incf	void_init_pin@dir,f
  4505  052C  3064               	movlw	100
  4506  052D  120A  118A  2328  120A  118A  	fcall	_void_init_pin
  4507                           
  4508                           ;HAL/LCD.c: 22: void_init_pin('e',2,1);
  4509  0532  3002               	movlw	2
  4510  0533  1283               	bcf	3,5	;RP0=0, select bank0
  4511  0534  1303               	bcf	3,6	;RP1=0, select bank0
  4512  0535  00A7               	movwf	??_void_init_lcd
  4513  0536  0827               	movf	??_void_init_lcd,w
  4514  0537  00F3               	movwf	void_init_pin@pinnumber
  4515  0538  01F4               	clrf	void_init_pin@dir
  4516  0539  0AF4               	incf	void_init_pin@dir,f
  4517  053A  3065               	movlw	101
  4518  053B  120A  118A  2328  120A  118A  	fcall	_void_init_pin
  4519                           
  4520                           ;HAL/LCD.c: 23: void_init_pin('e',1,1);
  4521  0540  01F3               	clrf	void_init_pin@pinnumber
  4522  0541  0AF3               	incf	void_init_pin@pinnumber,f
  4523  0542  01F4               	clrf	void_init_pin@dir
  4524  0543  0AF4               	incf	void_init_pin@dir,f
  4525  0544  3065               	movlw	101
  4526  0545  120A  118A  2328  120A  118A  	fcall	_void_init_pin
  4527                           
  4528                           ;HAL/LCD.c: 26: void_LCD_init_Command(0x30);
  4529  054A  3030               	movlw	48
  4530  054B  120A  158A  232F  120A  118A  	fcall	_void_LCD_init_Command
  4531  0550                     l2957:	
  4532                           
  4533                           ;HAL/LCD.c: 27: delay_ms(10);
  4534  0550  300A               	movlw	10
  4535  0551  00F3               	movwf	delay_ms@ms_Count
  4536  0552  3000               	movlw	0
  4537  0553  00F4               	movwf	delay_ms@ms_Count+1
  4538  0554  120A  158A  23C2  120A  118A  	fcall	_delay_ms
  4539  0559                     l2959:	
  4540                           
  4541                           ;HAL/LCD.c: 28: void_LCD_init_Command(0x30);
  4542  0559  3030               	movlw	48
  4543  055A  120A  158A  232F  120A  118A  	fcall	_void_LCD_init_Command
  4544                           
  4545                           ;HAL/LCD.c: 29: delay_ms(10);
  4546  055F  300A               	movlw	10
  4547  0560  00F3               	movwf	delay_ms@ms_Count
  4548  0561  3000               	movlw	0
  4549  0562  00F4               	movwf	delay_ms@ms_Count+1
  4550  0563  120A  158A  23C2  120A  118A  	fcall	_delay_ms
  4551  0568                     l2961:	
  4552                           
  4553                           ;HAL/LCD.c: 30: void_LCD_init_Command(0x30);
  4554  0568  3030               	movlw	48
  4555  0569  120A  158A  232F  120A  118A  	fcall	_void_LCD_init_Command
  4556  056E                     l2963:	
  4557                           
  4558                           ;HAL/LCD.c: 31: delay_ms(10);
  4559  056E  300A               	movlw	10
  4560  056F  00F3               	movwf	delay_ms@ms_Count
  4561  0570  3000               	movlw	0
  4562  0571  00F4               	movwf	delay_ms@ms_Count+1
  4563  0572  120A  158A  23C2  120A  118A  	fcall	_delay_ms
  4564                           
  4565                           ;HAL/LCD.c: 32: void_LCD_init_Command(0x20);
  4566  0577  3020               	movlw	32
  4567  0578  120A  158A  232F  120A  118A  	fcall	_void_LCD_init_Command
  4568  057D                     l2965:	
  4569                           
  4570                           ;HAL/LCD.c: 33: delay_ms(10);
  4571  057D  300A               	movlw	10
  4572  057E  00F3               	movwf	delay_ms@ms_Count
  4573  057F  3000               	movlw	0
  4574  0580  00F4               	movwf	delay_ms@ms_Count+1
  4575  0581  120A  158A  23C2  120A  118A  	fcall	_delay_ms
  4576  0586                     l2967:	
  4577                           
  4578                           ;HAL/LCD.c: 34: delay_ms(10);
  4579  0586  300A               	movlw	10
  4580  0587  00F3               	movwf	delay_ms@ms_Count
  4581  0588  3000               	movlw	0
  4582  0589  00F4               	movwf	delay_ms@ms_Count+1
  4583  058A  120A  158A  23C2  120A  118A  	fcall	_delay_ms
  4584                           
  4585                           ;HAL/LCD.c: 35: void_lcd_send_command(0x28);
  4586  058F  3028               	movlw	40
  4587  0590  120A  158A  25AB  120A  118A  	fcall	_void_lcd_send_command
  4588                           
  4589                           ;HAL/LCD.c: 36: void_lcd_send_command(0x0c);
  4590  0595  300C               	movlw	12
  4591  0596  120A  158A  25AB  120A  118A  	fcall	_void_lcd_send_command
  4592                           
  4593                           ;HAL/LCD.c: 37: void_lcd_send_command(0x06);
  4594  059B  3006               	movlw	6
  4595  059C  120A  158A  25AB  120A  118A  	fcall	_void_lcd_send_command
  4596                           
  4597                           ;HAL/LCD.c: 38: void_lcd_send_command(0x80);
  4598  05A1  3080               	movlw	128
  4599  05A2  120A  158A  25AB  120A  118A  	fcall	_void_lcd_send_command
  4600  05A7                     l2969:	
  4601                           
  4602                           ;HAL/LCD.c: 39: delay_ms(20);
  4603  05A7  3014               	movlw	20
  4604  05A8  00F3               	movwf	delay_ms@ms_Count
  4605  05A9  3000               	movlw	0
  4606  05AA  00F4               	movwf	delay_ms@ms_Count+1
  4607  05AB  120A  158A  23C2  120A  118A  	fcall	_delay_ms
  4608  05B0                     l246:	
  4609  05B0  0008               	return
  4610  05B1                     __end_of_void_init_lcd:	
  4611                           
  4612                           	psect	text22
  4613  0DAB                     __ptext22:	
  4614 ;; *************** function _void_lcd_send_command *****************
  4615 ;; Defined at:
  4616 ;;		line 41 in file "HAL/LCD.c"
  4617 ;; Parameters:    Size  Location     Type
  4618 ;;  command         1    wreg     unsigned char 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  command         1    6[BANK0 ] unsigned char 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  1    wreg      void 
  4623 ;; Registers used:
  4624 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4630 ;;      Params:         0       0       0       0       0
  4631 ;;      Locals:         0       1       0       0       0
  4632 ;;      Temps:          0       2       0       0       0
  4633 ;;      Totals:         0       3       0       0       0
  4634 ;;Total ram usage:        3 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; Hardware stack levels required when called:    3
  4637 ;; This function calls:
  4638 ;;		_void_pulse
  4639 ;;		_void_write_pin
  4640 ;;		_void_write_port
  4641 ;; This function is called by:
  4642 ;;		_void_init_lcd
  4643 ;;		_void_lcd_clear
  4644 ;;		_void_lcd_goto
  4645 ;; This function uses a non-reentrant model
  4646 ;;
  4647                           
  4648                           
  4649                           ;psect for function _void_lcd_send_command
  4650  0DAB                     _void_lcd_send_command:	
  4651                           
  4652                           ;incstack = 0
  4653                           ; Regs used in _void_lcd_send_command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4654                           ;void_lcd_send_command@command stored from wreg
  4655  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  4656  0DAC  1303               	bcf	3,6	;RP1=0, select bank0
  4657  0DAD  00A6               	movwf	void_lcd_send_command@command
  4658  0DAE                     l2715:	
  4659                           
  4660                           ;HAL/LCD.c: 41: void void_lcd_send_command( char command);HAL/LCD.c: 42: {;HAL/LCD.c: 43
      +                          :  void_write_pin('e',2,0);
  4661  0DAE  3002               	movlw	2
  4662  0DAF  00A4               	movwf	??_void_lcd_send_command
  4663  0DB0  0824               	movf	??_void_lcd_send_command,w
  4664  0DB1  00F3               	movwf	void_write_pin@pinnumber
  4665  0DB2  01F4               	clrf	void_write_pin@state
  4666  0DB3  3065               	movlw	101
  4667  0DB4  120A  118A  2411  120A  158A  	fcall	_void_write_pin
  4668                           
  4669                           ;HAL/LCD.c: 45:  void_write_port('d',(command &0xf0));
  4670  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  4671  0DBA  1303               	bcf	3,6	;RP1=0, select bank0
  4672  0DBB  0826               	movf	void_lcd_send_command@command,w
  4673  0DBC  39F0               	andlw	240
  4674  0DBD  00A4               	movwf	??_void_lcd_send_command
  4675  0DBE  0824               	movf	??_void_lcd_send_command,w
  4676  0DBF  00F3               	movwf	void_write_port@pins_dir
  4677  0DC0  3064               	movlw	100
  4678  0DC1  120A  158A  2539  120A  158A  	fcall	_void_write_port
  4679                           
  4680                           ;HAL/LCD.c: 46:  void_pulse();
  4681  0DC6  120A  158A  2375  120A  158A  	fcall	_void_pulse
  4682                           
  4683                           ;HAL/LCD.c: 47:  void_write_port('d',((command &0x0f)<<4));
  4684  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  4685  0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  4686  0DCD  0826               	movf	void_lcd_send_command@command,w
  4687  0DCE  390F               	andlw	15
  4688  0DCF  00A4               	movwf	??_void_lcd_send_command
  4689  0DD0  3003               	movlw	3
  4690  0DD1                     u2505:	
  4691  0DD1  1003               	clrc
  4692  0DD2  0DA4               	rlf	??_void_lcd_send_command,f
  4693  0DD3  3EFF               	addlw	-1
  4694  0DD4  1D03               	skipz
  4695  0DD5  2DD1               	goto	u2505
  4696  0DD6  1003               	clrc
  4697  0DD7  0D24               	rlf	??_void_lcd_send_command,w
  4698  0DD8  00A5               	movwf	??_void_lcd_send_command+1
  4699  0DD9  0825               	movf	??_void_lcd_send_command+1,w
  4700  0DDA  00F3               	movwf	void_write_port@pins_dir
  4701  0DDB  3064               	movlw	100
  4702  0DDC  120A  158A  2539  120A  158A  	fcall	_void_write_port
  4703                           
  4704                           ;HAL/LCD.c: 48:  void_pulse();
  4705  0DE1  120A  158A  2375  120A  158A  	fcall	_void_pulse
  4706  0DE6                     l249:	
  4707  0DE6  0008               	return
  4708  0DE7                     __end_of_void_lcd_send_command:	
  4709                           
  4710                           	psect	text23
  4711  0B2F                     __ptext23:	
  4712 ;; *************** function _void_LCD_init_Command *****************
  4713 ;; Defined at:
  4714 ;;		line 101 in file "HAL/LCD.c"
  4715 ;; Parameters:    Size  Location     Type
  4716 ;;  command         1    wreg     unsigned char 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;  command         1    5[BANK0 ] unsigned char 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  1    wreg      void 
  4721 ;; Registers used:
  4722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4728 ;;      Params:         0       0       0       0       0
  4729 ;;      Locals:         0       1       0       0       0
  4730 ;;      Temps:          0       1       0       0       0
  4731 ;;      Totals:         0       2       0       0       0
  4732 ;;Total ram usage:        2 bytes
  4733 ;; Hardware stack levels used:    1
  4734 ;; Hardware stack levels required when called:    3
  4735 ;; This function calls:
  4736 ;;		_void_pulse
  4737 ;;		_void_write_pin
  4738 ;;		_void_write_port
  4739 ;; This function is called by:
  4740 ;;		_void_init_lcd
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           
  4745                           ;psect for function _void_LCD_init_Command
  4746  0B2F                     _void_LCD_init_Command:	
  4747                           
  4748                           ;incstack = 0
  4749                           ; Regs used in _void_LCD_init_Command: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4750                           ;void_LCD_init_Command@command stored from wreg
  4751  0B2F  1283               	bcf	3,5	;RP0=0, select bank0
  4752  0B30  1303               	bcf	3,6	;RP1=0, select bank0
  4753  0B31  00A5               	movwf	void_LCD_init_Command@command
  4754  0B32                     l2927:	
  4755                           
  4756                           ;HAL/LCD.c: 101: void void_LCD_init_Command(unsigned char command);HAL/LCD.c: 102: {;HAL
      +                          /LCD.c: 103:  void_write_pin('e',2,0);
  4757  0B32  3002               	movlw	2
  4758  0B33  00A4               	movwf	??_void_LCD_init_Command
  4759  0B34  0824               	movf	??_void_LCD_init_Command,w
  4760  0B35  00F3               	movwf	void_write_pin@pinnumber
  4761  0B36  01F4               	clrf	void_write_pin@state
  4762  0B37  3065               	movlw	101
  4763  0B38  120A  118A  2411  120A  158A  	fcall	_void_write_pin
  4764                           
  4765                           ;HAL/LCD.c: 106:  void_write_port('d',(command &0xf0));
  4766  0B3D  1283               	bcf	3,5	;RP0=0, select bank0
  4767  0B3E  1303               	bcf	3,6	;RP1=0, select bank0
  4768  0B3F  0825               	movf	void_LCD_init_Command@command,w
  4769  0B40  39F0               	andlw	240
  4770  0B41  00A4               	movwf	??_void_LCD_init_Command
  4771  0B42  0824               	movf	??_void_LCD_init_Command,w
  4772  0B43  00F3               	movwf	void_write_port@pins_dir
  4773  0B44  3064               	movlw	100
  4774  0B45  120A  158A  2539  120A  158A  	fcall	_void_write_port
  4775                           
  4776                           ;HAL/LCD.c: 107:  void_pulse();
  4777  0B4A  120A  158A  2375  120A  158A  	fcall	_void_pulse
  4778  0B4F                     l272:	
  4779  0B4F  0008               	return
  4780  0B50                     __end_of_void_LCD_init_Command:	
  4781                           
  4782                           	psect	text24
  4783  0D39                     __ptext24:	
  4784 ;; *************** function _void_write_port *****************
  4785 ;; Defined at:
  4786 ;;		line 121 in file "MCAL/DIO.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;  portname        1    wreg     unsigned char 
  4789 ;;  pins_dir        1    3[COMMON] unsigned char 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  portname        1    6[COMMON] unsigned char 
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  1    wreg      void 
  4794 ;; Registers used:
  4795 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4801 ;;      Params:         1       0       0       0       0
  4802 ;;      Locals:         1       0       0       0       0
  4803 ;;      Temps:          2       0       0       0       0
  4804 ;;      Totals:         4       0       0       0       0
  4805 ;;Total ram usage:        4 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:    1
  4808 ;; This function calls:
  4809 ;;		Nothing
  4810 ;; This function is called by:
  4811 ;;		_void_lcd_send_command
  4812 ;;		_void_lcd_send_data
  4813 ;;		_void_LCD_init_Command
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           
  4818                           ;psect for function _void_write_port
  4819  0D39                     _void_write_port:	
  4820                           
  4821                           ;incstack = 0
  4822                           ; Regs used in _void_write_port: [wreg-fsr0h+status,2+status,0]
  4823                           ;void_write_port@portname stored from wreg
  4824  0D39  00F6               	movwf	void_write_port@portname
  4825  0D3A                     l2691:	
  4826                           
  4827                           ;MCAL/DIO.c: 121: void void_write_port(char portname,char pins_dir);MCAL/DIO.c: 122: {;M
      +                          CAL/DIO.c: 124:         switch (portname)
  4828  0D3A  2D4F               	goto	l2703
  4829  0D3B                     l2693:	
  4830                           
  4831                           ;MCAL/DIO.c: 128:                 PORTA=pins_dir;
  4832  0D3B  0873               	movf	void_write_port@pins_dir,w
  4833  0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  4834  0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  4835  0D3E  0085               	movwf	5	;volatile
  4836                           
  4837                           ;MCAL/DIO.c: 129:                 break;
  4838  0D3F  2D71               	goto	l216
  4839  0D40                     l2695:	
  4840                           
  4841                           ;MCAL/DIO.c: 133:                 PORTB=pins_dir;
  4842  0D40  0873               	movf	void_write_port@pins_dir,w
  4843  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4844  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4845  0D43  0086               	movwf	6	;volatile
  4846                           
  4847                           ;MCAL/DIO.c: 134:                 break ;
  4848  0D44  2D71               	goto	l216
  4849  0D45                     l2697:	
  4850                           
  4851                           ;MCAL/DIO.c: 137:                 PORTC =pins_dir;
  4852  0D45  0873               	movf	void_write_port@pins_dir,w
  4853  0D46  1283               	bcf	3,5	;RP0=0, select bank0
  4854  0D47  1303               	bcf	3,6	;RP1=0, select bank0
  4855  0D48  0087               	movwf	7	;volatile
  4856                           
  4857                           ;MCAL/DIO.c: 138:                 break ;
  4858  0D49  2D71               	goto	l216
  4859  0D4A                     l2699:	
  4860                           
  4861                           ;MCAL/DIO.c: 141:                 PORTD=pins_dir;
  4862  0D4A  0873               	movf	void_write_port@pins_dir,w
  4863  0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  4864  0D4C  1303               	bcf	3,6	;RP1=0, select bank0
  4865  0D4D  0088               	movwf	8	;volatile
  4866                           
  4867                           ;MCAL/DIO.c: 142:                 break;
  4868  0D4E  2D71               	goto	l216
  4869  0D4F                     l2703:	
  4870  0D4F  0876               	movf	void_write_port@portname,w
  4871  0D50  00F4               	movwf	??_void_write_port
  4872  0D51  01F5               	clrf	??_void_write_port+1
  4873                           
  4874                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4875                           ; Switch size 1, requested type "simple"
  4876                           ; Number of cases is 1, Range of values is 0 to 0
  4877                           ; switch strategies available:
  4878                           ; Name         Instructions Cycles
  4879                           ; simple_byte            4     3 (average)
  4880                           ; direct_byte           11     8 (fixed)
  4881                           ; jumptable            260     6 (fixed)
  4882                           ;	Chosen strategy is simple_byte
  4883  0D52  0875               	movf	??_void_write_port+1,w
  4884  0D53  3A00               	xorlw	0	; case 0
  4885  0D54  1903               	skipnz
  4886  0D55  2D57               	goto	l3321
  4887  0D56  2D71               	goto	l216
  4888  0D57                     l3321:	
  4889                           
  4890                           ; Switch size 1, requested type "simple"
  4891                           ; Number of cases is 8, Range of values is 65 to 100
  4892                           ; switch strategies available:
  4893                           ; Name         Instructions Cycles
  4894                           ; simple_byte           25    13 (average)
  4895                           ; direct_byte          119    11 (fixed)
  4896                           ; jumptable            263     9 (fixed)
  4897                           ;	Chosen strategy is simple_byte
  4898  0D57  0874               	movf	??_void_write_port,w
  4899  0D58  3A41               	xorlw	65	; case 65
  4900  0D59  1903               	skipnz
  4901  0D5A  2D3B               	goto	l2693
  4902  0D5B  3A03               	xorlw	3	; case 66
  4903  0D5C  1903               	skipnz
  4904  0D5D  2D40               	goto	l2695
  4905  0D5E  3A01               	xorlw	1	; case 67
  4906  0D5F  1903               	skipnz
  4907  0D60  2D45               	goto	l2697
  4908  0D61  3A07               	xorlw	7	; case 68
  4909  0D62  1903               	skipnz
  4910  0D63  2D4A               	goto	l2699
  4911  0D64  3A25               	xorlw	37	; case 97
  4912  0D65  1903               	skipnz
  4913  0D66  2D3B               	goto	l2693
  4914  0D67  3A03               	xorlw	3	; case 98
  4915  0D68  1903               	skipnz
  4916  0D69  2D40               	goto	l2695
  4917  0D6A  3A01               	xorlw	1	; case 99
  4918  0D6B  1903               	skipnz
  4919  0D6C  2D45               	goto	l2697
  4920  0D6D  3A07               	xorlw	7	; case 100
  4921  0D6E  1903               	skipnz
  4922  0D6F  2D4A               	goto	l2699
  4923  0D70  2D71               	goto	l216
  4924  0D71                     l216:	
  4925  0D71  0008               	return
  4926  0D72                     __end_of_void_write_port:	
  4927                           
  4928                           	psect	text25
  4929  0B75                     __ptext25:	
  4930 ;; *************** function _void_pulse *****************
  4931 ;; Defined at:
  4932 ;;		line 90 in file "HAL/LCD.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;		None
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;		None
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  1    wreg      void 
  4939 ;; Registers used:
  4940 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4946 ;;      Params:         0       0       0       0       0
  4947 ;;      Locals:         0       0       0       0       0
  4948 ;;      Temps:          0       0       0       0       0
  4949 ;;      Totals:         0       0       0       0       0
  4950 ;;Total ram usage:        0 bytes
  4951 ;; Hardware stack levels used:    1
  4952 ;; Hardware stack levels required when called:    2
  4953 ;; This function calls:
  4954 ;;		_delay_ms
  4955 ;;		_void_write_pin
  4956 ;; This function is called by:
  4957 ;;		_void_lcd_send_command
  4958 ;;		_void_lcd_send_data
  4959 ;;		_void_LCD_init_Command
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           
  4964                           ;psect for function _void_pulse
  4965  0B75                     _void_pulse:	
  4966  0B75                     l2709:	
  4967                           ;incstack = 0
  4968                           ; Regs used in _void_pulse: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4969                           
  4970                           
  4971                           ;HAL/LCD.c: 92:  void_write_pin('e',1,1);
  4972  0B75  01F3               	clrf	void_write_pin@pinnumber
  4973  0B76  0AF3               	incf	void_write_pin@pinnumber,f
  4974  0B77  01F4               	clrf	void_write_pin@state
  4975  0B78  0AF4               	incf	void_write_pin@state,f
  4976  0B79  3065               	movlw	101
  4977  0B7A  120A  118A  2411  120A  158A  	fcall	_void_write_pin
  4978  0B7F                     l2711:	
  4979                           
  4980                           ;HAL/LCD.c: 93:  delay_ms(1);
  4981  0B7F  3001               	movlw	1
  4982  0B80  00F3               	movwf	delay_ms@ms_Count
  4983  0B81  3000               	movlw	0
  4984  0B82  00F4               	movwf	delay_ms@ms_Count+1
  4985  0B83  120A  158A  23C2  120A  158A  	fcall	_delay_ms
  4986  0B88                     l2713:	
  4987                           
  4988                           ;HAL/LCD.c: 94:  void_write_pin('e',1,0);
  4989  0B88  01F3               	clrf	void_write_pin@pinnumber
  4990  0B89  0AF3               	incf	void_write_pin@pinnumber,f
  4991  0B8A  01F4               	clrf	void_write_pin@state
  4992  0B8B  3065               	movlw	101
  4993  0B8C  120A  118A  2411  120A  158A  	fcall	_void_write_pin
  4994                           
  4995                           ;HAL/LCD.c: 95:  delay_ms(1);
  4996  0B91  3001               	movlw	1
  4997  0B92  00F3               	movwf	delay_ms@ms_Count
  4998  0B93  3000               	movlw	0
  4999  0B94  00F4               	movwf	delay_ms@ms_Count+1
  5000  0B95  120A  158A  23C2  120A  158A  	fcall	_delay_ms
  5001  0B9A                     l269:	
  5002  0B9A  0008               	return
  5003  0B9B                     __end_of_void_pulse:	
  5004                           
  5005                           	psect	text26
  5006  0BC2                     __ptext26:	
  5007 ;; *************** function _delay_ms *****************
  5008 ;; Defined at:
  5009 ;;		line 115 in file "HAL/LCD.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  ms_Count        2    3[COMMON] unsigned int 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  j               2    2[BANK0 ] unsigned int 
  5014 ;;  i               2    0[BANK0 ] unsigned int 
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  1    wreg      void 
  5017 ;; Registers used:
  5018 ;;		wreg, status,2
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5024 ;;      Params:         2       0       0       0       0
  5025 ;;      Locals:         0       4       0       0       0
  5026 ;;      Temps:          0       0       0       0       0
  5027 ;;      Totals:         2       4       0       0       0
  5028 ;;Total ram usage:        6 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:    1
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_void_init_lcd
  5035 ;;		_void_lcd_goto
  5036 ;;		_void_pulse
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           
  5041                           ;psect for function _delay_ms
  5042  0BC2                     _delay_ms:	
  5043  0BC2                     l2679:	
  5044                           ;incstack = 0
  5045                           ; Regs used in _delay_ms: [wreg+status,2]
  5046                           
  5047                           
  5048                           ;HAL/LCD.c: 115: void delay_ms(unsigned int ms_Count);HAL/LCD.c: 116: {;HAL/LCD.c: 117: 
      +                              unsigned int i,j;;HAL/LCD.c: 118:     for(i=0;i<ms_Count;i++)
  5049  0BC2  1283               	bcf	3,5	;RP0=0, select bank0
  5050  0BC3  1303               	bcf	3,6	;RP1=0, select bank0
  5051  0BC4  01A0               	clrf	delay_ms@i
  5052  0BC5  01A1               	clrf	delay_ms@i+1
  5053  0BC6  2BDE               	goto	l275
  5054  0BC7                     l2681:	
  5055                           
  5056                           ;HAL/LCD.c: 119:     {;HAL/LCD.c: 120:         for(j=0;j<50;j++);
  5057  0BC7  01A2               	clrf	delay_ms@j
  5058  0BC8  01A3               	clrf	delay_ms@j+1
  5059  0BC9                     l2687:	
  5060  0BC9  3001               	movlw	1
  5061  0BCA  07A2               	addwf	delay_ms@j,f
  5062  0BCB  1803               	skipnc
  5063  0BCC  0AA3               	incf	delay_ms@j+1,f
  5064  0BCD  3000               	movlw	0
  5065  0BCE  07A3               	addwf	delay_ms@j+1,f
  5066  0BCF  3000               	movlw	0
  5067  0BD0  0223               	subwf	delay_ms@j+1,w
  5068  0BD1  3032               	movlw	50
  5069  0BD2  1903               	skipnz
  5070  0BD3  0222               	subwf	delay_ms@j,w
  5071  0BD4  1C03               	skipc
  5072  0BD5  2BD7               	goto	u2481
  5073  0BD6  2BD8               	goto	u2480
  5074  0BD7                     u2481:	
  5075  0BD7  2BC9               	goto	l2687
  5076  0BD8                     u2480:	
  5077  0BD8                     l2689:	
  5078                           
  5079                           ;HAL/LCD.c: 121:     }
  5080  0BD8  3001               	movlw	1
  5081  0BD9  07A0               	addwf	delay_ms@i,f
  5082  0BDA  1803               	skipnc
  5083  0BDB  0AA1               	incf	delay_ms@i+1,f
  5084  0BDC  3000               	movlw	0
  5085  0BDD  07A1               	addwf	delay_ms@i+1,f
  5086  0BDE                     l275:	
  5087  0BDE  0874               	movf	delay_ms@ms_Count+1,w
  5088  0BDF  0221               	subwf	delay_ms@i+1,w
  5089  0BE0  1D03               	skipz
  5090  0BE1  2BE4               	goto	u2495
  5091  0BE2  0873               	movf	delay_ms@ms_Count,w
  5092  0BE3  0220               	subwf	delay_ms@i,w
  5093  0BE4                     u2495:	
  5094  0BE4  1C03               	skipc
  5095  0BE5  2BE7               	goto	u2491
  5096  0BE6  2BE8               	goto	u2490
  5097  0BE7                     u2491:	
  5098  0BE7  2BC7               	goto	l2681
  5099  0BE8                     u2490:	
  5100  0BE8                     l280:	
  5101  0BE8  0008               	return
  5102  0BE9                     __end_of_delay_ms:	
  5103                           
  5104                           	psect	text27
  5105  06C9                     __ptext27:	
  5106 ;; *************** function _void_init_keypad *****************
  5107 ;; Defined at:
  5108 ;;		line 23 in file "HAL/Keypad.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;		None
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;  x               2    1[BANK0 ] int 
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  1    wreg      void 
  5115 ;; Registers used:
  5116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5122 ;;      Params:         0       0       0       0       0
  5123 ;;      Locals:         0       2       0       0       0
  5124 ;;      Temps:          0       1       0       0       0
  5125 ;;      Totals:         0       3       0       0       0
  5126 ;;Total ram usage:        3 bytes
  5127 ;; Hardware stack levels used:    1
  5128 ;; Hardware stack levels required when called:    2
  5129 ;; This function calls:
  5130 ;;		_void_init_pin
  5131 ;;		_void_write_pin
  5132 ;; This function is called by:
  5133 ;;		_main
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137                           
  5138                           ;psect for function _void_init_keypad
  5139  06C9                     _void_init_keypad:	
  5140  06C9                     l2971:	
  5141                           ;incstack = 0
  5142                           ; Regs used in _void_init_keypad: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5143                           
  5144                           
  5145                           ;HAL/Keypad.c: 44: void_init_pin('d',0,0);
  5146  06C9  01F3               	clrf	void_init_pin@pinnumber
  5147  06CA  01F4               	clrf	void_init_pin@dir
  5148  06CB  3064               	movlw	100
  5149  06CC  120A  118A  2328  120A  118A  	fcall	_void_init_pin
  5150                           
  5151                           ;HAL/Keypad.c: 45: void_init_pin('d',1,0);
  5152  06D1  01F3               	clrf	void_init_pin@pinnumber
  5153  06D2  0AF3               	incf	void_init_pin@pinnumber,f
  5154  06D3  01F4               	clrf	void_init_pin@dir
  5155  06D4  3064               	movlw	100
  5156  06D5  120A  118A  2328  120A  118A  	fcall	_void_init_pin
  5157                           
  5158                           ;HAL/Keypad.c: 46: void_init_pin('d',2,0);
  5159  06DA  3002               	movlw	2
  5160  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  5161  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  5162  06DD  00A0               	movwf	??_void_init_keypad
  5163  06DE  0820               	movf	??_void_init_keypad,w
  5164  06DF  00F3               	movwf	void_init_pin@pinnumber
  5165  06E0  01F4               	clrf	void_init_pin@dir
  5166  06E1  3064               	movlw	100
  5167  06E2  120A  118A  2328  120A  118A  	fcall	_void_init_pin
  5168                           
  5169                           ;HAL/Keypad.c: 47: void_init_pin('d',3,0);
  5170  06E7  3003               	movlw	3
  5171  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  5172  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  5173  06EA  00A0               	movwf	??_void_init_keypad
  5174  06EB  0820               	movf	??_void_init_keypad,w
  5175  06EC  00F3               	movwf	void_init_pin@pinnumber
  5176  06ED  01F4               	clrf	void_init_pin@dir
  5177  06EE  3064               	movlw	100
  5178  06EF  120A  118A  2328  120A  118A  	fcall	_void_init_pin
  5179                           
  5180                           ;HAL/Keypad.c: 49: void_init_pin('b',0,1);
  5181  06F4  01F3               	clrf	void_init_pin@pinnumber
  5182  06F5  01F4               	clrf	void_init_pin@dir
  5183  06F6  0AF4               	incf	void_init_pin@dir,f
  5184  06F7  3062               	movlw	98
  5185  06F8  120A  118A  2328  120A  118A  	fcall	_void_init_pin
  5186                           
  5187                           ;HAL/Keypad.c: 50: void_init_pin('b',1,1);
  5188  06FD  01F3               	clrf	void_init_pin@pinnumber
  5189  06FE  0AF3               	incf	void_init_pin@pinnumber,f
  5190  06FF  01F4               	clrf	void_init_pin@dir
  5191  0700  0AF4               	incf	void_init_pin@dir,f
  5192  0701  3062               	movlw	98
  5193  0702  120A  118A  2328  120A  118A  	fcall	_void_init_pin
  5194                           
  5195                           ;HAL/Keypad.c: 51: void_init_pin('b',2,1);
  5196  0707  3002               	movlw	2
  5197  0708  1283               	bcf	3,5	;RP0=0, select bank0
  5198  0709  1303               	bcf	3,6	;RP1=0, select bank0
  5199  070A  00A0               	movwf	??_void_init_keypad
  5200  070B  0820               	movf	??_void_init_keypad,w
  5201  070C  00F3               	movwf	void_init_pin@pinnumber
  5202  070D  01F4               	clrf	void_init_pin@dir
  5203  070E  0AF4               	incf	void_init_pin@dir,f
  5204  070F  3062               	movlw	98
  5205  0710  120A  118A  2328  120A  118A  	fcall	_void_init_pin
  5206  0715                     l2973:	
  5207                           
  5208                           ;HAL/Keypad.c: 57: for (int x=0 ; x<n;x++)
  5209  0715  1283               	bcf	3,5	;RP0=0, select bank0
  5210  0716  1303               	bcf	3,6	;RP1=0, select bank0
  5211  0717  01A1               	clrf	void_init_keypad@x
  5212  0718  01A2               	clrf	void_init_keypad@x+1
  5213  0719  2F34               	goto	l2979
  5214  071A                     l2975:	
  5215                           
  5216                           ;HAL/Keypad.c: 58: {;HAL/Keypad.c: 59:  void_write_pin('b',columns[x],1);
  5217  071A  1283               	bcf	3,5	;RP0=0, select bank0
  5218  071B  1303               	bcf	3,6	;RP1=0, select bank0
  5219  071C  0821               	movf	void_init_keypad@x,w
  5220  071D  3E6A               	addlw	(low (_columns| 0))& (0+255)
  5221  071E  0084               	movwf	4
  5222  071F  1383               	bcf	3,7	;select IRP bank0
  5223  0720  0800               	movf	0,w
  5224  0721  00A0               	movwf	??_void_init_keypad
  5225  0722  0820               	movf	??_void_init_keypad,w
  5226  0723  00F3               	movwf	void_write_pin@pinnumber
  5227  0724  01F4               	clrf	void_write_pin@state
  5228  0725  0AF4               	incf	void_write_pin@state,f
  5229  0726  3062               	movlw	98
  5230  0727  120A  118A  2411  120A  118A  	fcall	_void_write_pin
  5231  072C                     l2977:	
  5232                           
  5233                           ;HAL/Keypad.c: 60: }
  5234  072C  3001               	movlw	1
  5235  072D  1283               	bcf	3,5	;RP0=0, select bank0
  5236  072E  1303               	bcf	3,6	;RP1=0, select bank0
  5237  072F  07A1               	addwf	void_init_keypad@x,f
  5238  0730  1803               	skipnc
  5239  0731  0AA2               	incf	void_init_keypad@x+1,f
  5240  0732  3000               	movlw	0
  5241  0733  07A2               	addwf	void_init_keypad@x+1,f
  5242  0734                     l2979:	
  5243  0734  0822               	movf	void_init_keypad@x+1,w
  5244  0735  3A80               	xorlw	128
  5245  0736  00FF               	movwf	btemp+1
  5246  0737  3080               	movlw	128
  5247  0738  027F               	subwf	btemp+1,w
  5248  0739  1D03               	skipz
  5249  073A  2F3D               	goto	u2995
  5250  073B  3004               	movlw	4
  5251  073C  0221               	subwf	void_init_keypad@x,w
  5252  073D                     u2995:	
  5253  073D  1C03               	skipc
  5254  073E  2F40               	goto	u2991
  5255  073F  2F41               	goto	u2990
  5256  0740                     u2991:	
  5257  0740  2F1A               	goto	l2975
  5258  0741                     u2990:	
  5259  0741                     l302:	
  5260  0741  0008               	return
  5261  0742                     __end_of_void_init_keypad:	
  5262                           
  5263                           	psect	text28
  5264  0CD1                     __ptext28:	
  5265 ;; *************** function _void_init_actuators *****************
  5266 ;; Defined at:
  5267 ;;		line 11 in file "HAL/sensors_and_actuator.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;		None
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;		None
  5272 ;; Return value:  Size  Location     Type
  5273 ;;                  1    wreg      void 
  5274 ;; Registers used:
  5275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5276 ;; Tracked objects:
  5277 ;;		On entry : 0/0
  5278 ;;		On exit  : 0/0
  5279 ;;		Unchanged: 0/0
  5280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5281 ;;      Params:         0       0       0       0       0
  5282 ;;      Locals:         0       0       0       0       0
  5283 ;;      Temps:          0       1       0       0       0
  5284 ;;      Totals:         0       1       0       0       0
  5285 ;;Total ram usage:        1 bytes
  5286 ;; Hardware stack levels used:    1
  5287 ;; Hardware stack levels required when called:    2
  5288 ;; This function calls:
  5289 ;;		_void_init_pin
  5290 ;; This function is called by:
  5291 ;;		_main
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           
  5295                           
  5296                           ;psect for function _void_init_actuators
  5297  0CD1                     _void_init_actuators:	
  5298  0CD1                     l3007:	
  5299                           ;incstack = 0
  5300                           ; Regs used in _void_init_actuators: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5301                           
  5302                           
  5303                           ;HAL/sensors_and_actuator.c: 14:    void_init_pin('c',2,1);
  5304  0CD1  3002               	movlw	2
  5305  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  5306  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  5307  0CD4  00A0               	movwf	??_void_init_actuators
  5308  0CD5  0820               	movf	??_void_init_actuators,w
  5309  0CD6  00F3               	movwf	void_init_pin@pinnumber
  5310  0CD7  01F4               	clrf	void_init_pin@dir
  5311  0CD8  0AF4               	incf	void_init_pin@dir,f
  5312  0CD9  3063               	movlw	99
  5313  0CDA  120A  118A  2328  120A  158A  	fcall	_void_init_pin
  5314                           
  5315                           ;HAL/sensors_and_actuator.c: 15:    void_init_pin('c',5,1);
  5316  0CDF  3005               	movlw	5
  5317  0CE0  1283               	bcf	3,5	;RP0=0, select bank0
  5318  0CE1  1303               	bcf	3,6	;RP1=0, select bank0
  5319  0CE2  00A0               	movwf	??_void_init_actuators
  5320  0CE3  0820               	movf	??_void_init_actuators,w
  5321  0CE4  00F3               	movwf	void_init_pin@pinnumber
  5322  0CE5  01F4               	clrf	void_init_pin@dir
  5323  0CE6  0AF4               	incf	void_init_pin@dir,f
  5324  0CE7  3063               	movlw	99
  5325  0CE8  120A  118A  2328  120A  158A  	fcall	_void_init_pin
  5326                           
  5327                           ;HAL/sensors_and_actuator.c: 16:    void_init_pin('c',0,1);
  5328  0CED  01F3               	clrf	void_init_pin@pinnumber
  5329  0CEE  01F4               	clrf	void_init_pin@dir
  5330  0CEF  0AF4               	incf	void_init_pin@dir,f
  5331  0CF0  3063               	movlw	99
  5332  0CF1  120A  118A  2328  120A  158A  	fcall	_void_init_pin
  5333                           
  5334                           ;HAL/sensors_and_actuator.c: 17:    void_init_pin('b',7,1);
  5335  0CF6  3007               	movlw	7
  5336  0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  5337  0CF8  1303               	bcf	3,6	;RP1=0, select bank0
  5338  0CF9  00A0               	movwf	??_void_init_actuators
  5339  0CFA  0820               	movf	??_void_init_actuators,w
  5340  0CFB  00F3               	movwf	void_init_pin@pinnumber
  5341  0CFC  01F4               	clrf	void_init_pin@dir
  5342  0CFD  0AF4               	incf	void_init_pin@dir,f
  5343  0CFE  3062               	movlw	98
  5344  0CFF  120A  118A  2328  120A  158A  	fcall	_void_init_pin
  5345  0D04                     l340:	
  5346  0D04  0008               	return
  5347  0D05                     __end_of_void_init_actuators:	
  5348                           
  5349                           	psect	text29
  5350  0328                     __ptext29:	
  5351 ;; *************** function _void_init_pin *****************
  5352 ;; Defined at:
  5353 ;;		line 6 in file "MCAL/DIO.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;  portname        1    wreg     unsigned char 
  5356 ;;  pinnumber       1    3[COMMON] unsigned char 
  5357 ;;  dir             1    4[COMMON] unsigned char 
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;  portname        1    7[COMMON] unsigned char 
  5360 ;; Return value:  Size  Location     Type
  5361 ;;                  1    wreg      void 
  5362 ;; Registers used:
  5363 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5364 ;; Tracked objects:
  5365 ;;		On entry : 0/0
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5369 ;;      Params:         2       0       0       0       0
  5370 ;;      Locals:         1       0       0       0       0
  5371 ;;      Temps:          2       0       0       0       0
  5372 ;;      Totals:         5       0       0       0       0
  5373 ;;Total ram usage:        5 bytes
  5374 ;; Hardware stack levels used:    1
  5375 ;; Hardware stack levels required when called:    1
  5376 ;; This function calls:
  5377 ;;		Nothing
  5378 ;; This function is called by:
  5379 ;;		_void_init_lcd
  5380 ;;		_void_init_keypad
  5381 ;;		_void_init_sensors
  5382 ;;		_void_init_actuators
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           
  5387                           ;psect for function _void_init_pin
  5388  0328                     _void_init_pin:	
  5389                           
  5390                           ;incstack = 0
  5391                           ; Regs used in _void_init_pin: [wreg-fsr0h+status,2+status,0]
  5392                           ;void_init_pin@portname stored from wreg
  5393  0328  00F7               	movwf	void_init_pin@portname
  5394  0329                     l2887:	
  5395                           
  5396                           ;MCAL/DIO.c: 6: void void_init_pin(char portname,char pinnumber , char dir);MCAL/DIO.c: 
      +                          7: {;MCAL/DIO.c: 8:         switch (portname)
  5397  0329  2BE8               	goto	l2921
  5398  032A                     l2889:	
  5399                           
  5400                           ;MCAL/DIO.c: 12:                 if (!dir)
  5401  032A  0874               	movf	void_init_pin@dir,w
  5402  032B  1D03               	btfss	3,2
  5403  032C  2B2E               	goto	u2781
  5404  032D  2B2F               	goto	u2780
  5405  032E                     u2781:	
  5406  032E  2B3F               	goto	l2893
  5407  032F                     u2780:	
  5408  032F                     l2891:	
  5409                           
  5410                           ;MCAL/DIO.c: 13:                         (TRISA |=(1<<pinnumber));
  5411  032F  3001               	movlw	1
  5412  0330  00F5               	movwf	??_void_init_pin
  5413  0331  0A73               	incf	void_init_pin@pinnumber,w
  5414  0332  2B35               	goto	u2794
  5415  0333                     u2795:	
  5416  0333  1003               	clrc
  5417  0334  0DF5               	rlf	??_void_init_pin,f
  5418  0335                     u2794:	
  5419  0335  3EFF               	addlw	-1
  5420  0336  1D03               	skipz
  5421  0337  2B33               	goto	u2795
  5422  0338  0875               	movf	??_void_init_pin,w
  5423  0339  00F6               	movwf	??_void_init_pin+1
  5424  033A  0876               	movf	??_void_init_pin+1,w
  5425  033B  1683               	bsf	3,5	;RP0=1, select bank1
  5426  033C  1303               	bcf	3,6	;RP1=0, select bank1
  5427  033D  0485               	iorwf	5,f	;volatile
  5428  033E  2C10               	goto	l165
  5429  033F                     l2893:	
  5430                           
  5431                           ;MCAL/DIO.c: 15:                         (TRISA &=~(1<<pinnumber));
  5432  033F  3001               	movlw	1
  5433  0340  00F5               	movwf	??_void_init_pin
  5434  0341  0A73               	incf	void_init_pin@pinnumber,w
  5435  0342  2B45               	goto	u2804
  5436  0343                     u2805:	
  5437  0343  1003               	clrc
  5438  0344  0DF5               	rlf	??_void_init_pin,f
  5439  0345                     u2804:	
  5440  0345  3EFF               	addlw	-1
  5441  0346  1D03               	skipz
  5442  0347  2B43               	goto	u2805
  5443  0348  0875               	movf	??_void_init_pin,w
  5444  0349  3AFF               	xorlw	255
  5445  034A  00F6               	movwf	??_void_init_pin+1
  5446  034B  0876               	movf	??_void_init_pin+1,w
  5447  034C  1683               	bsf	3,5	;RP0=1, select bank1
  5448  034D  1303               	bcf	3,6	;RP1=0, select bank1
  5449  034E  0585               	andwf	5,f	;volatile
  5450  034F  2C10               	goto	l165
  5451  0350                     l2895:	
  5452                           
  5453                           ;MCAL/DIO.c: 19:                 if (!dir)
  5454  0350  0874               	movf	void_init_pin@dir,w
  5455  0351  1D03               	btfss	3,2
  5456  0352  2B54               	goto	u2811
  5457  0353  2B55               	goto	u2810
  5458  0354                     u2811:	
  5459  0354  2B65               	goto	l2899
  5460  0355                     u2810:	
  5461  0355                     l2897:	
  5462                           
  5463                           ;MCAL/DIO.c: 20:                         (TRISB |=(1<<pinnumber));
  5464  0355  3001               	movlw	1
  5465  0356  00F5               	movwf	??_void_init_pin
  5466  0357  0A73               	incf	void_init_pin@pinnumber,w
  5467  0358  2B5B               	goto	u2824
  5468  0359                     u2825:	
  5469  0359  1003               	clrc
  5470  035A  0DF5               	rlf	??_void_init_pin,f
  5471  035B                     u2824:	
  5472  035B  3EFF               	addlw	-1
  5473  035C  1D03               	skipz
  5474  035D  2B59               	goto	u2825
  5475  035E  0875               	movf	??_void_init_pin,w
  5476  035F  00F6               	movwf	??_void_init_pin+1
  5477  0360  0876               	movf	??_void_init_pin+1,w
  5478  0361  1683               	bsf	3,5	;RP0=1, select bank1
  5479  0362  1303               	bcf	3,6	;RP1=0, select bank1
  5480  0363  0486               	iorwf	6,f	;volatile
  5481  0364  2C10               	goto	l165
  5482  0365                     l2899:	
  5483                           
  5484                           ;MCAL/DIO.c: 22:                         (TRISB &=~(1<<pinnumber));
  5485  0365  3001               	movlw	1
  5486  0366  00F5               	movwf	??_void_init_pin
  5487  0367  0A73               	incf	void_init_pin@pinnumber,w
  5488  0368  2B6B               	goto	u2834
  5489  0369                     u2835:	
  5490  0369  1003               	clrc
  5491  036A  0DF5               	rlf	??_void_init_pin,f
  5492  036B                     u2834:	
  5493  036B  3EFF               	addlw	-1
  5494  036C  1D03               	skipz
  5495  036D  2B69               	goto	u2835
  5496  036E  0875               	movf	??_void_init_pin,w
  5497  036F  3AFF               	xorlw	255
  5498  0370  00F6               	movwf	??_void_init_pin+1
  5499  0371  0876               	movf	??_void_init_pin+1,w
  5500  0372  1683               	bsf	3,5	;RP0=1, select bank1
  5501  0373  1303               	bcf	3,6	;RP1=0, select bank1
  5502  0374  0586               	andwf	6,f	;volatile
  5503  0375  2C10               	goto	l165
  5504  0376                     l2901:	
  5505                           
  5506                           ;MCAL/DIO.c: 26:                 if (!dir)
  5507  0376  0874               	movf	void_init_pin@dir,w
  5508  0377  1D03               	btfss	3,2
  5509  0378  2B7A               	goto	u2841
  5510  0379  2B7B               	goto	u2840
  5511  037A                     u2841:	
  5512  037A  2B8B               	goto	l2905
  5513  037B                     u2840:	
  5514  037B                     l2903:	
  5515                           
  5516                           ;MCAL/DIO.c: 27:                         (TRISC |=(1<<pinnumber));
  5517  037B  3001               	movlw	1
  5518  037C  00F5               	movwf	??_void_init_pin
  5519  037D  0A73               	incf	void_init_pin@pinnumber,w
  5520  037E  2B81               	goto	u2854
  5521  037F                     u2855:	
  5522  037F  1003               	clrc
  5523  0380  0DF5               	rlf	??_void_init_pin,f
  5524  0381                     u2854:	
  5525  0381  3EFF               	addlw	-1
  5526  0382  1D03               	skipz
  5527  0383  2B7F               	goto	u2855
  5528  0384  0875               	movf	??_void_init_pin,w
  5529  0385  00F6               	movwf	??_void_init_pin+1
  5530  0386  0876               	movf	??_void_init_pin+1,w
  5531  0387  1683               	bsf	3,5	;RP0=1, select bank1
  5532  0388  1303               	bcf	3,6	;RP1=0, select bank1
  5533  0389  0487               	iorwf	7,f	;volatile
  5534  038A  2C10               	goto	l165
  5535  038B                     l2905:	
  5536                           
  5537                           ;MCAL/DIO.c: 29:                         (TRISC &=~(1<<pinnumber));
  5538  038B  3001               	movlw	1
  5539  038C  00F5               	movwf	??_void_init_pin
  5540  038D  0A73               	incf	void_init_pin@pinnumber,w
  5541  038E  2B91               	goto	u2864
  5542  038F                     u2865:	
  5543  038F  1003               	clrc
  5544  0390  0DF5               	rlf	??_void_init_pin,f
  5545  0391                     u2864:	
  5546  0391  3EFF               	addlw	-1
  5547  0392  1D03               	skipz
  5548  0393  2B8F               	goto	u2865
  5549  0394  0875               	movf	??_void_init_pin,w
  5550  0395  3AFF               	xorlw	255
  5551  0396  00F6               	movwf	??_void_init_pin+1
  5552  0397  0876               	movf	??_void_init_pin+1,w
  5553  0398  1683               	bsf	3,5	;RP0=1, select bank1
  5554  0399  1303               	bcf	3,6	;RP1=0, select bank1
  5555  039A  0587               	andwf	7,f	;volatile
  5556  039B  2C10               	goto	l165
  5557  039C                     l2907:	
  5558                           
  5559                           ;MCAL/DIO.c: 33:                 if (!dir)
  5560  039C  0874               	movf	void_init_pin@dir,w
  5561  039D  1D03               	btfss	3,2
  5562  039E  2BA0               	goto	u2871
  5563  039F  2BA1               	goto	u2870
  5564  03A0                     u2871:	
  5565  03A0  2BB1               	goto	l2911
  5566  03A1                     u2870:	
  5567  03A1                     l2909:	
  5568                           
  5569                           ;MCAL/DIO.c: 34:                         (TRISD |=(1<<pinnumber));
  5570  03A1  3001               	movlw	1
  5571  03A2  00F5               	movwf	??_void_init_pin
  5572  03A3  0A73               	incf	void_init_pin@pinnumber,w
  5573  03A4  2BA7               	goto	u2884
  5574  03A5                     u2885:	
  5575  03A5  1003               	clrc
  5576  03A6  0DF5               	rlf	??_void_init_pin,f
  5577  03A7                     u2884:	
  5578  03A7  3EFF               	addlw	-1
  5579  03A8  1D03               	skipz
  5580  03A9  2BA5               	goto	u2885
  5581  03AA  0875               	movf	??_void_init_pin,w
  5582  03AB  00F6               	movwf	??_void_init_pin+1
  5583  03AC  0876               	movf	??_void_init_pin+1,w
  5584  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  5585  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  5586  03AF  0488               	iorwf	8,f	;volatile
  5587  03B0  2C10               	goto	l165
  5588  03B1                     l2911:	
  5589                           
  5590                           ;MCAL/DIO.c: 36:                         (TRISD &=~(1<<pinnumber));
  5591  03B1  3001               	movlw	1
  5592  03B2  00F5               	movwf	??_void_init_pin
  5593  03B3  0A73               	incf	void_init_pin@pinnumber,w
  5594  03B4  2BB7               	goto	u2894
  5595  03B5                     u2895:	
  5596  03B5  1003               	clrc
  5597  03B6  0DF5               	rlf	??_void_init_pin,f
  5598  03B7                     u2894:	
  5599  03B7  3EFF               	addlw	-1
  5600  03B8  1D03               	skipz
  5601  03B9  2BB5               	goto	u2895
  5602  03BA  0875               	movf	??_void_init_pin,w
  5603  03BB  3AFF               	xorlw	255
  5604  03BC  00F6               	movwf	??_void_init_pin+1
  5605  03BD  0876               	movf	??_void_init_pin+1,w
  5606  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  5607  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  5608  03C0  0588               	andwf	8,f	;volatile
  5609  03C1  2C10               	goto	l165
  5610  03C2                     l2913:	
  5611                           
  5612                           ;MCAL/DIO.c: 40:                 if (!dir)
  5613  03C2  0874               	movf	void_init_pin@dir,w
  5614  03C3  1D03               	btfss	3,2
  5615  03C4  2BC6               	goto	u2901
  5616  03C5  2BC7               	goto	u2900
  5617  03C6                     u2901:	
  5618  03C6  2BD7               	goto	l2917
  5619  03C7                     u2900:	
  5620  03C7                     l2915:	
  5621                           
  5622                           ;MCAL/DIO.c: 41:                         (TRISE |=(1<<pinnumber));
  5623  03C7  3001               	movlw	1
  5624  03C8  00F5               	movwf	??_void_init_pin
  5625  03C9  0A73               	incf	void_init_pin@pinnumber,w
  5626  03CA  2BCD               	goto	u2914
  5627  03CB                     u2915:	
  5628  03CB  1003               	clrc
  5629  03CC  0DF5               	rlf	??_void_init_pin,f
  5630  03CD                     u2914:	
  5631  03CD  3EFF               	addlw	-1
  5632  03CE  1D03               	skipz
  5633  03CF  2BCB               	goto	u2915
  5634  03D0  0875               	movf	??_void_init_pin,w
  5635  03D1  00F6               	movwf	??_void_init_pin+1
  5636  03D2  0876               	movf	??_void_init_pin+1,w
  5637  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  5638  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  5639  03D5  0489               	iorwf	9,f	;volatile
  5640  03D6  2C10               	goto	l165
  5641  03D7                     l2917:	
  5642                           
  5643                           ;MCAL/DIO.c: 43:                         (TRISE &=~(1<<pinnumber));
  5644  03D7  3001               	movlw	1
  5645  03D8  00F5               	movwf	??_void_init_pin
  5646  03D9  0A73               	incf	void_init_pin@pinnumber,w
  5647  03DA  2BDD               	goto	u2924
  5648  03DB                     u2925:	
  5649  03DB  1003               	clrc
  5650  03DC  0DF5               	rlf	??_void_init_pin,f
  5651  03DD                     u2924:	
  5652  03DD  3EFF               	addlw	-1
  5653  03DE  1D03               	skipz
  5654  03DF  2BDB               	goto	u2925
  5655  03E0  0875               	movf	??_void_init_pin,w
  5656  03E1  3AFF               	xorlw	255
  5657  03E2  00F6               	movwf	??_void_init_pin+1
  5658  03E3  0876               	movf	??_void_init_pin+1,w
  5659  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  5660  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  5661  03E6  0589               	andwf	9,f	;volatile
  5662  03E7  2C10               	goto	l165
  5663  03E8                     l2921:	
  5664  03E8  0877               	movf	void_init_pin@portname,w
  5665  03E9  00F5               	movwf	??_void_init_pin
  5666  03EA  01F6               	clrf	??_void_init_pin+1
  5667                           
  5668                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5669                           ; Switch size 1, requested type "simple"
  5670                           ; Number of cases is 1, Range of values is 0 to 0
  5671                           ; switch strategies available:
  5672                           ; Name         Instructions Cycles
  5673                           ; simple_byte            4     3 (average)
  5674                           ; direct_byte           11     8 (fixed)
  5675                           ; jumptable            260     6 (fixed)
  5676                           ;	Chosen strategy is simple_byte
  5677  03EB  0876               	movf	??_void_init_pin+1,w
  5678  03EC  3A00               	xorlw	0	; case 0
  5679  03ED  1903               	skipnz
  5680  03EE  2BF0               	goto	l3323
  5681  03EF  2C10               	goto	l165
  5682  03F0                     l3323:	
  5683                           
  5684                           ; Switch size 1, requested type "simple"
  5685                           ; Number of cases is 10, Range of values is 65 to 101
  5686                           ; switch strategies available:
  5687                           ; Name         Instructions Cycles
  5688                           ; simple_byte           31    16 (average)
  5689                           ; direct_byte          122    11 (fixed)
  5690                           ; jumptable            263     9 (fixed)
  5691                           ;	Chosen strategy is simple_byte
  5692  03F0  0875               	movf	??_void_init_pin,w
  5693  03F1  3A41               	xorlw	65	; case 65
  5694  03F2  1903               	skipnz
  5695  03F3  2B2A               	goto	l2889
  5696  03F4  3A03               	xorlw	3	; case 66
  5697  03F5  1903               	skipnz
  5698  03F6  2B50               	goto	l2895
  5699  03F7  3A01               	xorlw	1	; case 67
  5700  03F8  1903               	skipnz
  5701  03F9  2B76               	goto	l2901
  5702  03FA  3A07               	xorlw	7	; case 68
  5703  03FB  1903               	skipnz
  5704  03FC  2B9C               	goto	l2907
  5705  03FD  3A01               	xorlw	1	; case 69
  5706  03FE  1903               	skipnz
  5707  03FF  2BC2               	goto	l2913
  5708  0400  3A24               	xorlw	36	; case 97
  5709  0401  1903               	skipnz
  5710  0402  2B2A               	goto	l2889
  5711  0403  3A03               	xorlw	3	; case 98
  5712  0404  1903               	skipnz
  5713  0405  2B50               	goto	l2895
  5714  0406  3A01               	xorlw	1	; case 99
  5715  0407  1903               	skipnz
  5716  0408  2B76               	goto	l2901
  5717  0409  3A07               	xorlw	7	; case 100
  5718  040A  1903               	skipnz
  5719  040B  2B9C               	goto	l2907
  5720  040C  3A01               	xorlw	1	; case 101
  5721  040D  1903               	skipnz
  5722  040E  2BC2               	goto	l2913
  5723  040F  2C10               	goto	l165
  5724  0410                     l165:	
  5725  0410  0008               	return
  5726  0411                     __end_of_void_init_pin:	
  5727                           
  5728                           	psect	text30
  5729  0AF7                     __ptext30:	
  5730 ;; *************** function _void_door *****************
  5731 ;; Defined at:
  5732 ;;		line 43 in file "HAL/sensors_and_actuator.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;		None
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;		None
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  1    wreg      void 
  5739 ;; Registers used:
  5740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5746 ;;      Params:         0       0       0       0       0
  5747 ;;      Locals:         0       0       0       0       0
  5748 ;;      Temps:          1       0       0       0       0
  5749 ;;      Totals:         1       0       0       0       0
  5750 ;;Total ram usage:        1 bytes
  5751 ;; Hardware stack levels used:    1
  5752 ;; Hardware stack levels required when called:    2
  5753 ;; This function calls:
  5754 ;;		_char_read_pin
  5755 ;; This function is called by:
  5756 ;;		_main
  5757 ;; This function uses a non-reentrant model
  5758 ;;
  5759                           
  5760                           
  5761                           ;psect for function _void_door
  5762  0AF7                     _void_door:	
  5763  0AF7                     l2293:	
  5764                           ;incstack = 0
  5765                           ; Regs used in _void_door: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5766                           
  5767                           
  5768                           ;HAL/sensors_and_actuator.c: 45:     if (!char_read_pin('b',5))
  5769  0AF7  3005               	movlw	5
  5770  0AF8  00F7               	movwf	??_void_door
  5771  0AF9  0877               	movf	??_void_door,w
  5772  0AFA  00F3               	movwf	char_read_pin@pinnumber
  5773  0AFB  3062               	movlw	98
  5774  0AFC  120A  158A  27A2  120A  158A  	fcall	_char_read_pin
  5775  0B01  3A00               	xorlw	0
  5776  0B02  1D03               	skipz
  5777  0B03  2B05               	goto	u2051
  5778  0B04  2B06               	goto	u2050
  5779  0B05                     u2051:	
  5780  0B05  2B10               	goto	l350
  5781  0B06                     u2050:	
  5782  0B06                     l2295:	
  5783                           
  5784                           ;HAL/sensors_and_actuator.c: 46:     {;HAL/sensors_and_actuator.c: 47:         door_flag
      +                           = !door_flag;
  5785  0B06  087A               	movf	_door_flag,w
  5786  0B07  1903               	btfsc	3,2
  5787  0B08  2B0A               	goto	u2061
  5788  0B09  2B0C               	goto	u2060
  5789  0B0A                     u2061:	
  5790  0B0A  3001               	movlw	1
  5791  0B0B  2B0D               	goto	u2070
  5792  0B0C                     u2060:	
  5793  0B0C  3000               	movlw	0
  5794  0B0D                     u2070:	
  5795  0B0D  00F7               	movwf	??_void_door
  5796  0B0E  0877               	movf	??_void_door,w
  5797  0B0F  00FA               	movwf	_door_flag
  5798  0B10                     l350:	
  5799  0B10  0008               	return
  5800  0B11                     __end_of_void_door:	
  5801                           
  5802                           	psect	text31
  5803  05B1                     __ptext31:	
  5804 ;; *************** function _key_read_keypad *****************
  5805 ;; Defined at:
  5806 ;;		line 76 in file "HAL/Keypad.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;		None
  5809 ;; Auto vars:     Size  Location     Type
  5810 ;;  k               2   11[BANK0 ] struct .
  5811 ;;  c               2    9[BANK0 ] int 
  5812 ;;  r               2    7[BANK0 ] int 
  5813 ;; Return value:  Size  Location     Type
  5814 ;;                  2    4[BANK0 ] struct .
  5815 ;; Registers used:
  5816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5817 ;; Tracked objects:
  5818 ;;		On entry : 0/0
  5819 ;;		On exit  : 0/0
  5820 ;;		Unchanged: 0/0
  5821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5822 ;;      Params:         0       2       0       0       0
  5823 ;;      Locals:         0       6       0       0       0
  5824 ;;      Temps:          0       1       0       0       0
  5825 ;;      Totals:         0       9       0       0       0
  5826 ;;Total ram usage:        9 bytes
  5827 ;; Hardware stack levels used:    1
  5828 ;; Hardware stack levels required when called:    2
  5829 ;; This function calls:
  5830 ;;		_char_read_pin
  5831 ;;		_delay_msk
  5832 ;;		_void_write_pin
  5833 ;; This function is called by:
  5834 ;;		_main
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           
  5839                           ;psect for function _key_read_keypad
  5840  05B1                     _key_read_keypad:	
  5841  05B1                     l3099:	
  5842                           ;incstack = 0
  5843                           ; Regs used in _key_read_keypad: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5844                           
  5845                           
  5846                           ;HAL/Keypad.c: 78: key k;;HAL/Keypad.c: 79: int r,c;;HAL/Keypad.c: 81: for ( c=0 ; c<(n-
      +                          1);c++)
  5847  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  5848  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  5849  05B3  01A9               	clrf	key_read_keypad@c
  5850  05B4  01AA               	clrf	key_read_keypad@c+1
  5851  05B5  2E28               	goto	l3125
  5852  05B6                     l3101:	
  5853                           
  5854                           ;HAL/Keypad.c: 82: {;HAL/Keypad.c: 83:  void_write_pin('b',columns[c],0);
  5855  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  5856  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  5857  05B8  0829               	movf	key_read_keypad@c,w
  5858  05B9  3E6A               	addlw	(low (_columns| 0))& (0+255)
  5859  05BA  0084               	movwf	4
  5860  05BB  1383               	bcf	3,7	;select IRP bank0
  5861  05BC  0800               	movf	0,w
  5862  05BD  00A6               	movwf	??_key_read_keypad
  5863  05BE  0826               	movf	??_key_read_keypad,w
  5864  05BF  00F3               	movwf	void_write_pin@pinnumber
  5865  05C0  01F4               	clrf	void_write_pin@state
  5866  05C1  3062               	movlw	98
  5867  05C2  120A  118A  2411  120A  118A  	fcall	_void_write_pin
  5868  05C7                     l3103:	
  5869                           
  5870                           ;HAL/Keypad.c: 85:  for ( r=0 ;r<n;r++)
  5871  05C7  1283               	bcf	3,5	;RP0=0, select bank0
  5872  05C8  1303               	bcf	3,6	;RP1=0, select bank0
  5873  05C9  01A7               	clrf	key_read_keypad@r
  5874  05CA  01A8               	clrf	key_read_keypad@r+1
  5875  05CB  2E01               	goto	l3119
  5876  05CC                     l3105:	
  5877                           
  5878                           ;HAL/Keypad.c: 86:   {;HAL/Keypad.c: 88:   if (!char_read_pin('d',rows[r]))
  5879  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  5880  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  5881  05CE  0827               	movf	key_read_keypad@r,w
  5882  05CF  3E66               	addlw	(low (_rows| 0))& (0+255)
  5883  05D0  0084               	movwf	4
  5884  05D1  1383               	bcf	3,7	;select IRP bank0
  5885  05D2  0800               	movf	0,w
  5886  05D3  00A6               	movwf	??_key_read_keypad
  5887  05D4  0826               	movf	??_key_read_keypad,w
  5888  05D5  00F3               	movwf	char_read_pin@pinnumber
  5889  05D6  3064               	movlw	100
  5890  05D7  120A  158A  27A2  120A  118A  	fcall	_char_read_pin
  5891  05DC  3A00               	xorlw	0
  5892  05DD  1D03               	skipz
  5893  05DE  2DE0               	goto	u3131
  5894  05DF  2DE1               	goto	u3130
  5895  05E0                     u3131:	
  5896  05E0  2DF9               	goto	l3117
  5897  05E1                     u3130:	
  5898  05E1                     l3107:	
  5899                           
  5900                           ;HAL/Keypad.c: 89:   {;HAL/Keypad.c: 91:             delay_msk(50);
  5901  05E1  3032               	movlw	50
  5902  05E2  00F3               	movwf	delay_msk@ms_Count
  5903  05E3  3000               	movlw	0
  5904  05E4  00F4               	movwf	delay_msk@ms_Count+1
  5905  05E5  120A  158A  239B  120A  118A  	fcall	_delay_msk
  5906  05EA                     l3109:	
  5907                           
  5908                           ;HAL/Keypad.c: 94:    k.x=r;
  5909  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  5910  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  5911  05EC  0827               	movf	key_read_keypad@r,w
  5912  05ED  00A6               	movwf	??_key_read_keypad
  5913  05EE  0826               	movf	??_key_read_keypad,w
  5914  05EF  00AB               	movwf	key_read_keypad@k
  5915  05F0                     l3111:	
  5916                           
  5917                           ;HAL/Keypad.c: 95:    k.y=c;
  5918  05F0  0829               	movf	key_read_keypad@c,w
  5919  05F1  00A6               	movwf	??_key_read_keypad
  5920  05F2  0826               	movf	??_key_read_keypad,w
  5921  05F3  00AC               	movwf	key_read_keypad@k+1
  5922  05F4                     l3113:	
  5923                           
  5924                           ;HAL/Keypad.c: 96:    return k;
  5925  05F4  082C               	movf	key_read_keypad@k+1,w
  5926  05F5  00A5               	movwf	?_key_read_keypad+1
  5927  05F6  082B               	movf	key_read_keypad@k,w
  5928  05F7  00A4               	movwf	?_key_read_keypad
  5929  05F8  2E43               	goto	l310
  5930  05F9                     l3117:	
  5931                           
  5932                           ;HAL/Keypad.c: 102:   }
  5933  05F9  3001               	movlw	1
  5934  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  5935  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  5936  05FC  07A7               	addwf	key_read_keypad@r,f
  5937  05FD  1803               	skipnc
  5938  05FE  0AA8               	incf	key_read_keypad@r+1,f
  5939  05FF  3000               	movlw	0
  5940  0600  07A8               	addwf	key_read_keypad@r+1,f
  5941  0601                     l3119:	
  5942  0601  0828               	movf	key_read_keypad@r+1,w
  5943  0602  3A80               	xorlw	128
  5944  0603  00FF               	movwf	btemp+1
  5945  0604  3080               	movlw	128
  5946  0605  027F               	subwf	btemp+1,w
  5947  0606  1D03               	skipz
  5948  0607  2E0A               	goto	u3145
  5949  0608  3004               	movlw	4
  5950  0609  0227               	subwf	key_read_keypad@r,w
  5951  060A                     u3145:	
  5952  060A  1C03               	skipc
  5953  060B  2E0D               	goto	u3141
  5954  060C  2E0E               	goto	u3140
  5955  060D                     u3141:	
  5956  060D  2DCC               	goto	l3105
  5957  060E                     u3140:	
  5958  060E                     l3121:	
  5959                           
  5960                           ;HAL/Keypad.c: 103:     void_write_pin('b',columns[c],1);
  5961  060E  1283               	bcf	3,5	;RP0=0, select bank0
  5962  060F  1303               	bcf	3,6	;RP1=0, select bank0
  5963  0610  0829               	movf	key_read_keypad@c,w
  5964  0611  3E6A               	addlw	(low (_columns| 0))& (0+255)
  5965  0612  0084               	movwf	4
  5966  0613  1383               	bcf	3,7	;select IRP bank0
  5967  0614  0800               	movf	0,w
  5968  0615  00A6               	movwf	??_key_read_keypad
  5969  0616  0826               	movf	??_key_read_keypad,w
  5970  0617  00F3               	movwf	void_write_pin@pinnumber
  5971  0618  01F4               	clrf	void_write_pin@state
  5972  0619  0AF4               	incf	void_write_pin@state,f
  5973  061A  3062               	movlw	98
  5974  061B  120A  118A  2411  120A  118A  	fcall	_void_write_pin
  5975  0620                     l3123:	
  5976                           
  5977                           ;HAL/Keypad.c: 108: }
  5978  0620  3001               	movlw	1
  5979  0621  1283               	bcf	3,5	;RP0=0, select bank0
  5980  0622  1303               	bcf	3,6	;RP1=0, select bank0
  5981  0623  07A9               	addwf	key_read_keypad@c,f
  5982  0624  1803               	skipnc
  5983  0625  0AAA               	incf	key_read_keypad@c+1,f
  5984  0626  3000               	movlw	0
  5985  0627  07AA               	addwf	key_read_keypad@c+1,f
  5986  0628                     l3125:	
  5987  0628  082A               	movf	key_read_keypad@c+1,w
  5988  0629  3A80               	xorlw	128
  5989  062A  00FF               	movwf	btemp+1
  5990  062B  3080               	movlw	128
  5991  062C  027F               	subwf	btemp+1,w
  5992  062D  1D03               	skipz
  5993  062E  2E31               	goto	u3155
  5994  062F  3003               	movlw	3
  5995  0630  0229               	subwf	key_read_keypad@c,w
  5996  0631                     u3155:	
  5997  0631  1C03               	skipc
  5998  0632  2E34               	goto	u3151
  5999  0633  2E35               	goto	u3150
  6000  0634                     u3151:	
  6001  0634  2DB6               	goto	l3101
  6002  0635                     u3150:	
  6003  0635                     l3127:	
  6004                           
  6005                           ;HAL/Keypad.c: 109: k.x=5;
  6006  0635  3005               	movlw	5
  6007  0636  1283               	bcf	3,5	;RP0=0, select bank0
  6008  0637  1303               	bcf	3,6	;RP1=0, select bank0
  6009  0638  00A6               	movwf	??_key_read_keypad
  6010  0639  0826               	movf	??_key_read_keypad,w
  6011  063A  00AB               	movwf	key_read_keypad@k
  6012                           
  6013                           ;HAL/Keypad.c: 110: k.y=5;
  6014  063B  3005               	movlw	5
  6015  063C  00A6               	movwf	??_key_read_keypad
  6016  063D  0826               	movf	??_key_read_keypad,w
  6017  063E  00AC               	movwf	key_read_keypad@k+1
  6018                           
  6019                           ;HAL/Keypad.c: 111: return k;
  6020  063F  082C               	movf	key_read_keypad@k+1,w
  6021  0640  00A5               	movwf	?_key_read_keypad+1
  6022  0641  082B               	movf	key_read_keypad@k,w
  6023  0642  00A4               	movwf	?_key_read_keypad
  6024  0643                     l310:	
  6025  0643  0008               	return
  6026  0644                     __end_of_key_read_keypad:	
  6027                           
  6028                           	psect	text32
  6029  0411                     __ptext32:	
  6030 ;; *************** function _void_write_pin *****************
  6031 ;; Defined at:
  6032 ;;		line 50 in file "MCAL/DIO.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;  portname        1    wreg     unsigned char 
  6035 ;;  pinnumber       1    3[COMMON] unsigned char 
  6036 ;;  state           1    4[COMMON] unsigned char 
  6037 ;; Auto vars:     Size  Location     Type
  6038 ;;  portname        1    7[COMMON] unsigned char 
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  1    wreg      void 
  6041 ;; Registers used:
  6042 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6048 ;;      Params:         2       0       0       0       0
  6049 ;;      Locals:         1       0       0       0       0
  6050 ;;      Temps:          2       0       0       0       0
  6051 ;;      Totals:         5       0       0       0       0
  6052 ;;Total ram usage:        5 bytes
  6053 ;; Hardware stack levels used:    1
  6054 ;; Hardware stack levels required when called:    1
  6055 ;; This function calls:
  6056 ;;		Nothing
  6057 ;; This function is called by:
  6058 ;;		_void_lcd_send_command
  6059 ;;		_void_lcd_send_data
  6060 ;;		_void_pulse
  6061 ;;		_void_LCD_init_Command
  6062 ;;		_void_init_keypad
  6063 ;;		_key_read_keypad
  6064 ;;		_void_start_heating
  6065 ;;		_void_stop_heating
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           
  6070                           ;psect for function _void_write_pin
  6071  0411                     _void_write_pin:	
  6072                           
  6073                           ;incstack = 0
  6074                           ; Regs used in _void_write_pin: [wreg-fsr0h+status,2+status,0]
  6075                           ;void_write_pin@portname stored from wreg
  6076  0411  00F7               	movwf	void_write_pin@portname
  6077  0412                     l2639:	
  6078                           
  6079                           ;MCAL/DIO.c: 50: void void_write_pin(char portname,char pinnumber , char state);MCAL/DIO
      +                          .c: 51: {;MCAL/DIO.c: 54:         switch (portname)
  6080  0412  2CD1               	goto	l2673
  6081  0413                     l2641:	
  6082                           
  6083                           ;MCAL/DIO.c: 58:                 if (state)
  6084  0413  0874               	movf	void_write_pin@state,w
  6085  0414  1903               	btfsc	3,2
  6086  0415  2C17               	goto	u2331
  6087  0416  2C18               	goto	u2330
  6088  0417                     u2331:	
  6089  0417  2C28               	goto	l2645
  6090  0418                     u2330:	
  6091  0418                     l2643:	
  6092                           
  6093                           ;MCAL/DIO.c: 59:                         (PORTA |=(1<<pinnumber));
  6094  0418  3001               	movlw	1
  6095  0419  00F5               	movwf	??_void_write_pin
  6096  041A  0A73               	incf	void_write_pin@pinnumber,w
  6097  041B  2C1E               	goto	u2344
  6098  041C                     u2345:	
  6099  041C  1003               	clrc
  6100  041D  0DF5               	rlf	??_void_write_pin,f
  6101  041E                     u2344:	
  6102  041E  3EFF               	addlw	-1
  6103  041F  1D03               	skipz
  6104  0420  2C1C               	goto	u2345
  6105  0421  0875               	movf	??_void_write_pin,w
  6106  0422  00F6               	movwf	??_void_write_pin+1
  6107  0423  0876               	movf	??_void_write_pin+1,w
  6108  0424  1283               	bcf	3,5	;RP0=0, select bank0
  6109  0425  1303               	bcf	3,6	;RP1=0, select bank0
  6110  0426  0485               	iorwf	5,f	;volatile
  6111  0427  2CF9               	goto	l190
  6112  0428                     l2645:	
  6113                           
  6114                           ;MCAL/DIO.c: 61:                         (PORTA &=~(1<<pinnumber));
  6115  0428  3001               	movlw	1
  6116  0429  00F5               	movwf	??_void_write_pin
  6117  042A  0A73               	incf	void_write_pin@pinnumber,w
  6118  042B  2C2E               	goto	u2354
  6119  042C                     u2355:	
  6120  042C  1003               	clrc
  6121  042D  0DF5               	rlf	??_void_write_pin,f
  6122  042E                     u2354:	
  6123  042E  3EFF               	addlw	-1
  6124  042F  1D03               	skipz
  6125  0430  2C2C               	goto	u2355
  6126  0431  0875               	movf	??_void_write_pin,w
  6127  0432  3AFF               	xorlw	255
  6128  0433  00F6               	movwf	??_void_write_pin+1
  6129  0434  0876               	movf	??_void_write_pin+1,w
  6130  0435  1283               	bcf	3,5	;RP0=0, select bank0
  6131  0436  1303               	bcf	3,6	;RP1=0, select bank0
  6132  0437  0585               	andwf	5,f	;volatile
  6133  0438  2CF9               	goto	l190
  6134  0439                     l2647:	
  6135                           
  6136                           ;MCAL/DIO.c: 65:                 if (state)
  6137  0439  0874               	movf	void_write_pin@state,w
  6138  043A  1903               	btfsc	3,2
  6139  043B  2C3D               	goto	u2361
  6140  043C  2C3E               	goto	u2360
  6141  043D                     u2361:	
  6142  043D  2C4E               	goto	l2651
  6143  043E                     u2360:	
  6144  043E                     l2649:	
  6145                           
  6146                           ;MCAL/DIO.c: 66:                         (PORTB |=(1<<pinnumber));
  6147  043E  3001               	movlw	1
  6148  043F  00F5               	movwf	??_void_write_pin
  6149  0440  0A73               	incf	void_write_pin@pinnumber,w
  6150  0441  2C44               	goto	u2374
  6151  0442                     u2375:	
  6152  0442  1003               	clrc
  6153  0443  0DF5               	rlf	??_void_write_pin,f
  6154  0444                     u2374:	
  6155  0444  3EFF               	addlw	-1
  6156  0445  1D03               	skipz
  6157  0446  2C42               	goto	u2375
  6158  0447  0875               	movf	??_void_write_pin,w
  6159  0448  00F6               	movwf	??_void_write_pin+1
  6160  0449  0876               	movf	??_void_write_pin+1,w
  6161  044A  1283               	bcf	3,5	;RP0=0, select bank0
  6162  044B  1303               	bcf	3,6	;RP1=0, select bank0
  6163  044C  0486               	iorwf	6,f	;volatile
  6164  044D  2CF9               	goto	l190
  6165  044E                     l2651:	
  6166                           
  6167                           ;MCAL/DIO.c: 68:                         (PORTB &=~(1<<pinnumber));
  6168  044E  3001               	movlw	1
  6169  044F  00F5               	movwf	??_void_write_pin
  6170  0450  0A73               	incf	void_write_pin@pinnumber,w
  6171  0451  2C54               	goto	u2384
  6172  0452                     u2385:	
  6173  0452  1003               	clrc
  6174  0453  0DF5               	rlf	??_void_write_pin,f
  6175  0454                     u2384:	
  6176  0454  3EFF               	addlw	-1
  6177  0455  1D03               	skipz
  6178  0456  2C52               	goto	u2385
  6179  0457  0875               	movf	??_void_write_pin,w
  6180  0458  3AFF               	xorlw	255
  6181  0459  00F6               	movwf	??_void_write_pin+1
  6182  045A  0876               	movf	??_void_write_pin+1,w
  6183  045B  1283               	bcf	3,5	;RP0=0, select bank0
  6184  045C  1303               	bcf	3,6	;RP1=0, select bank0
  6185  045D  0586               	andwf	6,f	;volatile
  6186  045E  2CF9               	goto	l190
  6187  045F                     l2653:	
  6188                           
  6189                           ;MCAL/DIO.c: 72:                 if (state)
  6190  045F  0874               	movf	void_write_pin@state,w
  6191  0460  1903               	btfsc	3,2
  6192  0461  2C63               	goto	u2391
  6193  0462  2C64               	goto	u2390
  6194  0463                     u2391:	
  6195  0463  2C74               	goto	l2657
  6196  0464                     u2390:	
  6197  0464                     l2655:	
  6198                           
  6199                           ;MCAL/DIO.c: 73:                         (PORTC |=(1<<pinnumber));
  6200  0464  3001               	movlw	1
  6201  0465  00F5               	movwf	??_void_write_pin
  6202  0466  0A73               	incf	void_write_pin@pinnumber,w
  6203  0467  2C6A               	goto	u2404
  6204  0468                     u2405:	
  6205  0468  1003               	clrc
  6206  0469  0DF5               	rlf	??_void_write_pin,f
  6207  046A                     u2404:	
  6208  046A  3EFF               	addlw	-1
  6209  046B  1D03               	skipz
  6210  046C  2C68               	goto	u2405
  6211  046D  0875               	movf	??_void_write_pin,w
  6212  046E  00F6               	movwf	??_void_write_pin+1
  6213  046F  0876               	movf	??_void_write_pin+1,w
  6214  0470  1283               	bcf	3,5	;RP0=0, select bank0
  6215  0471  1303               	bcf	3,6	;RP1=0, select bank0
  6216  0472  0487               	iorwf	7,f	;volatile
  6217  0473  2CF9               	goto	l190
  6218  0474                     l2657:	
  6219                           
  6220                           ;MCAL/DIO.c: 75:                         (PORTC &=~(1<<pinnumber));
  6221  0474  3001               	movlw	1
  6222  0475  00F5               	movwf	??_void_write_pin
  6223  0476  0A73               	incf	void_write_pin@pinnumber,w
  6224  0477  2C7A               	goto	u2414
  6225  0478                     u2415:	
  6226  0478  1003               	clrc
  6227  0479  0DF5               	rlf	??_void_write_pin,f
  6228  047A                     u2414:	
  6229  047A  3EFF               	addlw	-1
  6230  047B  1D03               	skipz
  6231  047C  2C78               	goto	u2415
  6232  047D  0875               	movf	??_void_write_pin,w
  6233  047E  3AFF               	xorlw	255
  6234  047F  00F6               	movwf	??_void_write_pin+1
  6235  0480  0876               	movf	??_void_write_pin+1,w
  6236  0481  1283               	bcf	3,5	;RP0=0, select bank0
  6237  0482  1303               	bcf	3,6	;RP1=0, select bank0
  6238  0483  0587               	andwf	7,f	;volatile
  6239  0484  2CF9               	goto	l190
  6240  0485                     l2659:	
  6241                           
  6242                           ;MCAL/DIO.c: 79:                 if (state)
  6243  0485  0874               	movf	void_write_pin@state,w
  6244  0486  1903               	btfsc	3,2
  6245  0487  2C89               	goto	u2421
  6246  0488  2C8A               	goto	u2420
  6247  0489                     u2421:	
  6248  0489  2C9A               	goto	l2663
  6249  048A                     u2420:	
  6250  048A                     l2661:	
  6251                           
  6252                           ;MCAL/DIO.c: 80:                         (PORTD |=(1<<pinnumber));
  6253  048A  3001               	movlw	1
  6254  048B  00F5               	movwf	??_void_write_pin
  6255  048C  0A73               	incf	void_write_pin@pinnumber,w
  6256  048D  2C90               	goto	u2434
  6257  048E                     u2435:	
  6258  048E  1003               	clrc
  6259  048F  0DF5               	rlf	??_void_write_pin,f
  6260  0490                     u2434:	
  6261  0490  3EFF               	addlw	-1
  6262  0491  1D03               	skipz
  6263  0492  2C8E               	goto	u2435
  6264  0493  0875               	movf	??_void_write_pin,w
  6265  0494  00F6               	movwf	??_void_write_pin+1
  6266  0495  0876               	movf	??_void_write_pin+1,w
  6267  0496  1283               	bcf	3,5	;RP0=0, select bank0
  6268  0497  1303               	bcf	3,6	;RP1=0, select bank0
  6269  0498  0488               	iorwf	8,f	;volatile
  6270  0499  2CF9               	goto	l190
  6271  049A                     l2663:	
  6272                           
  6273                           ;MCAL/DIO.c: 82:                         (PORTD &=~(1<<pinnumber));
  6274  049A  3001               	movlw	1
  6275  049B  00F5               	movwf	??_void_write_pin
  6276  049C  0A73               	incf	void_write_pin@pinnumber,w
  6277  049D  2CA0               	goto	u2444
  6278  049E                     u2445:	
  6279  049E  1003               	clrc
  6280  049F  0DF5               	rlf	??_void_write_pin,f
  6281  04A0                     u2444:	
  6282  04A0  3EFF               	addlw	-1
  6283  04A1  1D03               	skipz
  6284  04A2  2C9E               	goto	u2445
  6285  04A3  0875               	movf	??_void_write_pin,w
  6286  04A4  3AFF               	xorlw	255
  6287  04A5  00F6               	movwf	??_void_write_pin+1
  6288  04A6  0876               	movf	??_void_write_pin+1,w
  6289  04A7  1283               	bcf	3,5	;RP0=0, select bank0
  6290  04A8  1303               	bcf	3,6	;RP1=0, select bank0
  6291  04A9  0588               	andwf	8,f	;volatile
  6292  04AA  2CF9               	goto	l190
  6293  04AB                     l2665:	
  6294                           
  6295                           ;MCAL/DIO.c: 86:                 if (state)
  6296  04AB  0874               	movf	void_write_pin@state,w
  6297  04AC  1903               	btfsc	3,2
  6298  04AD  2CAF               	goto	u2451
  6299  04AE  2CB0               	goto	u2450
  6300  04AF                     u2451:	
  6301  04AF  2CC0               	goto	l2669
  6302  04B0                     u2450:	
  6303  04B0                     l2667:	
  6304                           
  6305                           ;MCAL/DIO.c: 87:                         (PORTE |=(1<<pinnumber));
  6306  04B0  3001               	movlw	1
  6307  04B1  00F5               	movwf	??_void_write_pin
  6308  04B2  0A73               	incf	void_write_pin@pinnumber,w
  6309  04B3  2CB6               	goto	u2464
  6310  04B4                     u2465:	
  6311  04B4  1003               	clrc
  6312  04B5  0DF5               	rlf	??_void_write_pin,f
  6313  04B6                     u2464:	
  6314  04B6  3EFF               	addlw	-1
  6315  04B7  1D03               	skipz
  6316  04B8  2CB4               	goto	u2465
  6317  04B9  0875               	movf	??_void_write_pin,w
  6318  04BA  00F6               	movwf	??_void_write_pin+1
  6319  04BB  0876               	movf	??_void_write_pin+1,w
  6320  04BC  1283               	bcf	3,5	;RP0=0, select bank0
  6321  04BD  1303               	bcf	3,6	;RP1=0, select bank0
  6322  04BE  0489               	iorwf	9,f	;volatile
  6323  04BF  2CF9               	goto	l190
  6324  04C0                     l2669:	
  6325                           
  6326                           ;MCAL/DIO.c: 89:                         (PORTE &=~(1<<pinnumber));
  6327  04C0  3001               	movlw	1
  6328  04C1  00F5               	movwf	??_void_write_pin
  6329  04C2  0A73               	incf	void_write_pin@pinnumber,w
  6330  04C3  2CC6               	goto	u2474
  6331  04C4                     u2475:	
  6332  04C4  1003               	clrc
  6333  04C5  0DF5               	rlf	??_void_write_pin,f
  6334  04C6                     u2474:	
  6335  04C6  3EFF               	addlw	-1
  6336  04C7  1D03               	skipz
  6337  04C8  2CC4               	goto	u2475
  6338  04C9  0875               	movf	??_void_write_pin,w
  6339  04CA  3AFF               	xorlw	255
  6340  04CB  00F6               	movwf	??_void_write_pin+1
  6341  04CC  0876               	movf	??_void_write_pin+1,w
  6342  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  6343  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  6344  04CF  0589               	andwf	9,f	;volatile
  6345  04D0  2CF9               	goto	l190
  6346  04D1                     l2673:	
  6347  04D1  0877               	movf	void_write_pin@portname,w
  6348  04D2  00F5               	movwf	??_void_write_pin
  6349  04D3  01F6               	clrf	??_void_write_pin+1
  6350                           
  6351                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6352                           ; Switch size 1, requested type "simple"
  6353                           ; Number of cases is 1, Range of values is 0 to 0
  6354                           ; switch strategies available:
  6355                           ; Name         Instructions Cycles
  6356                           ; simple_byte            4     3 (average)
  6357                           ; direct_byte           11     8 (fixed)
  6358                           ; jumptable            260     6 (fixed)
  6359                           ;	Chosen strategy is simple_byte
  6360  04D4  0876               	movf	??_void_write_pin+1,w
  6361  04D5  3A00               	xorlw	0	; case 0
  6362  04D6  1903               	skipnz
  6363  04D7  2CD9               	goto	l3325
  6364  04D8  2CF9               	goto	l190
  6365  04D9                     l3325:	
  6366                           
  6367                           ; Switch size 1, requested type "simple"
  6368                           ; Number of cases is 10, Range of values is 65 to 101
  6369                           ; switch strategies available:
  6370                           ; Name         Instructions Cycles
  6371                           ; simple_byte           31    16 (average)
  6372                           ; direct_byte          122    11 (fixed)
  6373                           ; jumptable            263     9 (fixed)
  6374                           ;	Chosen strategy is simple_byte
  6375  04D9  0875               	movf	??_void_write_pin,w
  6376  04DA  3A41               	xorlw	65	; case 65
  6377  04DB  1903               	skipnz
  6378  04DC  2C13               	goto	l2641
  6379  04DD  3A03               	xorlw	3	; case 66
  6380  04DE  1903               	skipnz
  6381  04DF  2C39               	goto	l2647
  6382  04E0  3A01               	xorlw	1	; case 67
  6383  04E1  1903               	skipnz
  6384  04E2  2C5F               	goto	l2653
  6385  04E3  3A07               	xorlw	7	; case 68
  6386  04E4  1903               	skipnz
  6387  04E5  2C85               	goto	l2659
  6388  04E6  3A01               	xorlw	1	; case 69
  6389  04E7  1903               	skipnz
  6390  04E8  2CAB               	goto	l2665
  6391  04E9  3A24               	xorlw	36	; case 97
  6392  04EA  1903               	skipnz
  6393  04EB  2C13               	goto	l2641
  6394  04EC  3A03               	xorlw	3	; case 98
  6395  04ED  1903               	skipnz
  6396  04EE  2C39               	goto	l2647
  6397  04EF  3A01               	xorlw	1	; case 99
  6398  04F0  1903               	skipnz
  6399  04F1  2C5F               	goto	l2653
  6400  04F2  3A07               	xorlw	7	; case 100
  6401  04F3  1903               	skipnz
  6402  04F4  2C85               	goto	l2659
  6403  04F5  3A01               	xorlw	1	; case 101
  6404  04F6  1903               	skipnz
  6405  04F7  2CAB               	goto	l2665
  6406  04F8  2CF9               	goto	l190
  6407  04F9                     l190:	
  6408  04F9  0008               	return
  6409  04FA                     __end_of_void_write_pin:	
  6410                           
  6411                           	psect	text33
  6412  0B9B                     __ptext33:	
  6413 ;; *************** function _delay_msk *****************
  6414 ;; Defined at:
  6415 ;;		line 119 in file "HAL/Keypad.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;  ms_Count        2    3[COMMON] unsigned int 
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;  j               2    2[BANK0 ] unsigned int 
  6420 ;;  i               2    0[BANK0 ] unsigned int 
  6421 ;; Return value:  Size  Location     Type
  6422 ;;                  1    wreg      void 
  6423 ;; Registers used:
  6424 ;;		wreg, status,2
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6430 ;;      Params:         2       0       0       0       0
  6431 ;;      Locals:         0       4       0       0       0
  6432 ;;      Temps:          0       0       0       0       0
  6433 ;;      Totals:         2       4       0       0       0
  6434 ;;Total ram usage:        6 bytes
  6435 ;; Hardware stack levels used:    1
  6436 ;; Hardware stack levels required when called:    1
  6437 ;; This function calls:
  6438 ;;		Nothing
  6439 ;; This function is called by:
  6440 ;;		_key_read_keypad
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           
  6445                           ;psect for function _delay_msk
  6446  0B9B                     _delay_msk:	
  6447  0B9B                     l2929:	
  6448                           ;incstack = 0
  6449                           ; Regs used in _delay_msk: [wreg+status,2]
  6450                           
  6451                           
  6452                           ;HAL/Keypad.c: 119: void delay_msk(unsigned int ms_Count);HAL/Keypad.c: 120: {;HAL/Keypa
      +                          d.c: 121:     unsigned int i,j;;HAL/Keypad.c: 122:     for(i=0;i<ms_Count;i++)
  6453  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  6454  0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  6455  0B9D  01A0               	clrf	delay_msk@i
  6456  0B9E  01A1               	clrf	delay_msk@i+1
  6457  0B9F  2BB7               	goto	l315
  6458  0BA0                     l2931:	
  6459                           
  6460                           ;HAL/Keypad.c: 123:     {;HAL/Keypad.c: 124:         for(j=0;j<1000;j++);
  6461  0BA0  01A2               	clrf	delay_msk@j
  6462  0BA1  01A3               	clrf	delay_msk@j+1
  6463  0BA2                     l2937:	
  6464  0BA2  3001               	movlw	1
  6465  0BA3  07A2               	addwf	delay_msk@j,f
  6466  0BA4  1803               	skipnc
  6467  0BA5  0AA3               	incf	delay_msk@j+1,f
  6468  0BA6  3000               	movlw	0
  6469  0BA7  07A3               	addwf	delay_msk@j+1,f
  6470  0BA8  3003               	movlw	3
  6471  0BA9  0223               	subwf	delay_msk@j+1,w
  6472  0BAA  30E8               	movlw	232
  6473  0BAB  1903               	skipnz
  6474  0BAC  0222               	subwf	delay_msk@j,w
  6475  0BAD  1C03               	skipc
  6476  0BAE  2BB0               	goto	u2931
  6477  0BAF  2BB1               	goto	u2930
  6478  0BB0                     u2931:	
  6479  0BB0  2BA2               	goto	l2937
  6480  0BB1                     u2930:	
  6481  0BB1                     l2939:	
  6482                           
  6483                           ;HAL/Keypad.c: 125:     }
  6484  0BB1  3001               	movlw	1
  6485  0BB2  07A0               	addwf	delay_msk@i,f
  6486  0BB3  1803               	skipnc
  6487  0BB4  0AA1               	incf	delay_msk@i+1,f
  6488  0BB5  3000               	movlw	0
  6489  0BB6  07A1               	addwf	delay_msk@i+1,f
  6490  0BB7                     l315:	
  6491  0BB7  0874               	movf	delay_msk@ms_Count+1,w
  6492  0BB8  0221               	subwf	delay_msk@i+1,w
  6493  0BB9  1D03               	skipz
  6494  0BBA  2BBD               	goto	u2945
  6495  0BBB  0873               	movf	delay_msk@ms_Count,w
  6496  0BBC  0220               	subwf	delay_msk@i,w
  6497  0BBD                     u2945:	
  6498  0BBD  1C03               	skipc
  6499  0BBE  2BC0               	goto	u2941
  6500  0BBF  2BC1               	goto	u2940
  6501  0BC0                     u2941:	
  6502  0BC0  2BA0               	goto	l2931
  6503  0BC1                     u2940:	
  6504  0BC1                     l320:	
  6505  0BC1  0008               	return
  6506  0BC2                     __end_of_delay_msk:	
  6507                           
  6508                           	psect	text34
  6509  0FA2                     __ptext34:	
  6510 ;; *************** function _char_read_pin *****************
  6511 ;; Defined at:
  6512 ;;		line 146 in file "MCAL/DIO.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;  portname        1    wreg     unsigned char 
  6515 ;;  pinnumber       1    3[COMMON] unsigned char 
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;  portname        1    6[COMMON] unsigned char 
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  1    wreg      unsigned char 
  6520 ;; Registers used:
  6521 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6527 ;;      Params:         1       0       0       0       0
  6528 ;;      Locals:         1       0       0       0       0
  6529 ;;      Temps:          2       0       0       0       0
  6530 ;;      Totals:         4       0       0       0       0
  6531 ;;Total ram usage:        4 bytes
  6532 ;; Hardware stack levels used:    1
  6533 ;; Hardware stack levels required when called:    1
  6534 ;; This function calls:
  6535 ;;		Nothing
  6536 ;; This function is called by:
  6537 ;;		_key_read_keypad
  6538 ;;		_void_door
  6539 ;;		_void_start
  6540 ;;		_void_pause
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544                           
  6545                           ;psect for function _char_read_pin
  6546  0FA2                     _char_read_pin:	
  6547                           
  6548                           ;incstack = 0
  6549                           ; Regs used in _char_read_pin: [wreg-fsr0h+status,2+status,0]
  6550                           ;char_read_pin@portname stored from wreg
  6551  0FA2  00F6               	movwf	char_read_pin@portname
  6552  0FA3                     l2183:	
  6553                           
  6554                           ;MCAL/DIO.c: 146: char char_read_pin(char portname,char pinnumber);MCAL/DIO.c: 147: {;MC
      +                          AL/DIO.c: 148:         switch(portname)
  6555  0FA3  2FDC               	goto	l2203
  6556  0FA4                     l2185:	
  6557                           
  6558                           ;MCAL/DIO.c: 152:                 return (PORTA & (1<<pinnumber));
  6559  0FA4  3001               	movlw	1
  6560  0FA5  00F4               	movwf	??_char_read_pin
  6561  0FA6  0A73               	incf	char_read_pin@pinnumber,w
  6562  0FA7  2FAA               	goto	u1934
  6563  0FA8                     u1935:	
  6564  0FA8  1003               	clrc
  6565  0FA9  0DF4               	rlf	??_char_read_pin,f
  6566  0FAA                     u1934:	
  6567  0FAA  3EFF               	addlw	-1
  6568  0FAB  1D03               	skipz
  6569  0FAC  2FA8               	goto	u1935
  6570  0FAD  0874               	movf	??_char_read_pin,w
  6571  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  6572  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  6573  0FB0  0505               	andwf	5,w	;volatile
  6574  0FB1  2FFF               	goto	l222
  6575  0FB2                     l2189:	
  6576                           
  6577                           ;MCAL/DIO.c: 155:                 return (PORTB & (1<<pinnumber));
  6578  0FB2  3001               	movlw	1
  6579  0FB3  00F4               	movwf	??_char_read_pin
  6580  0FB4  0A73               	incf	char_read_pin@pinnumber,w
  6581  0FB5  2FB8               	goto	u1944
  6582  0FB6                     u1945:	
  6583  0FB6  1003               	clrc
  6584  0FB7  0DF4               	rlf	??_char_read_pin,f
  6585  0FB8                     u1944:	
  6586  0FB8  3EFF               	addlw	-1
  6587  0FB9  1D03               	skipz
  6588  0FBA  2FB6               	goto	u1945
  6589  0FBB  0874               	movf	??_char_read_pin,w
  6590  0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  6591  0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  6592  0FBE  0506               	andwf	6,w	;volatile
  6593  0FBF  2FFF               	goto	l222
  6594  0FC0                     l2193:	
  6595                           
  6596                           ;MCAL/DIO.c: 158:                 return (PORTC & (1<<pinnumber));
  6597  0FC0  3001               	movlw	1
  6598  0FC1  00F4               	movwf	??_char_read_pin
  6599  0FC2  0A73               	incf	char_read_pin@pinnumber,w
  6600  0FC3  2FC6               	goto	u1954
  6601  0FC4                     u1955:	
  6602  0FC4  1003               	clrc
  6603  0FC5  0DF4               	rlf	??_char_read_pin,f
  6604  0FC6                     u1954:	
  6605  0FC6  3EFF               	addlw	-1
  6606  0FC7  1D03               	skipz
  6607  0FC8  2FC4               	goto	u1955
  6608  0FC9  0874               	movf	??_char_read_pin,w
  6609  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  6610  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  6611  0FCC  0507               	andwf	7,w	;volatile
  6612  0FCD  2FFF               	goto	l222
  6613  0FCE                     l2197:	
  6614                           
  6615                           ;MCAL/DIO.c: 161:                 return (PORTD & (1<<pinnumber));
  6616  0FCE  3001               	movlw	1
  6617  0FCF  00F4               	movwf	??_char_read_pin
  6618  0FD0  0A73               	incf	char_read_pin@pinnumber,w
  6619  0FD1  2FD4               	goto	u1964
  6620  0FD2                     u1965:	
  6621  0FD2  1003               	clrc
  6622  0FD3  0DF4               	rlf	??_char_read_pin,f
  6623  0FD4                     u1964:	
  6624  0FD4  3EFF               	addlw	-1
  6625  0FD5  1D03               	skipz
  6626  0FD6  2FD2               	goto	u1965
  6627  0FD7  0874               	movf	??_char_read_pin,w
  6628  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  6629  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  6630  0FDA  0508               	andwf	8,w	;volatile
  6631  0FDB  2FFF               	goto	l222
  6632  0FDC                     l2203:	
  6633  0FDC  0876               	movf	char_read_pin@portname,w
  6634  0FDD  00F4               	movwf	??_char_read_pin
  6635  0FDE  01F5               	clrf	??_char_read_pin+1
  6636                           
  6637                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6638                           ; Switch size 1, requested type "simple"
  6639                           ; Number of cases is 1, Range of values is 0 to 0
  6640                           ; switch strategies available:
  6641                           ; Name         Instructions Cycles
  6642                           ; simple_byte            4     3 (average)
  6643                           ; direct_byte           11     8 (fixed)
  6644                           ; jumptable            260     6 (fixed)
  6645                           ;	Chosen strategy is simple_byte
  6646  0FDF  0875               	movf	??_char_read_pin+1,w
  6647  0FE0  3A00               	xorlw	0	; case 0
  6648  0FE1  1903               	skipnz
  6649  0FE2  2FE4               	goto	l3327
  6650  0FE3  2FFE               	goto	l2205
  6651  0FE4                     l3327:	
  6652                           
  6653                           ; Switch size 1, requested type "simple"
  6654                           ; Number of cases is 8, Range of values is 65 to 100
  6655                           ; switch strategies available:
  6656                           ; Name         Instructions Cycles
  6657                           ; simple_byte           25    13 (average)
  6658                           ; direct_byte          119    11 (fixed)
  6659                           ; jumptable            263     9 (fixed)
  6660                           ;	Chosen strategy is simple_byte
  6661  0FE4  0874               	movf	??_char_read_pin,w
  6662  0FE5  3A41               	xorlw	65	; case 65
  6663  0FE6  1903               	skipnz
  6664  0FE7  2FA4               	goto	l2185
  6665  0FE8  3A03               	xorlw	3	; case 66
  6666  0FE9  1903               	skipnz
  6667  0FEA  2FB2               	goto	l2189
  6668  0FEB  3A01               	xorlw	1	; case 67
  6669  0FEC  1903               	skipnz
  6670  0FED  2FC0               	goto	l2193
  6671  0FEE  3A07               	xorlw	7	; case 68
  6672  0FEF  1903               	skipnz
  6673  0FF0  2FCE               	goto	l2197
  6674  0FF1  3A25               	xorlw	37	; case 97
  6675  0FF2  1903               	skipnz
  6676  0FF3  2FA4               	goto	l2185
  6677  0FF4  3A03               	xorlw	3	; case 98
  6678  0FF5  1903               	skipnz
  6679  0FF6  2FB2               	goto	l2189
  6680  0FF7  3A01               	xorlw	1	; case 99
  6681  0FF8  1903               	skipnz
  6682  0FF9  2FC0               	goto	l2193
  6683  0FFA  3A07               	xorlw	7	; case 100
  6684  0FFB  1903               	skipnz
  6685  0FFC  2FCE               	goto	l2197
  6686  0FFD  2FFE               	goto	l2205
  6687  0FFE                     l2205:	
  6688                           
  6689                           ;MCAL/DIO.c: 166:         return 'N';
  6690  0FFE  304E               	movlw	78
  6691  0FFF                     l222:	
  6692  0FFF  0008               	return
  6693  1000                     __end_of_char_read_pin:	
  6694                           
  6695                           	psect	text35
  6696  0ACC                     __ptext35:	
  6697 ;; *************** function ___bmul *****************
  6698 ;; Defined at:
  6699 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;  multiplier      1    wreg     unsigned char 
  6702 ;;  multiplicand    1    3[COMMON] unsigned char 
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;  multiplier      1    6[COMMON] unsigned char 
  6705 ;;  product         1    5[COMMON] unsigned char 
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  1    wreg      unsigned char 
  6708 ;; Registers used:
  6709 ;;		wreg, status,2, status,0
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6715 ;;      Params:         1       0       0       0       0
  6716 ;;      Locals:         2       0       0       0       0
  6717 ;;      Temps:          1       0       0       0       0
  6718 ;;      Totals:         4       0       0       0       0
  6719 ;;Total ram usage:        4 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:    1
  6722 ;; This function calls:
  6723 ;;		Nothing
  6724 ;; This function is called by:
  6725 ;;		_main
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           
  6730                           ;psect for function ___bmul
  6731  0ACC                     ___bmul:	
  6732                           
  6733                           ;incstack = 0
  6734                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6735                           ;___bmul@multiplier stored from wreg
  6736  0ACC  00F6               	movwf	___bmul@multiplier
  6737  0ACD                     l2455:	
  6738  0ACD  01F5               	clrf	___bmul@product
  6739  0ACE                     l2457:	
  6740  0ACE  1C76               	btfss	___bmul@multiplier,0
  6741  0ACF  2AD1               	goto	u2291
  6742  0AD0  2AD2               	goto	u2290
  6743  0AD1                     u2291:	
  6744  0AD1  2AD6               	goto	l2461
  6745  0AD2                     u2290:	
  6746  0AD2                     l2459:	
  6747  0AD2  0873               	movf	___bmul@multiplicand,w
  6748  0AD3  00F4               	movwf	??___bmul
  6749  0AD4  0874               	movf	??___bmul,w
  6750  0AD5  07F5               	addwf	___bmul@product,f
  6751  0AD6                     l2461:	
  6752  0AD6  1003               	clrc
  6753  0AD7  0DF3               	rlf	___bmul@multiplicand,f
  6754  0AD8                     l2463:	
  6755  0AD8  1003               	clrc
  6756  0AD9  0CF6               	rrf	___bmul@multiplier,f
  6757  0ADA  0876               	movf	___bmul@multiplier,w
  6758  0ADB  1D03               	btfss	3,2
  6759  0ADC  2ADE               	goto	u2301
  6760  0ADD  2ADF               	goto	u2300
  6761  0ADE                     u2301:	
  6762  0ADE  2ACE               	goto	l2457
  6763  0ADF                     u2300:	
  6764  0ADF                     l2465:	
  6765  0ADF  0875               	movf	___bmul@product,w
  6766  0AE0                     l521:	
  6767  0AE0  0008               	return
  6768  0AE1                     __end_of___bmul:	
  6769                           
  6770                           	psect	text36
  6771  0AE1                     __ptext36:	
  6772 ;; *************** function _timer_isr *****************
  6773 ;; Defined at:
  6774 ;;		line 55 in file "main.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;		None
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;		None
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  1    wreg      void 
  6781 ;; Registers used:
  6782 ;;		wreg, status,2, status,0
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6788 ;;      Params:         0       0       0       0       0
  6789 ;;      Locals:         0       0       0       0       0
  6790 ;;      Temps:          3       0       0       0       0
  6791 ;;      Totals:         3       0       0       0       0
  6792 ;;Total ram usage:        3 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; This function calls:
  6795 ;;		Nothing
  6796 ;; This function is called by:
  6797 ;;		Interrupt level 1
  6798 ;; This function uses a non-reentrant model
  6799 ;;
  6800                           
  6801                           
  6802                           ;psect for function _timer_isr
  6803  0AE1                     _timer_isr:	
  6804  0AE1                     i1l2469:	
  6805                           
  6806                           ;main.c: 57:     if(TMR1IF==1)
  6807  0AE1  1283               	bcf	3,5	;RP0=0, select bank0
  6808  0AE2  1303               	bcf	3,6	;RP1=0, select bank0
  6809  0AE3  1C0C               	btfss	12,0	;volatile
  6810  0AE4  2AE6               	goto	u231_21
  6811  0AE5  2AE7               	goto	u231_20
  6812  0AE6                     u231_21:	
  6813  0AE6  2AF0               	goto	i1l84
  6814  0AE7                     u231_20:	
  6815  0AE7                     i1l2471:	
  6816                           
  6817                           ;main.c: 58:     {;main.c: 59:         count++;
  6818  0AE7  3001               	movlw	1
  6819  0AE8  00F0               	movwf	??_timer_isr
  6820  0AE9  0870               	movf	??_timer_isr,w
  6821  0AEA  07DB               	addwf	_count,f
  6822  0AEB                     i1l2473:	
  6823                           
  6824                           ;main.c: 61:         TMR1H=0x3C;
  6825  0AEB  303C               	movlw	60
  6826  0AEC  008F               	movwf	15	;volatile
  6827  0AED                     i1l2475:	
  6828                           
  6829                           ;main.c: 62:         TMR1L=0xB0;
  6830  0AED  30B0               	movlw	176
  6831  0AEE  008E               	movwf	14	;volatile
  6832  0AEF                     i1l2477:	
  6833                           
  6834                           ;main.c: 63:         TMR1IF=0;
  6835  0AEF  100C               	bcf	12,0	;volatile
  6836  0AF0                     i1l84:	
  6837  0AF0  0872               	movf	??_timer_isr+2,w
  6838  0AF1  008A               	movwf	10
  6839  0AF2  0E71               	swapf	(??_timer_isr+1)^(0+4294967168),w
  6840  0AF3  0083               	movwf	3
  6841  0AF4  0EFE               	swapf	btemp,f
  6842  0AF5  0E7E               	swapf	btemp,w
  6843  0AF6  0009               	retfie
  6844  0AF7                     __end_of_timer_isr:	
  6845  007E                     btemp	set	126	;btemp
  6846  007E                     wtemp0	set	126
  6847                           
  6848                           	psect	intentry
  6849  0004                     __pintentry:	
  6850                           ;incstack = 0
  6851                           ; Regs used in _timer_isr: [wreg+status,2+status,0]
  6852                           
  6853  0004                     interrupt_function:	
  6854  007E                     saved_w	set	btemp
  6855  0004  00FE               	movwf	btemp
  6856  0005  0E03               	swapf	3,w
  6857  0006  00F1               	movwf	??_timer_isr+1
  6858  0007  080A               	movf	10,w
  6859  0008  00F2               	movwf	??_timer_isr+2
  6860  0009  120A  158A  2AE1   	ljmp	_timer_isr


Data Sizes:
    Strings     57
    Constant    10
    Data        82
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     49      80
    BANK1            80      0      72
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_9(CODE[10]), STR_8(CODE[5]), STR_7(CODE[5]), STR_6(CODE[10]), 
		 -> STR_5(CODE[10]), STR_4(CODE[14]), STR_3(CODE[6]), STR_2(CODE[7]), 
		 -> STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> text(BANK1[50]), text_debug(BANK0[5]), text_t(BANK1[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    void_lcd_print@string	PTR unsigned char  size(1) Largest target is 50
		 -> text(BANK1[50]), text_debug(BANK0[5]), text_t(BANK1[10]), 

    void_time_input@arr	PTR unsigned char  size(1) Largest target is 4
		 -> time(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_void_door
    _main->_void_init_timer
    _main->_void_pause
    _main->_void_start
    _main->_void_time_input
    _void_time_input->___bmul
    _void_time_input->___wmul
    _void_start->_char_read_pin
    _void_pause->_char_read_pin
    _void_stop_heating->_void_write_pin
    _void_start_heating->_void_write_pin
    _void_microwave_timer->___awdiv
    _void_microwave_timer->___awmod
    _void_lcd_send_data->_void_write_pin
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _void_init_sensors->_void_init_pin
    _void_init_lcd->_void_init_pin
    _void_lcd_send_command->_void_write_pin
    _void_LCD_init_Command->_void_write_pin
    _void_pulse->_void_write_pin
    _void_init_keypad->_void_init_pin
    _void_init_keypad->_void_write_pin
    _void_init_actuators->_void_init_pin
    _void_door->_char_read_pin
    _key_read_keypad->_void_write_pin

Critical Paths under _timer_isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_void_operation
    _void_time_input->___wmul
    _void_operation->_void_microwave_timer
    _void_microwave_timer->_sprintf
    _void_update_status->_void_lcd_goto
    _void_update_status->_void_lcd_print
    _void_lcd_print->_void_lcd_send_data
    _void_lcd_goto->_void_lcd_send_command
    _void_lcd_clear->_void_lcd_send_command
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _void_init_lcd->_void_lcd_send_command
    _void_pulse->_delay_ms
    _key_read_keypad->_delay_msk

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0  178043
                                             40 BANK0      9     9      0
                             ___bmul
                    _key_read_keypad
                            _sprintf
                          _void_door
                _void_init_actuators
                   _void_init_keypad
                      _void_init_lcd
                  _void_init_sensors
                    _void_init_timer
                      _void_lcd_goto
                     _void_lcd_print
                     _void_operation
                         _void_pause
                         _void_start
                    _void_time_input
                 _void_update_status
 ---------------------------------------------------------------------------------
 (1) _void_time_input                                      4     3      1    1315
                                              7 COMMON     1     0      1
                                              2 BANK0      3     3      0
                             ___bmul (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     786
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _void_start                                           1     1      0     490
                                              7 COMMON     1     1      0
                      _char_read_pin
 ---------------------------------------------------------------------------------
 (1) _void_pause                                           1     1      0     490
                                              7 COMMON     1     1      0
                      _char_read_pin
 ---------------------------------------------------------------------------------
 (1) _void_operation                                      11    11      0   85065
                                             29 BANK0     11    11      0
                            _sprintf
                      _void_lcd_goto
                     _void_lcd_print
               _void_microwave_timer
                 _void_start_heating
                  _void_stop_heating
                 _void_update_status
 ---------------------------------------------------------------------------------
 (2) _void_stop_heating                                    1     1      0    3376
                                              0 BANK0      1     1      0
                     _void_write_pin
 ---------------------------------------------------------------------------------
 (2) _void_start_heating                                   1     1      0    3376
                                              0 BANK0      1     1      0
                     _void_write_pin
 ---------------------------------------------------------------------------------
 (2) _void_microwave_timer                                 1     1      0   30401
                                             28 BANK0      1     1      0
                            ___awdiv
                            ___awmod
                            _sprintf
                 _void_update_status
 ---------------------------------------------------------------------------------
 (1) _void_update_status                                   3     3      0   26774
                                             11 BANK0      3     3      0
                     _void_lcd_clear
                      _void_lcd_goto
                     _void_lcd_print
 ---------------------------------------------------------------------------------
 (2) _void_lcd_print                                       4     4      0    8639
                                              7 BANK0      4     4      0
                 _void_lcd_send_data
 ---------------------------------------------------------------------------------
 (3) _void_lcd_send_data                                   3     3      0    8365
                                              4 BANK0      3     3      0
                         _void_pulse
                     _void_write_pin
                    _void_write_port
 ---------------------------------------------------------------------------------
 (2) _void_lcd_goto                                        4     3      1    9770
                                              7 BANK0      4     3      1
                           _delay_ms
              _void_lcd_send_command
 ---------------------------------------------------------------------------------
 (2) _void_lcd_clear                                       0     0      0    8365
              _void_lcd_send_command
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             27    18      9    2562
                                              9 BANK0     19    10      9
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     613
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _void_init_timer                                      8     3      5     394
                                              3 COMMON     5     0      5
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _void_init_sensors                                    1     1      0    4096
                                              0 BANK0      1     1      0
                      _void_init_pin
 ---------------------------------------------------------------------------------
 (1) _void_init_lcd                                        1     1      0   21741
                                              7 BANK0      1     1      0
                           _delay_ms
              _void_LCD_init_Command
                      _void_init_pin
              _void_lcd_send_command
 ---------------------------------------------------------------------------------
 (3) _void_lcd_send_command                                3     3      0    8365
                                              4 BANK0      3     3      0
                         _void_pulse
                     _void_write_pin
                    _void_write_port
 ---------------------------------------------------------------------------------
 (2) _void_LCD_init_Command                                2     2      0    8334
                                              4 BANK0      2     2      0
                         _void_pulse
                     _void_write_pin
                    _void_write_port
 ---------------------------------------------------------------------------------
 (4) _void_write_port                                      4     3      1     605
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (4) _void_pulse                                           0     0      0    4322
                           _delay_ms
                     _void_write_pin
 ---------------------------------------------------------------------------------
 (5) _delay_ms                                             6     4      2     946
                                              3 COMMON     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _void_init_keypad                                     3     3      0    7540
                                              0 BANK0      3     3      0
                      _void_init_pin
                     _void_write_pin
 ---------------------------------------------------------------------------------
 (1) _void_init_actuators                                  1     1      0    4096
                                              0 BANK0      1     1      0
                      _void_init_pin
 ---------------------------------------------------------------------------------
 (2) _void_init_pin                                        5     3      2    4096
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _void_door                                            1     1      0     490
                                              7 COMMON     1     1      0
                      _char_read_pin
 ---------------------------------------------------------------------------------
 (1) _key_read_keypad                                      9     7      2    4463
                                              4 BANK0      9     7      2
                      _char_read_pin
                          _delay_msk
                     _void_write_pin
 ---------------------------------------------------------------------------------
 (4) _void_write_pin                                       5     3      2    3376
                                              3 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _delay_msk                                            6     4      2     226
                                              3 COMMON     2     0      2
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _char_read_pin                                        4     3      1     490
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     118
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _timer_isr                                            3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___bmul
   _key_read_keypad
     _char_read_pin
     _delay_msk
     _void_write_pin
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _void_door
     _char_read_pin
   _void_init_actuators
     _void_init_pin
   _void_init_keypad
     _void_init_pin
     _void_write_pin
   _void_init_lcd
     _delay_ms
     _void_LCD_init_Command
       _void_pulse
         _delay_ms
         _void_write_pin
       _void_write_pin
       _void_write_port
     _void_init_pin
     _void_lcd_send_command
       _void_pulse
         _delay_ms
         _void_write_pin
       _void_write_pin
       _void_write_port
   _void_init_sensors
     _void_init_pin
   _void_init_timer
   _void_lcd_goto
     _delay_ms
     _void_lcd_send_command
       _void_pulse
         _delay_ms
         _void_write_pin
       _void_write_pin
       _void_write_port
   _void_lcd_print
     _void_lcd_send_data
       _void_pulse
         _delay_ms
         _void_write_pin
       _void_write_pin
       _void_write_port
   _void_operation
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _void_lcd_goto
       _delay_ms
       _void_lcd_send_command
         _void_pulse
           _delay_ms
           _void_write_pin
         _void_write_pin
         _void_write_port
     _void_lcd_print
       _void_lcd_send_data
         _void_pulse
           _delay_ms
           _void_write_pin
         _void_write_pin
         _void_write_port
     _void_microwave_timer
       ___awdiv
       ___awmod
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _void_update_status
         _void_lcd_clear
           _void_lcd_send_command
             _void_pulse
               _delay_ms
               _void_write_pin
             _void_write_pin
             _void_write_port
         _void_lcd_goto
           _delay_ms
           _void_lcd_send_command
             _void_pulse
               _delay_ms
               _void_write_pin
             _void_write_pin
             _void_write_port
         _void_lcd_print
           _void_lcd_send_data
             _void_pulse
               _delay_ms
               _void_write_pin
             _void_write_pin
             _void_write_port
     _void_start_heating
       _void_write_pin
     _void_stop_heating
       _void_write_pin
     _void_update_status
       _void_lcd_clear
         _void_lcd_send_command
           _void_pulse
             _delay_ms
             _void_write_pin
           _void_write_pin
           _void_write_port
       _void_lcd_goto
         _delay_ms
         _void_lcd_send_command
           _void_pulse
             _delay_ms
             _void_write_pin
           _void_write_pin
           _void_write_port
       _void_lcd_print
         _void_lcd_send_data
           _void_pulse
             _delay_ms
             _void_write_pin
           _void_write_pin
           _void_write_port
   _void_pause
     _char_read_pin
   _void_start
     _char_read_pin
   _void_time_input
     ___bmul (ARG)
     ___wmul (ARG)
   _void_update_status
     _void_lcd_clear
       _void_lcd_send_command
         _void_pulse
           _delay_ms
           _void_write_pin
         _void_write_pin
         _void_write_port
     _void_lcd_goto
       _delay_ms
       _void_lcd_send_command
         _void_pulse
           _delay_ms
           _void_write_pin
         _void_write_pin
         _void_write_port
     _void_lcd_print
       _void_lcd_send_data
         _void_pulse
           _delay_ms
           _void_write_pin
         _void_write_pin
         _void_write_port

 _timer_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      48       7       90.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     31      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A3      12        0.0%
ABS                  0      0      A3       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Mar 05 22:06:32 2020

                               _k 0051                                 _n 006F                                 pc 0002  
         __size_of_void_operation 011B                    ___bmul@product 0075                       __CFG_CP$OFF 0000  
                              l90 0209                                l97 06C8                      ___awdiv@sign 0021  
                              fsr 0004               ___wmul@multiplicand 0075                       __CFG_LVP$ON 0000  
                             l102 0F46                               l120 0153                               l105 0DAA  
                             l222 0FFF                               l310 0643                               l302 0741  
                             l320 0BC1                               l216 0D71                               l315 0BB7  
                             l340 0D04                               l252 0E5F                               l165 0410  
                             l261 0A9D                               l190 04F9                               l350 0B10  
                             l246 05B0                               l343 0D38                               l280 0BE8  
                             l272 0B4F                               l521 0AE0                               l249 0DE6  
                             l337 0C10                               l266 0B2E                               l258 0B74  
                             l346 0C6B                               l354 0AB8                               l275 0BDE  
                             l269 0B9A                               l381 0CD0                               l358 0C9D  
                             l491 0327                               l661 0FA1                               l495 0C21  
                             l648 07AA                               l497 0C3B                               l767 0EA5  
                             l777 0E22                               _GIE 005F                      __CFG_CPD$OFF 0000  
                             _sec 005A                               fsr0 0004                               indf 0000  
                    ___awmod@sign 0021          __size_of_void_time_input 0085                      __CFG_FOSC$HS 0000  
                            l2041 0745                              l2203 0FDC                              l2051 0759  
                            l2043 0749                              l3011 003E                              l2205 0FFE  
                            l3101 05B6                              l3005 0BE9                              l2061 076F  
                            l2053 075D                              l2045 074E                              l3021 006E  
                            l3013 0043                              l2301 0AB7                              l3111 05F0  
                            l3103 05C7                              l3007 0CD1                              l2071 078F  
                            l2063 0773                              l2055 075F                              l2047 0750  
                            l2039 0742                              l3031 0087                              l3023 0073  
                            l3015 004F                              l2311 0C92                              l2303 0C6C  
                            l3121 060E                              l3113 05F4                              l3105 05CC  
                            l2073 0796                              l2065 0777                              l2057 0765  
                            l2049 0754                              l3041 009E                              l3025 0078  
                            l3033 008A                              l3017 005B                              l3009 0039  
                            l2313 0C97                              l2305 0C7B                              l3123 0620  
                            l3107 05E1                              l2067 0788                              l2059 0768  
                            l2075 079C                              l3051 00A9                              l3043 00A1  
                            l3035 008F                              l3027 007D                              l3019 0062  
                            l2315 0C99                              l2307 0C80                              l3131 0647  
                            l3109 05EA                              l3117 05F9                              l3125 0628  
                            l2077 07A1                              l2069 078E                              l3061 00E2  
                            l3053 00AE                              l3045 00A8                              l3037 0094  
                            l3029 0082                              l2309 0C83                              l3133 064F  
                            l3141 0671                              l2183 0FA3                              l3127 0635  
                            l3119 0601                              l2079 07A6                              l3063 00E3  
                            l3055 00B2                              l3071 00F1                              l3039 0099  
                            l3143 0690                              l3135 0657                              l3151 015E  
                            l2193 0FC0                              l2185 0FA4                              l3321 0D57  
                            l3081 0103                              l3073 00F8                              l3065 00E8  
                            l3057 00B8                              l3145 06B1                              l3137 0660  
                            l3161 0182                              l3153 016E                              l3323 03F0  
                            l3091 013B                              l3083 0108                              l3067 00EB  
                            l3059 00DE                              l3139 066A                              l3171 01AA  
                            l3163 018C                              l3155 0173                              l3147 0154  
                            l2461 0AD6                              l2197 0FCE                              l2189 0FB2  
                            l3325 04D9                              l2293 0AF7                              l3317 026B  
                            l3093 0141                              l3085 0116                              l3069 00EC  
                            l3181 0204                              l3173 01AF                              l3165 0191  
                            l3157 0178                              l3149 0159                              l2463 0AD8  
                            l2455 0ACD                              l3327 0FE4                              l2295 0B06  
                            l2711 0B7F                              l2703 0D4F                              l3319 0CB3  
                            l3095 014B                              l3087 0122                              l3079 00F9  
                            l3183 022A                              l3175 01BA                              l3167 019B  
                            l3159 017D                              l2465 0ADF                              l2457 0ACE  
                            l2641 0413                              l2713 0B88                              l2801 02B7  
                            l2721 0B18                              l3097 0150                              l3089 0135  
                            l2297 0AA6                              l3185 0234                              l3177 01C0  
                            l3169 01A0                              l2459 0AD2                              l2651 044E  
                            l2643 0418                              l3099 05B1                              l2715 0DAE  
                            l2811 02FD                              l2803 02BD                              l2723 0B25  
                            l2731 0B69                              l2299 0AB5                              l3179 01DC  
                            l2661 048A                              l2653 045F                              l2645 0428  
                            l2901 0376                              l2709 0B75                              l2741 0E6D  
                            l2813 0304                              l2805 02C4                              l2733 0A97  
                            l2717 0E26                              l2725 0B53                              l2663 049A  
                            l2655 0464                              l2647 0439                              l2639 0412  
                            l2911 03B1                              l2903 037B                              l2831 0F4E  
                            l2751 0E93                              l2743 0E74                              l2735 0E60  
                            l1951 0DE7                              l2815 0308                              l2807 02C8  
                            l2719 0B14                              l2727 0B56                              l2665 04AB  
                            l2657 0474                              l2649 043E                              l2673 04D1  
                            l2913 03C2                              l2905 038B                              l2921 03E8  
                            l2681 0BC7                              l2841 0F64                              l2833 0F53  
                            l2753 0E94                              l2745 0E78                              l2737 0E64  
                            l1961 0E01                              l1953 0DEF                              l2809 02CD  
                            l2817 0311                              l2729 0B61                              l2761 0D72  
                            l2931 0BA0                              l2667 04B0                              l2659 0485  
                            l2915 03C7                              l2907 039C                              l2691 0D3A  
                            l2851 0F80                              l2843 0F67                              l2835 0F55  
                            l2827 0F47                              l2755 0E9B                              l2747 0E7C  
                            l2739 0E6A                              l1963 0E0B                              l1955 0DF2  
                            l2819 0323                              l2771 0253                              l2763 0D9B  
                            l2669 04C0                              l2917 03D7                              l2909 03A1  
                            l2693 0D3B                              l2861 0F9D                              l2853 0F86  
                            l2845 0F6E                              l2837 0F59                              l2829 0F4A  
                            l2749 0E8D                              l2757 0EA1                              l1965 0E11  
                            l1957 0DF9                              l2781 027E                              l2773 0258  
                            l2765 0241                              l2941 0C11                              l2687 0BC9  
                            l2679 0BC2                              l2695 0D40                              l2927 0B32  
                            l2855 0F8D                              l2847 0F72                              l2839 0F5E  
                            l1967 0E18                              l1959 0DFD                              l2783 0282  
                            l2767 0246                              l2871 0F00                              l2951 0C35  
                            l2943 0C15                              l2937 0BA2                              l2929 0B9B  
                            l2689 0BD8                              l2697 0D45                              l2961 0568  
                            l2849 0F76                              l2857 0F93                              l1969 0E1E  
                            l2785 0286                              l2777 0259                              l2769 024C  
                            l2881 0F34                              l2873 0F06                              l2865 0EEE  
                            l2945 0C19                              l2939 0BB1                              l2891 032F  
                            l2971 06C9                              l2699 0D4A                              l2963 056E  
                            l2955 04FA                              l2859 0F98                              l2795 0291  
                            l2787 028A                              l2779 0276                              l2875 0F07  
                            l2867 0EF6                              l2883 0D05                              l2947 0C28  
                            l2893 033F                              l2973 0715                              l2965 057D  
                            l2957 0550                              l2981 0CA1                              l2789 028F  
                            l2877 0F0C                              l2869 0EFA                              l2885 0C3C  
                            l2949 0C2F                              l2895 0350                              l2887 0329  
                            l2975 071A                              l2967 0586                              l2959 0559  
                            l2983 0CA2                              l2991 0CAB                              l2799 02AD  
                            l2879 0F21                              l2897 0355                              l2889 032A  
                            l2977 072C                              l2969 05A7                              l2985 0CA5  
                            l2993 0CC1                              l2899 0365                              l2979 0734  
                            l2995 0CC6                              l2987 0CA8                              l2997 0CCB  
                            STR_1 07C9                              STR_2 07DD                              STR_3 07E4  
                            STR_4 07BB                              STR_5 07D3                              STR_6 07C9  
                            STR_7 07EF                              STR_8 07EA                              STR_9 07D3  
                            u2100 0C80                              u2101 0C7F                              u2110 0C92  
                            u2111 0C91                              u3000 0CC6                              u2120 0C97  
                            u3001 0CC5                              u2121 0C96                              u2050 0B06  
                            u3010 003E                              u2051 0B05                              u3011 003D  
                            u2300 0ADF                              u2060 0B0C                              u3100 00B8  
                            u3020 0043                              u2301 0ADE                              u2061 0B0A  
                            u3101 00B7                              u3021 0042                              u2070 0B0D  
                            u3110 00F8                              u3030 0073                              u3111 00F7  
                            u3031 0072                              u1440 0DEF                              u3120 0141  
                            u3040 0078                              u2080 0AB5                              u1441 0DEE  
                            u3121 0140                              u3041 0077                              u2081 0AB4  
                            u2330 0418                              u3130 05E1                              u1610 0777  
                            u3050 007D                              u2090 0C7B                              u2331 0417  
                            u3131 05E0                              u1611 0776                              u3051 007C  
                            u2091 0C7A                              u2420 048A                              u2404 046A  
                            u3140 060E                              u1460 0E01                              u3060 008F  
                            u2421 0489                              u2405 0468                              u3141 060D  
                            u1605 0769                              u1461 0E00                              u3061 008E  
                            u2414 047A                              u3150 0635                              u1630 0788  
                            u1470 0E0B                              u3070 0094                              u2415 0478  
                            u3151 0634                              u1631 0787                              u1471 0E0A  
                            u1455 0DF3                              u3071 0093                              u3207 01A6  
                            u2360 043E                              u2344 041E                              u2600 024C  
                            u2520 0B74                              u3080 0099                              u3160 064F  
                            u2361 043D                              u2345 041C                              u3145 060A  
                            u2505 0DD1                              u1625 0778                              u2601 024B  
                            u2521 0B73                              u3217 0110                              u3081 0098  
                            u3161 064E                              u2290 0AD2                              u2450 04B0  
                            u2434 0490                              u2354 042E                              u1650 079C  
                            u1570 0749                              u2530 0E6A                              u1490 0E1E  
                            u2610 0286                              u3090 00A8                              u3170 01C0  
                            u2291 0AD1                              u2451 04AF                              u2435 048E  
                            u2355 042C                              u3155 0631                              u1651 079B  
                            u1635 0784                              u1571 0748                              u2531 0E69  
                            u1491 0E1D                              u1475 0E07                              u2611 0285  
                            u2515 0E4A                              u3227 012F                              u3091 00A7  
                            u3171 01BF                              u2444 04A0                              u1660 07A1  
                            u1580 0754                              u2620 02AC                              u2445 049E  
                            u1661 07A0                              u1645 0790                              u1581 0753  
                            u1485 0E12                              u2621 02AB                              u3237 0DA3  
                            u2390 0464                              u2374 0444                              u1590 0765  
                            u2710 0F76                              u2550 0E7C                              u2630 02B7  
                            u2391 0463                              u2375 0442                              u1591 0764  
                            u2711 0F75                              u2551 0E7B                              u2631 02B6  
                            u2464 04B6                              u2384 0454                              u2480 0BD8  
                            u2720 0F80                              u2640 02BD                              u2465 04B4  
                            u2385 0452                              u2481 0BD7                              u2721 0F7F  
                            u2705 0F68                              u2545 0E6E                              u2641 02BC  
                            u2625 02A8                              u2474 04C6                              u2810 0355  
                            u2490 0BE8                              u2570 0E8D                              u2650 0311  
                            u2475 04C4                              u2811 0354                              u2491 0BE7  
                            u2571 0E8C                              u2651 0310                              u3187 0188  
                            u2900 03C7                              u2804 0345                              u2740 0F93  
                            u2660 0323                              u2901 03C6                              u2805 0343  
                            u2741 0F92                              u2725 0F7C                              u2565 0E7D  
                            u2661 0322                              u3197 0197                              u1934 0FAA  
                            u2750 0F98                              u2670 0F4E                              u2590 0EA1  
                            u1935 0FA8                              u2495 0BE4                              u2751 0F97  
                            u2735 0F87                              u2671 0F4D                              u2591 0EA0  
                            u2575 0E89                              u1944 0FB8                              u2840 037B  
                            u2824 035B                              u2680 0F59                              u2760 0EF6  
                            u1945 0FB6                              u2841 037A                              u2825 0359  
                            u2681 0F58                              u2585 0E95                              u2761 0EF5  
                            u1954 0FC6                              u2930 0BB1                              u2914 03CD  
                            u2834 036B                              u2690 0F64                              u2770 0F00  
                            u1955 0FC4                              u2931 0BB0                              u2915 03CB  
                            u2835 0369                              u2691 0F63                              u2771 0EFF  
                            _PEIE 005E                              u1964 0FD4                              u2940 0BC1  
                            u2924 03DD                              u2780 032F                              u1965 0FD2  
                            u2941 0BC0                              u2925 03DB                              u2781 032E  
                            u2870 03A1                              u2854 0381                              u2950 0C19  
                            u2871 03A0                              u2855 037F                              u2951 0C18  
                            u2864 0391                              u2945 0BBD                              u2865 038F  
                            u2794 0335                              u2795 0333                              u2884 03A7  
                            u2980 0C35                              u2885 03A5                              u2981 0C34  
                            u2965 0C22                              u2894 03B7                              u2990 0741  
                            u2895 03B5                              u2991 0740                              u2975 0C29  
                            u2995 073D                              i1l84 0AF0       __size_of_void_start_heating 0034  
                    __CFG_WRT$OFF 0000           __size_of_void_write_pin 00E9                              _main 0154  
                            _mins 0057                              _secs 0055                              _time 0062  
                            _text 00AC                              _rows 0066                              btemp 007E  
                            start 000C                 ___bmul@multiplier 0076             char_read_pin@portname 0076  
                   _void_lcd_goto 0B11             __end_of_char_read_pin 1000                             ?_main 0070  
                 __end_of___awdiv 07AB                     __CFG_WDTE$OFF 0000                   __end_of___awmod 0FA2  
                 ___awdiv@divisor 0073                             _T1CON 0010                     _void_init_lcd 04FA  
                 __end_of___lwdiv 0EA6                     _void_init_pin 0328                   __end_of___lwmod 0E23  
                 ___awdiv@counter 0020                             _TMR1H 000F                             _TMR1L 000E  
                           _PORTA 0005                             _PORTB 0006                             _PORTC 0007  
                           _PORTD 0008                             _PORTE 0009                             _TRISA 0085  
                           _TRISB 0086                             _TRISC 0087                             _TRISD 0088  
                           _TRISE 0089        __size_of_void_stop_heating 0030          __size_of_void_write_port 0039  
          void_write_pin@portname 0077                   __end_of_dpowers 07BB                             _count 005B  
                  __CFG_BOREN$OFF 0000                             pclath 000A                 ??_void_init_timer 0020  
                           status 0003                             wtemp0 007E            char_read_pin@pinnumber 0073  
                 __end_of_sprintf 0328             _void_lcd_send_command 0DAB       __end_of_void_init_actuators 0D05  
                 __initialization 000F                      __end_of_main 023E               void_write_pin@state 0074  
                  ?_void_lcd_goto 0027      void_lcd_send_command@command 0026                   _key_read_keypad 05B1  
                  ?_void_init_lcd 0070                            ??_main 0048                    ?_void_init_pin 0073  
                  _void_lcd_clear 0A97                    _void_lcd_print 0B50      void_LCD_init_Command@command 0025  
                ___awdiv@dividend 0075                            i1l2471 0AE7                            i1l2473 0AEB  
                          i1l2475 0AED                            i1l2477 0AEF                            i1l2469 0AE1  
                          u231_20 0AE7                            u231_21 0AE6                 ??_void_time_input 0022  
                          _TMR1IE 0460                            _TMR1IF 0060                            _TMR1ON 0080  
         void_write_pin@pinnumber 0073                  __end_of_delay_ms 0BE9                    __CFG_PWRTE$OFF 0000  
               void_init_keypad@x 0021                            ___bmul 0ACC                    _void_operation 0039  
                          ___wmul 0C11                         ??___awdiv 0077                         ??___awmod 0077  
                       ??___lwdiv 0077                         ??___lwmod 0027            __end_of_void_lcd_clear 0A9E  
                ___awdiv@quotient 0022                   ___awmod@divisor 0073             void_init_pin@portname 0077  
          __end_of_void_lcd_print 0B75                            _time_s 0053                   ___awmod@counter 0020  
                          _text_t 00DE        __end_of_void_lcd_send_data 0E60                 ?_void_init_keypad 0070  
                          saved_w 007E                ??_void_init_keypad 0020                         ??_sprintf 0032  
                  _void_write_pin 0411           __end_of__initialization 0035    __size_of_void_LCD_init_Command 0021  
          ?_void_lcd_send_command 0070                 ??_void_write_port 0074     __end_of_void_LCD_init_Command 0B50  
             ___bmul@multiplicand 0073           __end_of_key_read_keypad 0644            __end_of_void_operation 0154  
                 ??_void_lcd_goto 0078        void_init_timer@timer_H_reg 0074                    __pcstackCOMMON 0070  
      void_init_timer@timer_L_reg 0076                      __pidataBANK0 07F4                      __pidataBANK1 0EA6  
                 ??_void_init_lcd 0027                   ??_void_init_pin 0075                   ?_void_lcd_clear 0070  
              __size_of_delay_msk 0027                   ?_void_lcd_print 0070        __end_of_void_update_status 0DAB  
          __end_of_void_write_pin 04FA                        __pbssBANK0 0051     __size_of_void_microwave_timer 0059  
                 ?_void_operation 0070                        __pmaintext 0154                           ?___bmul 0073  
                         ?___wmul 0073                        __pintentry 0004                __size_of_timer_isr 0016  
                 _void_init_timer 0C9E                         ?_delay_ms 0073        __end_of_void_start_heating 0D39  
                 ?_void_write_pin 0073                __size_of_void_door 001A                        __stringtab 07AB  
                delay_ms@ms_Count 0073                 __end_of_delay_msk 0BC2                  ?_key_read_keypad 0024  
                 __size_of___bmul 0015                           ___awdiv 0742                           ___awmod 0F47  
                 __size_of___wmul 002B                           ___lwdiv 0E60                           ___lwmod 0DE7  
          void_init_pin@pinnumber 0073                           __ptext1 0644                           __ptext2 0C11  
                         __ptext3 0AA6                           __ptext4 0C6C                           __ptext5 0039  
                         __ptext6 0C3C                           __ptext7 0D05                           __ptext8 0EEE  
                         __ptext9 0D72                        _keypad_map 00A0                           _columns 006A  
                 _void_time_input 0644                           _dpowers 07B1                  ___awmod@dividend 0075  
                      ??_delay_ms 0075                void_time_input@arr 0024                           _sprintf 023E  
                         clrloop0 0A9F                        _pause_flag 0078               void_operation@i_161 0046  
            end_of_initialization 0035                        delay_msk@i 0020                        delay_msk@j 0022  
               _void_init_sensors 0BE9            __size_of_char_read_pin 005E                ?_void_init_sensors 0070  
               __end_of_timer_isr 0AF7                        _reset_flag 005C               ??_void_init_sensors 0020  
               __end_of_void_door 0B11           __end_of_void_init_timer 0CD1      __size_of_void_init_actuators 0034  
                 _void_write_port 0D39                        _text_debug 005D         __end_of_void_init_sensors 0C11  
         ??_void_lcd_send_command 0024                        _start_flag 0079                        _void_pause 0C6C  
                      _void_pulse 0B75                        _void_start 0AA6                _void_lcd_send_data 0E23  
       __size_of_void_init_keypad 0079               ?_void_lcd_send_data 0070                  ??_void_lcd_clear 0078  
                ??_void_lcd_print 0027           __end_of_void_time_input 06C9                    __end_of___bmul 0AE1  
                  __end_of___wmul 0C3C                         _Done_flag 0059                     _char_read_pin 0FA2  
            ??_void_lcd_send_data 0024               start_initialization 000F                  ??_void_operation 003D  
              _void_update_status 0D72             _void_LCD_init_Command 0B2F                  void_init_pin@dir 0074  
             ?_void_update_status 0070                          ??___bmul 0074                          ??___wmul 0077  
                void_init_timer@I 0073                        init_fetch0 0AB9             __end_of_void_lcd_goto 0B2F  
                     __pdataBANK0 0066                       __pdataBANK1 00A0           __end_of_void_write_port 0D72  
                  ?_char_read_pin 0073                  ?_void_init_timer 0073             __end_of_void_init_lcd 05B1  
           __end_of_void_init_pin 0411      __end_of_void_microwave_timer 0F47          void_init_timer@prescaler 0022  
                ??_void_write_pin 0075                       __pbssCOMMON 0078                         ___latbits 0002  
                   __pcstackBANK0 0020              ??_void_update_status 002B        __size_of_void_init_sensors 0028  
               __size_of_delay_ms 0027                       ?_void_pause 0070                       ?_void_pulse 0070  
                     ?_void_start 0070                       sprintf@flag 0036                       sprintf@prec 0037  
              _void_start_heating 0D05                  ___lwdiv@dividend 0075                         _delay_msk 0B9B  
                        ?___awdiv 0073                          ?___awmod 0073                          ?___lwdiv 0073  
                        ?___lwmod 0023                  ?_void_time_input 0077               ?_void_start_heating 0070  
                       __pstrings 07AB                         _door_flag 007A           void_write_port@pins_dir 0073  
                ___lwdiv@quotient 0021                          ?_sprintf 0029              ??_void_start_heating 0020  
         void_write_port@portname 0076                   void_lcd_print@i 0028               _void_init_actuators 0CD1  
               interrupt_function 0004                    ___wmul@product 0020                  _void_init_keypad 06C9  
                       delay_ms@i 0020                         delay_ms@j 0022            ?_void_LCD_init_Command 0070  
                       clear_ram0 0A9E                        ?_delay_msk 0073                   ??_char_read_pin 0074  
                       _timer_isr 0AE1              ?_void_init_actuators 0070            void_lcd_send_data@data 0026  
                key_read_keypad@c 0029                  key_read_keypad@k 002B                  key_read_keypad@r 0027  
                ?_void_write_port 0073               __size_of_void_pause 0032               __size_of_void_pulse 0026  
             __size_of_void_start 0013          __size_of_key_read_keypad 0093                       __stringbase 07B0  
               ___wmul@multiplier 0073                         _void_door 0AF7              void_time_input@input 0077  
  __size_of_void_lcd_send_command 003C     __end_of_void_lcd_send_command 0DE7              _void_microwave_timer 0EEE  
               void_lcd_goto@F869 006D                        ?_timer_isr 0070             ??_void_init_actuators 0020  
                __size_of___awdiv 0069                  __size_of___awmod 005B                  __size_of___lwdiv 0046  
                __size_of___lwmod 003C                __end_of__stringtab 07B1                        ?_void_door 0070  
            void_lcd_print@string 002A                        sprintf@val 0038                          _delay_ms 0BC2  
                 ___lwdiv@divisor 0073                   ___lwdiv@counter 0020                          __ptext10 0B50  
                        __ptext11 0E23                          __ptext20 0BE9                          __ptext12 0B11  
                        __ptext21 04FA                          __ptext13 0A97                          __ptext30 0AF7  
                        __ptext22 0DAB                          __ptext14 023E                          __ptext31 05B1  
                        __ptext23 0B2F                          __ptext15 0DE7                          __ptext32 0411  
                        __ptext24 0D39                          __ptext16 0E60                          __ptext33 0B9B  
                        __ptext25 0B75                          __ptext17 0F47                          __ptext34 0FA2  
                        __ptext26 0BC2                          __ptext18 0742                          __ptext35 0ACC  
                        __ptext27 06C9                          __ptext19 0C9E                          __ptext36 0AE1  
                        __ptext28 0CD1                          __ptext29 0328                  __size_of_sprintf 00EA  
                  void_lcd_goto@x 0027                    void_lcd_goto@y 002A                     __size_of_main 00EA  
void_lcd_goto@lcd_screen_adresses 0028             ?_void_microwave_timer 0070                       ??_delay_msk 0075  
     __size_of_void_lcd_send_data 003D                          init_ram0 0ABD                 ??_key_read_keypad 0026  
                 void_operation@i 0047                 _void_stop_heating 0C3C                      ??_void_pause 0077  
                        intlevel1 0000                      ??_void_pulse 0078                         sprintf@ap 0035  
                    ??_void_start 0077                         sprintf@sp 003A                ?_void_stop_heating 0070  
                ___lwmod@dividend 0025                         stringcode 07AB               ??_void_stop_heating 0020  
                     ??_timer_isr 0070                 delay_msk@ms_Count 0073                __end_of_void_pause 0C9E  
        __end_of_void_init_keypad 0742                       ??_void_door 0077                __end_of_void_pulse 0B9B  
              __end_of_void_start 0AB9           __size_of_void_lcd_clear 0007                          sprintf@c 003B  
                        sprintf@f 0029                   ___lwmod@divisor 0023           __size_of_void_lcd_print 0025  
                 ___lwmod@counter 0028         __end_of_void_stop_heating 0C6C                          stringdir 07AB  
                        stringtab 07AB          __size_of_void_init_timer 0033       __size_of_void_update_status 0039  
         ??_void_LCD_init_Command 0024            __size_of_void_lcd_goto 001E            ??_void_microwave_timer 003C  
          __size_of_void_init_lcd 00B7            __size_of_void_init_pin 00E9  
